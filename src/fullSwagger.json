{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "CRM API"
    },
    "basePath": "/v1",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "paths": {
      "/loyalty-card": {
        "get": {
          "description": "get list of loyalty cards based on the type eg. traveler or corporate",
          "x-swagger-router-controller": "LoyaltyCard",
          "operationId": "findLoyaltyCard",
          "tags": [
            "LoyaltyCardList"
          ],
          "responses": {
            "200": {
              "description": "Loyalty card list response",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "card_type",
                    "text",
                    "value"
                  ],
                  "properties": {
                    "card_type": {
                      "type": "string",
                      "enum": [
                        "traveler",
                        "corporate"
                      ]
                    },
                    "text": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/company": {
        "get": {
          "description": "find companies",
          "x-swagger-router-controller": "Company",
          "operationId": "findCompany",
          "tags": [
            "Company"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Search limit",
              "required": false,
              "type": "number",
              "maximum": 1000
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Search offset",
              "required": false,
              "type": "number",
              "minimum": 0
            },
            {
              "name": "q",
              "in": "query",
              "description": "Search for company with given lucene query, if present es based search will be triggered",
              "required": false,
              "type": "string"
            },
            {
              "name": "invoice_address_id",
              "in": "query",
              "description": "Search based on a invoice address id",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Company response",
              "schema": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "name",
                            "invoice_addresses",
                            "invoice_overview_receivers",
                            "language",
                            "currency",
                            "status",
                            "policies",
                            "communication_settings",
                            "credit_check_passed"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Must be unique"
                            },
                            "invoice_addresses": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "city",
                                      "country"
                                    ],
                                    "properties": {
                                      "street_1": {
                                        "type": "string"
                                      },
                                      "street_2": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "zip_code": {
                                        "type": "string"
                                      },
                                      "city": {
                                        "type": "string"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "2 letter ISO code"
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "used along with latitude to define geographic coordinates."
                                      },
                                      "latitude": {
                                        "type": "number",
                                        "description": "used along with longitude to define geographic coordinates."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Company invoice address",
                                    "required": [
                                      "company_name",
                                      "office_name",
                                      "status",
                                      "invoice_overview_receivers",
                                      "payment_method",
                                      "billing_aggregation"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "to distinguish the type of invoice address"
                                      },
                                      "vat_id": {
                                        "type": "string",
                                        "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                      },
                                      "company_name": {
                                        "type": "string",
                                        "description": "name of the company"
                                      },
                                      "office_name": {
                                        "type": "string",
                                        "description": "name which must be unique within the invoice addresses list"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "active",
                                          "inactive"
                                        ],
                                        "description": "company should have at least one active invoice address"
                                      },
                                      "invoice_overview_receivers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                        }
                                      },
                                      "payment_method": {
                                        "type": "string",
                                        "enum": [
                                          "credit_card",
                                          "invoice",
                                          "sepa",
                                          "airplus"
                                        ],
                                        "description": "The type of payment used"
                                      },
                                      "billing_aggregation": {
                                        "type": "string",
                                        "enum": [
                                          "individual",
                                          "monthly",
                                          "semimonthly"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "description": "Note existing address can not be edited or deleted"
                            },
                            "invoice_overview_receivers": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "description": "Receiver email address that invoice overview report (eom) will be sent to"
                              }
                            },
                            "finance_email": {
                              "type": "string"
                            },
                            "travel_management_email": {
                              "type": "string"
                            },
                            "language": {
                              "type": "string",
                              "enum": [
                                "de",
                                "en"
                              ],
                              "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                            },
                            "communication_settings": {
                              "type": "object",
                              "required": [
                                "confirmation",
                                "invoice",
                                "reminder"
                              ],
                              "description": "Settings that determine which persona receives which booking emails and documents.",
                              "properties": {
                                "confirmation": {
                                  "type": "string",
                                  "description": "Booking confirmation, itinerary, calendar invites",
                                  "enum": [
                                    "booker",
                                    "traveler and booker"
                                  ]
                                },
                                "invoice": {
                                  "type": "string",
                                  "enum": [
                                    "booker",
                                    "traveler and booker",
                                    "finance only"
                                  ]
                                },
                                "reminder": {
                                  "type": "string",
                                  "description": "Checkin reminder, sent out 24h prior to flight",
                                  "enum": [
                                    "traveler",
                                    "booker",
                                    "traveler and booker"
                                  ]
                                }
                              }
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "EUR"
                              ],
                              "description": "ISO-4217"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "unverified",
                                "trial",
                                "customer",
                                "inactive"
                              ]
                            },
                            "phone": {
                              "type": "string"
                            },
                            "loyalty_cards": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "description": "Traveler loyalty cards are bound to a specific person",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "pin": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                  }
                                }
                              }
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "cost_center_mandatory": {
                              "type": "boolean",
                              "default": false
                            },
                            "fare_codes": {
                              "type": "object",
                              "properties": {
                                "flight": {
                                  "type": "object",
                                  "description": "Company specific Fare codes which applicable during flight search requests.",
                                  "properties": {
                                    "web": {
                                      "type": "array",
                                      "description": "fare codes which applies for the web fares",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "carrier_code",
                                          "login_id",
                                          "api_password"
                                        ],
                                        "properties": {
                                          "carrier_code": {
                                            "type": "string"
                                          },
                                          "login_id": {
                                            "type": "string"
                                          },
                                          "api_password": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "sabre": {
                                      "type": "array",
                                      "description": "fare codes which applies for the Sabre fares",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "pricing_code",
                                          "carrier_code"
                                        ],
                                        "properties": {
                                          "pricing_code": {
                                            "type": "string"
                                          },
                                          "carrier_code": {
                                            "type": "string"
                                          },
                                          "carrier_code_osi": {
                                            "type": "string"
                                          },
                                          "osi_text1": {
                                            "type": "string"
                                          },
                                          "osi_text2": {
                                            "type": "string"
                                          },
                                          "osi_text3": {
                                            "type": "string"
                                          },
                                          "osi_text4": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "farelogix": {
                                      "type": "array",
                                      "description": "fare codes which applies for the farelogix fares",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "pricing_code"
                                        ],
                                        "properties": {
                                          "pricing_code": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "hotel": {
                                  "type": "object",
                                  "description": "Company specific Fare codes which applicable during hotel search requests.",
                                  "properties": {
                                    "booking_com": {
                                      "type": "object",
                                      "description": "fare codes which applies for the booking.com search",
                                      "required": [
                                        "affiliate_id"
                                      ],
                                      "properties": {
                                        "affiliate_id": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "hrs": {
                                      "type": "object",
                                      "description": "fare codes which applies for the hrs search",
                                      "required": [
                                        "customer_key",
                                        "f_key"
                                      ],
                                      "properties": {
                                        "customer_key": {
                                          "type": "string"
                                        },
                                        "f_key": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "policies": {
                              "type": "array",
                              "minLength": 1,
                              "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                              "items": {
                                "type": "object",
                                "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                                "required": [
                                  "id",
                                  "name",
                                  "default"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "name of the policy"
                                  },
                                  "default": {
                                    "type": "boolean",
                                    "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                                  },
                                  "meta_data": {
                                    "type": "object",
                                    "description": "Some meta data we attach to all items we care about.",
                                    "properties": {
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "created_by": {
                                        "type": "string",
                                        "description": "Email of the user who created this item"
                                      },
                                      "updated_by": {
                                        "type": "string",
                                        "description": "Email of the user who updated this item"
                                      }
                                    }
                                  },
                                  "flight": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "required": [
                                          "cabin_class_rules"
                                        ],
                                        "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                        "properties": {
                                          "cabin_class_rules": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "duration_from",
                                                "cabin_class"
                                              ],
                                              "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                              "properties": {
                                                "duration_from": {
                                                  "type": "number",
                                                  "minimum": 0,
                                                  "maximum": 24,
                                                  "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                                },
                                                "duration_to": {
                                                  "type": "number",
                                                  "minimum": 1,
                                                  "maximum": 24,
                                                  "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                                },
                                                "cabin_class": {
                                                  "description": "Highest allowed cabin class for this rule.",
                                                  "type": "string",
                                                  "enum": [
                                                    "economy",
                                                    "economy plus",
                                                    "business",
                                                    "first"
                                                  ]
                                                },
                                                "budget": {
                                                  "type": "number",
                                                  "minimum": 1,
                                                  "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                                }
                                              }
                                            },
                                            "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "properties": {
                                          "preferred_airlines": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "avoided_airlines": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "luggage": {
                                            "type": "boolean"
                                          },
                                          "rebookable": {
                                            "type": "boolean"
                                          },
                                          "cancelable": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "hotel": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "required": [
                                          "country_budgets"
                                        ],
                                        "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                        "properties": {
                                          "max_stars": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 5,
                                            "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                          },
                                          "default_budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                          },
                                          "country_budgets": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "country",
                                                "budget"
                                              ],
                                              "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                              "properties": {
                                                "country": {
                                                  "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                                  "type": "string",
                                                  "pattern": "^[A-Z]{2}$"
                                                },
                                                "budget": {
                                                  "type": "number",
                                                  "minimum": 1,
                                                  "description": "Max budget in EUR per night, same semantics as default_budget."
                                                }
                                              }
                                            },
                                            "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "properties": {
                                          "min_stars": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 5,
                                            "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                          },
                                          "includes_breakfast": {
                                            "type": "boolean"
                                          },
                                          "includes_wifi": {
                                            "type": "boolean"
                                          },
                                          "cancelable": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rental_car": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                        "properties": {
                                          "max_class": {
                                            "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                            "type": "string",
                                            "enum": [
                                              "M",
                                              "N",
                                              "E",
                                              "H",
                                              "C",
                                              "D",
                                              "I",
                                              "J",
                                              "S",
                                              "R",
                                              "F",
                                              "G",
                                              "P",
                                              "U",
                                              "L",
                                              "W",
                                              "O",
                                              "X"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "required": [
                                          "preferred_vendors",
                                          "avoided_vendors"
                                        ],
                                        "properties": {
                                          "preferred_vendors": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "enum": [
                                                "Europcar",
                                                "Enterprise",
                                                "Hertz",
                                                "Sixt"
                                              ]
                                            }
                                          },
                                          "avoided_vendors": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "enum": [
                                                "Europcar",
                                                "Enterprise",
                                                "Hertz",
                                                "Sixt"
                                              ]
                                            }
                                          },
                                          "insurance": {
                                            "type": "string",
                                            "enum": [
                                              "yes with excess",
                                              "yes without excess"
                                            ]
                                          },
                                          "navigation_system": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "train": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                        "properties": {
                                          "max_class": {
                                            "description": "Defines the highest train class that travelers are allowed to travel in.",
                                            "type": "string",
                                            "enum": [
                                              "1",
                                              "2"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "properties": {
                                          "seat_reservation_against_payment": {
                                            "type": "boolean"
                                          },
                                          "flexible": {
                                            "type": "boolean"
                                          },
                                          "cancelable": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "policy_remarks": {
                              "type": "object",
                              "properties": {
                                "flight": {
                                  "type": "string"
                                },
                                "hotel": {
                                  "type": "string"
                                },
                                "train": {
                                  "type": "string"
                                },
                                "rental_car": {
                                  "type": "string"
                                }
                              }
                            },
                            "monthly_booking_volume": {
                              "type": "number",
                              "enum": [
                                5,
                                10,
                                20,
                                50,
                                100,
                                200,
                                500
                              ]
                            },
                            "credit_check_passed": {
                              "type": "boolean"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "pricing": {
                              "type": "object",
                              "properties": {
                                "payment_fee": {
                                  "type": "boolean",
                                  "description": "Whether payment fees should be applied."
                                },
                                "apply_booking_fee": {
                                  "type": "boolean",
                                  "description": "Whether booking fees should be applied"
                                },
                                "booking_fee_data": {
                                  "type": "object",
                                  "required": [
                                    "domestic_countries",
                                    "continents",
                                    "booking_fees"
                                  ],
                                  "properties": {
                                    "booking_fees": {
                                      "type": "object",
                                      "required": [
                                        "flight",
                                        "hotel",
                                        "rental_car",
                                        "train"
                                      ],
                                      "description": "Preferences regarding booking fees",
                                      "properties": {
                                        "flight": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "value",
                                                      "comtravo_fee_source"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "number"
                                                      },
                                                      "comtravo_fee_source": {
                                                        "type": "string",
                                                        "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                        "enum": [
                                                          "online",
                                                          "offline"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "geography"
                                                    ],
                                                    "properties": {
                                                      "geography": {
                                                        "enum": [
                                                          "domestic",
                                                          "continental",
                                                          "others"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "value",
                                                      "comtravo_fee_source"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "number"
                                                      },
                                                      "comtravo_fee_source": {
                                                        "type": "string",
                                                        "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                        "enum": [
                                                          "online",
                                                          "offline"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "geography"
                                                    ],
                                                    "properties": {
                                                      "geography": {
                                                        "enum": [
                                                          "domestic",
                                                          "continental",
                                                          "others"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "value",
                                                      "comtravo_fee_source"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "number"
                                                      },
                                                      "comtravo_fee_source": {
                                                        "type": "string",
                                                        "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                        "enum": [
                                                          "online",
                                                          "offline"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "geography"
                                                    ],
                                                    "properties": {
                                                      "geography": {
                                                        "enum": [
                                                          "domestic",
                                                          "continental",
                                                          "others"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "hotel": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rental_car": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "train": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "domestic_countries": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "continents": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "integrations": {
                              "type": "object",
                              "properties": {
                                "circula": {
                                  "type": "object",
                                  "description": "Circula integration detail.",
                                  "properties": {
                                    "token": {
                                      "type": "string",
                                      "description": "Circula integration token"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "_id",
                        "__v"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Technical PK"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "post": {
          "description": "Creates a new company",
          "x-swagger-router-controller": "Company",
          "operationId": "createCompany",
          "tags": [
            "Company"
          ],
          "parameters": [
            {
              "name": "requestBody",
              "in": "body",
              "description": "company to add",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "invoice_addresses",
                      "invoice_overview_receivers",
                      "language",
                      "currency",
                      "status",
                      "policies",
                      "communication_settings",
                      "credit_check_passed"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Must be unique"
                      },
                      "invoice_addresses": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "city",
                                "country"
                              ],
                              "properties": {
                                "street_1": {
                                  "type": "string"
                                },
                                "street_2": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "2 letter ISO code"
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "used along with latitude to define geographic coordinates."
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "used along with longitude to define geographic coordinates."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Company invoice address",
                              "required": [
                                "company_name",
                                "office_name",
                                "status",
                                "invoice_overview_receivers",
                                "payment_method",
                                "billing_aggregation"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "to distinguish the type of invoice address"
                                },
                                "vat_id": {
                                  "type": "string",
                                  "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "name of the company"
                                },
                                "office_name": {
                                  "type": "string",
                                  "description": "name which must be unique within the invoice addresses list"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "description": "company should have at least one active invoice address"
                                },
                                "invoice_overview_receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                  }
                                },
                                "payment_method": {
                                  "type": "string",
                                  "enum": [
                                    "credit_card",
                                    "invoice",
                                    "sepa",
                                    "airplus"
                                  ],
                                  "description": "The type of payment used"
                                },
                                "billing_aggregation": {
                                  "type": "string",
                                  "enum": [
                                    "individual",
                                    "monthly",
                                    "semimonthly"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "description": "Note existing address can not be edited or deleted"
                      },
                      "invoice_overview_receivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "description": "Receiver email address that invoice overview report (eom) will be sent to"
                        }
                      },
                      "finance_email": {
                        "type": "string"
                      },
                      "travel_management_email": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                      },
                      "communication_settings": {
                        "type": "object",
                        "required": [
                          "confirmation",
                          "invoice",
                          "reminder"
                        ],
                        "description": "Settings that determine which persona receives which booking emails and documents.",
                        "properties": {
                          "confirmation": {
                            "type": "string",
                            "description": "Booking confirmation, itinerary, calendar invites",
                            "enum": [
                              "booker",
                              "traveler and booker"
                            ]
                          },
                          "invoice": {
                            "type": "string",
                            "enum": [
                              "booker",
                              "traveler and booker",
                              "finance only"
                            ]
                          },
                          "reminder": {
                            "type": "string",
                            "description": "Checkin reminder, sent out 24h prior to flight",
                            "enum": [
                              "traveler",
                              "booker",
                              "traveler and booker"
                            ]
                          }
                        }
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "EUR"
                        ],
                        "description": "ISO-4217"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "unverified",
                          "trial",
                          "customer",
                          "inactive"
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "cost_center_mandatory": {
                        "type": "boolean",
                        "default": false
                      },
                      "fare_codes": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during flight search requests.",
                            "properties": {
                              "web": {
                                "type": "array",
                                "description": "fare codes which applies for the web fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "carrier_code",
                                    "login_id",
                                    "api_password"
                                  ],
                                  "properties": {
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "login_id": {
                                      "type": "string"
                                    },
                                    "api_password": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "sabre": {
                                "type": "array",
                                "description": "fare codes which applies for the Sabre fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code",
                                    "carrier_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    },
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "carrier_code_osi": {
                                      "type": "string"
                                    },
                                    "osi_text1": {
                                      "type": "string"
                                    },
                                    "osi_text2": {
                                      "type": "string"
                                    },
                                    "osi_text3": {
                                      "type": "string"
                                    },
                                    "osi_text4": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "farelogix": {
                                "type": "array",
                                "description": "fare codes which applies for the farelogix fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hotel": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during hotel search requests.",
                            "properties": {
                              "booking_com": {
                                "type": "object",
                                "description": "fare codes which applies for the booking.com search",
                                "required": [
                                  "affiliate_id"
                                ],
                                "properties": {
                                  "affiliate_id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "hrs": {
                                "type": "object",
                                "description": "fare codes which applies for the hrs search",
                                "required": [
                                  "customer_key",
                                  "f_key"
                                ],
                                "properties": {
                                  "customer_key": {
                                    "type": "string"
                                  },
                                  "f_key": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "minLength": 1,
                        "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                        "items": {
                          "type": "object",
                          "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                          "required": [
                            "id",
                            "name",
                            "default"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                            },
                            "name": {
                              "type": "string",
                              "description": "name of the policy"
                            },
                            "default": {
                              "type": "boolean",
                              "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "flight": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "cabin_class_rules"
                                  ],
                                  "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                  "properties": {
                                    "cabin_class_rules": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "duration_from",
                                          "cabin_class"
                                        ],
                                        "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                        "properties": {
                                          "duration_from": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                          },
                                          "duration_to": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                          },
                                          "cabin_class": {
                                            "description": "Highest allowed cabin class for this rule.",
                                            "type": "string",
                                            "enum": [
                                              "economy",
                                              "economy plus",
                                              "business",
                                              "first"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                          }
                                        }
                                      },
                                      "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "preferred_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "avoided_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "luggage": {
                                      "type": "boolean"
                                    },
                                    "rebookable": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "hotel": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "country_budgets"
                                  ],
                                  "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                  "properties": {
                                    "max_stars": {
                                      "type": "number",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                    },
                                    "default_budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                    },
                                    "country_budgets": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "country",
                                          "budget"
                                        ],
                                        "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                        "properties": {
                                          "country": {
                                            "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                            "type": "string",
                                            "pattern": "^[A-Z]{2}$"
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per night, same semantics as default_budget."
                                          }
                                        }
                                      },
                                      "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "min_stars": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                    },
                                    "includes_breakfast": {
                                      "type": "boolean"
                                    },
                                    "includes_wifi": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "rental_car": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                      "type": "string",
                                      "enum": [
                                        "M",
                                        "N",
                                        "E",
                                        "H",
                                        "C",
                                        "D",
                                        "I",
                                        "J",
                                        "S",
                                        "R",
                                        "F",
                                        "G",
                                        "P",
                                        "U",
                                        "L",
                                        "W",
                                        "O",
                                        "X"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "required": [
                                    "preferred_vendors",
                                    "avoided_vendors"
                                  ],
                                  "properties": {
                                    "preferred_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "avoided_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "insurance": {
                                      "type": "string",
                                      "enum": [
                                        "yes with excess",
                                        "yes without excess"
                                      ]
                                    },
                                    "navigation_system": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "train": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Defines the highest train class that travelers are allowed to travel in.",
                                      "type": "string",
                                      "enum": [
                                        "1",
                                        "2"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "seat_reservation_against_payment": {
                                      "type": "boolean"
                                    },
                                    "flexible": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policy_remarks": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "string"
                          },
                          "hotel": {
                            "type": "string"
                          },
                          "train": {
                            "type": "string"
                          },
                          "rental_car": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_booking_volume": {
                        "type": "number",
                        "enum": [
                          5,
                          10,
                          20,
                          50,
                          100,
                          200,
                          500
                        ]
                      },
                      "credit_check_passed": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "pricing": {
                        "type": "object",
                        "properties": {
                          "payment_fee": {
                            "type": "boolean",
                            "description": "Whether payment fees should be applied."
                          },
                          "apply_booking_fee": {
                            "type": "boolean",
                            "description": "Whether booking fees should be applied"
                          },
                          "booking_fee_data": {
                            "type": "object",
                            "required": [
                              "domestic_countries",
                              "continents",
                              "booking_fees"
                            ],
                            "properties": {
                              "booking_fees": {
                                "type": "object",
                                "required": [
                                  "flight",
                                  "hotel",
                                  "rental_car",
                                  "train"
                                ],
                                "description": "Preferences regarding booking fees",
                                "properties": {
                                  "flight": {
                                    "type": "object",
                                    "required": [
                                      "booking",
                                      "rebooking",
                                      "cancelation"
                                    ],
                                    "properties": {
                                      "booking": {
                                        "type": "array",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "geography"
                                              ],
                                              "properties": {
                                                "geography": {
                                                  "enum": [
                                                    "domestic",
                                                    "continental",
                                                    "others"
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "rebooking": {
                                        "type": "array",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "geography"
                                              ],
                                              "properties": {
                                                "geography": {
                                                  "enum": [
                                                    "domestic",
                                                    "continental",
                                                    "others"
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "cancelation": {
                                        "type": "array",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "geography"
                                              ],
                                              "properties": {
                                                "geography": {
                                                  "enum": [
                                                    "domestic",
                                                    "continental",
                                                    "others"
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "hotel": {
                                    "type": "object",
                                    "required": [
                                      "booking",
                                      "rebooking",
                                      "cancelation"
                                    ],
                                    "properties": {
                                      "booking": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "rebooking": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "cancelation": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rental_car": {
                                    "type": "object",
                                    "required": [
                                      "booking",
                                      "rebooking",
                                      "cancelation"
                                    ],
                                    "properties": {
                                      "booking": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "rebooking": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "cancelation": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "train": {
                                    "type": "object",
                                    "required": [
                                      "booking",
                                      "rebooking",
                                      "cancelation"
                                    ],
                                    "properties": {
                                      "booking": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "rebooking": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "cancelation": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "domestic_countries": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "continents": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "integrations": {
                        "type": "object",
                        "properties": {
                          "circula": {
                            "type": "object",
                            "description": "Circula integration detail.",
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Circula integration token"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Company response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "invoice_addresses",
                          "invoice_overview_receivers",
                          "language",
                          "currency",
                          "status",
                          "policies",
                          "communication_settings",
                          "credit_check_passed"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Must be unique"
                          },
                          "invoice_addresses": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Company invoice address",
                                  "required": [
                                    "company_name",
                                    "office_name",
                                    "status",
                                    "invoice_overview_receivers",
                                    "payment_method",
                                    "billing_aggregation"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "to distinguish the type of invoice address"
                                    },
                                    "vat_id": {
                                      "type": "string",
                                      "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                    },
                                    "company_name": {
                                      "type": "string",
                                      "description": "name of the company"
                                    },
                                    "office_name": {
                                      "type": "string",
                                      "description": "name which must be unique within the invoice addresses list"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "active",
                                        "inactive"
                                      ],
                                      "description": "company should have at least one active invoice address"
                                    },
                                    "invoice_overview_receivers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                      }
                                    },
                                    "payment_method": {
                                      "type": "string",
                                      "enum": [
                                        "credit_card",
                                        "invoice",
                                        "sepa",
                                        "airplus"
                                      ],
                                      "description": "The type of payment used"
                                    },
                                    "billing_aggregation": {
                                      "type": "string",
                                      "enum": [
                                        "individual",
                                        "monthly",
                                        "semimonthly"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "description": "Note existing address can not be edited or deleted"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to"
                            }
                          },
                          "finance_email": {
                            "type": "string"
                          },
                          "travel_management_email": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                          },
                          "communication_settings": {
                            "type": "object",
                            "required": [
                              "confirmation",
                              "invoice",
                              "reminder"
                            ],
                            "description": "Settings that determine which persona receives which booking emails and documents.",
                            "properties": {
                              "confirmation": {
                                "type": "string",
                                "description": "Booking confirmation, itinerary, calendar invites",
                                "enum": [
                                  "booker",
                                  "traveler and booker"
                                ]
                              },
                              "invoice": {
                                "type": "string",
                                "enum": [
                                  "booker",
                                  "traveler and booker",
                                  "finance only"
                                ]
                              },
                              "reminder": {
                                "type": "string",
                                "description": "Checkin reminder, sent out 24h prior to flight",
                                "enum": [
                                  "traveler",
                                  "booker",
                                  "traveler and booker"
                                ]
                              }
                            }
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "EUR"
                            ],
                            "description": "ISO-4217"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "unverified",
                              "trial",
                              "customer",
                              "inactive"
                            ]
                          },
                          "phone": {
                            "type": "string"
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "cost_center_mandatory": {
                            "type": "boolean",
                            "default": false
                          },
                          "fare_codes": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during flight search requests.",
                                "properties": {
                                  "web": {
                                    "type": "array",
                                    "description": "fare codes which applies for the web fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "carrier_code",
                                        "login_id",
                                        "api_password"
                                      ],
                                      "properties": {
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "login_id": {
                                          "type": "string"
                                        },
                                        "api_password": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "sabre": {
                                    "type": "array",
                                    "description": "fare codes which applies for the Sabre fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code",
                                        "carrier_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        },
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "carrier_code_osi": {
                                          "type": "string"
                                        },
                                        "osi_text1": {
                                          "type": "string"
                                        },
                                        "osi_text2": {
                                          "type": "string"
                                        },
                                        "osi_text3": {
                                          "type": "string"
                                        },
                                        "osi_text4": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "farelogix": {
                                    "type": "array",
                                    "description": "fare codes which applies for the farelogix fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hotel": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during hotel search requests.",
                                "properties": {
                                  "booking_com": {
                                    "type": "object",
                                    "description": "fare codes which applies for the booking.com search",
                                    "required": [
                                      "affiliate_id"
                                    ],
                                    "properties": {
                                      "affiliate_id": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "hrs": {
                                    "type": "object",
                                    "description": "fare codes which applies for the hrs search",
                                    "required": [
                                      "customer_key",
                                      "f_key"
                                    ],
                                    "properties": {
                                      "customer_key": {
                                        "type": "string"
                                      },
                                      "f_key": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policies": {
                            "type": "array",
                            "minLength": 1,
                            "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                            "items": {
                              "type": "object",
                              "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                              "required": [
                                "id",
                                "name",
                                "default"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name of the policy"
                                },
                                "default": {
                                  "type": "boolean",
                                  "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                                },
                                "meta_data": {
                                  "type": "object",
                                  "description": "Some meta data we attach to all items we care about.",
                                  "properties": {
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "created_by": {
                                      "type": "string",
                                      "description": "Email of the user who created this item"
                                    },
                                    "updated_by": {
                                      "type": "string",
                                      "description": "Email of the user who updated this item"
                                    }
                                  }
                                },
                                "flight": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "cabin_class_rules"
                                      ],
                                      "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                      "properties": {
                                        "cabin_class_rules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "duration_from",
                                              "cabin_class"
                                            ],
                                            "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                            "properties": {
                                              "duration_from": {
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                              },
                                              "duration_to": {
                                                "type": "number",
                                                "minimum": 1,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                              },
                                              "cabin_class": {
                                                "description": "Highest allowed cabin class for this rule.",
                                                "type": "string",
                                                "enum": [
                                                  "economy",
                                                  "economy plus",
                                                  "business",
                                                  "first"
                                                ]
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                              }
                                            }
                                          },
                                          "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "preferred_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "avoided_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "luggage": {
                                          "type": "boolean"
                                        },
                                        "rebookable": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "hotel": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "country_budgets"
                                      ],
                                      "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                      "properties": {
                                        "max_stars": {
                                          "type": "number",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                        },
                                        "default_budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                        },
                                        "country_budgets": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "country",
                                              "budget"
                                            ],
                                            "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                            "properties": {
                                              "country": {
                                                "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                                "type": "string",
                                                "pattern": "^[A-Z]{2}$"
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per night, same semantics as default_budget."
                                              }
                                            }
                                          },
                                          "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "min_stars": {
                                          "type": "integer",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                        },
                                        "includes_breakfast": {
                                          "type": "boolean"
                                        },
                                        "includes_wifi": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rental_car": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                          "type": "string",
                                          "enum": [
                                            "M",
                                            "N",
                                            "E",
                                            "H",
                                            "C",
                                            "D",
                                            "I",
                                            "J",
                                            "S",
                                            "R",
                                            "F",
                                            "G",
                                            "P",
                                            "U",
                                            "L",
                                            "W",
                                            "O",
                                            "X"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "required": [
                                        "preferred_vendors",
                                        "avoided_vendors"
                                      ],
                                      "properties": {
                                        "preferred_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "avoided_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "insurance": {
                                          "type": "string",
                                          "enum": [
                                            "yes with excess",
                                            "yes without excess"
                                          ]
                                        },
                                        "navigation_system": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Defines the highest train class that travelers are allowed to travel in.",
                                          "type": "string",
                                          "enum": [
                                            "1",
                                            "2"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "seat_reservation_against_payment": {
                                          "type": "boolean"
                                        },
                                        "flexible": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policy_remarks": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "string"
                              },
                              "hotel": {
                                "type": "string"
                              },
                              "train": {
                                "type": "string"
                              },
                              "rental_car": {
                                "type": "string"
                              }
                            }
                          },
                          "monthly_booking_volume": {
                            "type": "number",
                            "enum": [
                              5,
                              10,
                              20,
                              50,
                              100,
                              200,
                              500
                            ]
                          },
                          "credit_check_passed": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pricing": {
                            "type": "object",
                            "properties": {
                              "payment_fee": {
                                "type": "boolean",
                                "description": "Whether payment fees should be applied."
                              },
                              "apply_booking_fee": {
                                "type": "boolean",
                                "description": "Whether booking fees should be applied"
                              },
                              "booking_fee_data": {
                                "type": "object",
                                "required": [
                                  "domestic_countries",
                                  "continents",
                                  "booking_fees"
                                ],
                                "properties": {
                                  "booking_fees": {
                                    "type": "object",
                                    "required": [
                                      "flight",
                                      "hotel",
                                      "rental_car",
                                      "train"
                                    ],
                                    "description": "Preferences regarding booking fees",
                                    "properties": {
                                      "flight": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "hotel": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rental_car": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "train": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "domestic_countries": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "continents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "properties": {
                              "circula": {
                                "type": "object",
                                "description": "Circula integration detail.",
                                "properties": {
                                  "token": {
                                    "type": "string",
                                    "description": "Circula integration token"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/company/{id}": {
        "get": {
          "description": "Get a company",
          "x-swagger-router-controller": "Company",
          "operationId": "getCompany",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "Company"
          ],
          "responses": {
            "200": {
              "description": "Company response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "invoice_addresses",
                          "invoice_overview_receivers",
                          "language",
                          "currency",
                          "status",
                          "policies",
                          "communication_settings",
                          "credit_check_passed"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Must be unique"
                          },
                          "invoice_addresses": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Company invoice address",
                                  "required": [
                                    "company_name",
                                    "office_name",
                                    "status",
                                    "invoice_overview_receivers",
                                    "payment_method",
                                    "billing_aggregation"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "to distinguish the type of invoice address"
                                    },
                                    "vat_id": {
                                      "type": "string",
                                      "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                    },
                                    "company_name": {
                                      "type": "string",
                                      "description": "name of the company"
                                    },
                                    "office_name": {
                                      "type": "string",
                                      "description": "name which must be unique within the invoice addresses list"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "active",
                                        "inactive"
                                      ],
                                      "description": "company should have at least one active invoice address"
                                    },
                                    "invoice_overview_receivers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                      }
                                    },
                                    "payment_method": {
                                      "type": "string",
                                      "enum": [
                                        "credit_card",
                                        "invoice",
                                        "sepa",
                                        "airplus"
                                      ],
                                      "description": "The type of payment used"
                                    },
                                    "billing_aggregation": {
                                      "type": "string",
                                      "enum": [
                                        "individual",
                                        "monthly",
                                        "semimonthly"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "description": "Note existing address can not be edited or deleted"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to"
                            }
                          },
                          "finance_email": {
                            "type": "string"
                          },
                          "travel_management_email": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                          },
                          "communication_settings": {
                            "type": "object",
                            "required": [
                              "confirmation",
                              "invoice",
                              "reminder"
                            ],
                            "description": "Settings that determine which persona receives which booking emails and documents.",
                            "properties": {
                              "confirmation": {
                                "type": "string",
                                "description": "Booking confirmation, itinerary, calendar invites",
                                "enum": [
                                  "booker",
                                  "traveler and booker"
                                ]
                              },
                              "invoice": {
                                "type": "string",
                                "enum": [
                                  "booker",
                                  "traveler and booker",
                                  "finance only"
                                ]
                              },
                              "reminder": {
                                "type": "string",
                                "description": "Checkin reminder, sent out 24h prior to flight",
                                "enum": [
                                  "traveler",
                                  "booker",
                                  "traveler and booker"
                                ]
                              }
                            }
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "EUR"
                            ],
                            "description": "ISO-4217"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "unverified",
                              "trial",
                              "customer",
                              "inactive"
                            ]
                          },
                          "phone": {
                            "type": "string"
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "cost_center_mandatory": {
                            "type": "boolean",
                            "default": false
                          },
                          "fare_codes": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during flight search requests.",
                                "properties": {
                                  "web": {
                                    "type": "array",
                                    "description": "fare codes which applies for the web fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "carrier_code",
                                        "login_id",
                                        "api_password"
                                      ],
                                      "properties": {
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "login_id": {
                                          "type": "string"
                                        },
                                        "api_password": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "sabre": {
                                    "type": "array",
                                    "description": "fare codes which applies for the Sabre fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code",
                                        "carrier_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        },
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "carrier_code_osi": {
                                          "type": "string"
                                        },
                                        "osi_text1": {
                                          "type": "string"
                                        },
                                        "osi_text2": {
                                          "type": "string"
                                        },
                                        "osi_text3": {
                                          "type": "string"
                                        },
                                        "osi_text4": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "farelogix": {
                                    "type": "array",
                                    "description": "fare codes which applies for the farelogix fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hotel": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during hotel search requests.",
                                "properties": {
                                  "booking_com": {
                                    "type": "object",
                                    "description": "fare codes which applies for the booking.com search",
                                    "required": [
                                      "affiliate_id"
                                    ],
                                    "properties": {
                                      "affiliate_id": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "hrs": {
                                    "type": "object",
                                    "description": "fare codes which applies for the hrs search",
                                    "required": [
                                      "customer_key",
                                      "f_key"
                                    ],
                                    "properties": {
                                      "customer_key": {
                                        "type": "string"
                                      },
                                      "f_key": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policies": {
                            "type": "array",
                            "minLength": 1,
                            "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                            "items": {
                              "type": "object",
                              "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                              "required": [
                                "id",
                                "name",
                                "default"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name of the policy"
                                },
                                "default": {
                                  "type": "boolean",
                                  "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                                },
                                "meta_data": {
                                  "type": "object",
                                  "description": "Some meta data we attach to all items we care about.",
                                  "properties": {
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "created_by": {
                                      "type": "string",
                                      "description": "Email of the user who created this item"
                                    },
                                    "updated_by": {
                                      "type": "string",
                                      "description": "Email of the user who updated this item"
                                    }
                                  }
                                },
                                "flight": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "cabin_class_rules"
                                      ],
                                      "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                      "properties": {
                                        "cabin_class_rules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "duration_from",
                                              "cabin_class"
                                            ],
                                            "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                            "properties": {
                                              "duration_from": {
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                              },
                                              "duration_to": {
                                                "type": "number",
                                                "minimum": 1,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                              },
                                              "cabin_class": {
                                                "description": "Highest allowed cabin class for this rule.",
                                                "type": "string",
                                                "enum": [
                                                  "economy",
                                                  "economy plus",
                                                  "business",
                                                  "first"
                                                ]
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                              }
                                            }
                                          },
                                          "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "preferred_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "avoided_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "luggage": {
                                          "type": "boolean"
                                        },
                                        "rebookable": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "hotel": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "country_budgets"
                                      ],
                                      "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                      "properties": {
                                        "max_stars": {
                                          "type": "number",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                        },
                                        "default_budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                        },
                                        "country_budgets": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "country",
                                              "budget"
                                            ],
                                            "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                            "properties": {
                                              "country": {
                                                "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                                "type": "string",
                                                "pattern": "^[A-Z]{2}$"
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per night, same semantics as default_budget."
                                              }
                                            }
                                          },
                                          "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "min_stars": {
                                          "type": "integer",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                        },
                                        "includes_breakfast": {
                                          "type": "boolean"
                                        },
                                        "includes_wifi": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rental_car": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                          "type": "string",
                                          "enum": [
                                            "M",
                                            "N",
                                            "E",
                                            "H",
                                            "C",
                                            "D",
                                            "I",
                                            "J",
                                            "S",
                                            "R",
                                            "F",
                                            "G",
                                            "P",
                                            "U",
                                            "L",
                                            "W",
                                            "O",
                                            "X"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "required": [
                                        "preferred_vendors",
                                        "avoided_vendors"
                                      ],
                                      "properties": {
                                        "preferred_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "avoided_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "insurance": {
                                          "type": "string",
                                          "enum": [
                                            "yes with excess",
                                            "yes without excess"
                                          ]
                                        },
                                        "navigation_system": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Defines the highest train class that travelers are allowed to travel in.",
                                          "type": "string",
                                          "enum": [
                                            "1",
                                            "2"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "seat_reservation_against_payment": {
                                          "type": "boolean"
                                        },
                                        "flexible": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policy_remarks": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "string"
                              },
                              "hotel": {
                                "type": "string"
                              },
                              "train": {
                                "type": "string"
                              },
                              "rental_car": {
                                "type": "string"
                              }
                            }
                          },
                          "monthly_booking_volume": {
                            "type": "number",
                            "enum": [
                              5,
                              10,
                              20,
                              50,
                              100,
                              200,
                              500
                            ]
                          },
                          "credit_check_passed": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pricing": {
                            "type": "object",
                            "properties": {
                              "payment_fee": {
                                "type": "boolean",
                                "description": "Whether payment fees should be applied."
                              },
                              "apply_booking_fee": {
                                "type": "boolean",
                                "description": "Whether booking fees should be applied"
                              },
                              "booking_fee_data": {
                                "type": "object",
                                "required": [
                                  "domestic_countries",
                                  "continents",
                                  "booking_fees"
                                ],
                                "properties": {
                                  "booking_fees": {
                                    "type": "object",
                                    "required": [
                                      "flight",
                                      "hotel",
                                      "rental_car",
                                      "train"
                                    ],
                                    "description": "Preferences regarding booking fees",
                                    "properties": {
                                      "flight": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "hotel": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rental_car": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "train": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "domestic_countries": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "continents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "properties": {
                              "circula": {
                                "type": "object",
                                "description": "Circula integration detail.",
                                "properties": {
                                  "token": {
                                    "type": "string",
                                    "description": "Circula integration token"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "put": {
          "description": "Update a company",
          "x-swagger-router-controller": "Company",
          "operationId": "updateCompany",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "in": "body",
              "description": "company to edit",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "invoice_addresses",
                          "invoice_overview_receivers",
                          "language",
                          "currency",
                          "status",
                          "policies",
                          "communication_settings",
                          "credit_check_passed"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Must be unique"
                          },
                          "invoice_addresses": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Company invoice address",
                                  "required": [
                                    "company_name",
                                    "office_name",
                                    "status",
                                    "invoice_overview_receivers",
                                    "payment_method",
                                    "billing_aggregation"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "to distinguish the type of invoice address"
                                    },
                                    "vat_id": {
                                      "type": "string",
                                      "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                    },
                                    "company_name": {
                                      "type": "string",
                                      "description": "name of the company"
                                    },
                                    "office_name": {
                                      "type": "string",
                                      "description": "name which must be unique within the invoice addresses list"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "active",
                                        "inactive"
                                      ],
                                      "description": "company should have at least one active invoice address"
                                    },
                                    "invoice_overview_receivers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                      }
                                    },
                                    "payment_method": {
                                      "type": "string",
                                      "enum": [
                                        "credit_card",
                                        "invoice",
                                        "sepa",
                                        "airplus"
                                      ],
                                      "description": "The type of payment used"
                                    },
                                    "billing_aggregation": {
                                      "type": "string",
                                      "enum": [
                                        "individual",
                                        "monthly",
                                        "semimonthly"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "description": "Note existing address can not be edited or deleted"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to"
                            }
                          },
                          "finance_email": {
                            "type": "string"
                          },
                          "travel_management_email": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                          },
                          "communication_settings": {
                            "type": "object",
                            "required": [
                              "confirmation",
                              "invoice",
                              "reminder"
                            ],
                            "description": "Settings that determine which persona receives which booking emails and documents.",
                            "properties": {
                              "confirmation": {
                                "type": "string",
                                "description": "Booking confirmation, itinerary, calendar invites",
                                "enum": [
                                  "booker",
                                  "traveler and booker"
                                ]
                              },
                              "invoice": {
                                "type": "string",
                                "enum": [
                                  "booker",
                                  "traveler and booker",
                                  "finance only"
                                ]
                              },
                              "reminder": {
                                "type": "string",
                                "description": "Checkin reminder, sent out 24h prior to flight",
                                "enum": [
                                  "traveler",
                                  "booker",
                                  "traveler and booker"
                                ]
                              }
                            }
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "EUR"
                            ],
                            "description": "ISO-4217"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "unverified",
                              "trial",
                              "customer",
                              "inactive"
                            ]
                          },
                          "phone": {
                            "type": "string"
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "cost_center_mandatory": {
                            "type": "boolean",
                            "default": false
                          },
                          "fare_codes": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during flight search requests.",
                                "properties": {
                                  "web": {
                                    "type": "array",
                                    "description": "fare codes which applies for the web fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "carrier_code",
                                        "login_id",
                                        "api_password"
                                      ],
                                      "properties": {
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "login_id": {
                                          "type": "string"
                                        },
                                        "api_password": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "sabre": {
                                    "type": "array",
                                    "description": "fare codes which applies for the Sabre fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code",
                                        "carrier_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        },
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "carrier_code_osi": {
                                          "type": "string"
                                        },
                                        "osi_text1": {
                                          "type": "string"
                                        },
                                        "osi_text2": {
                                          "type": "string"
                                        },
                                        "osi_text3": {
                                          "type": "string"
                                        },
                                        "osi_text4": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "farelogix": {
                                    "type": "array",
                                    "description": "fare codes which applies for the farelogix fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hotel": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during hotel search requests.",
                                "properties": {
                                  "booking_com": {
                                    "type": "object",
                                    "description": "fare codes which applies for the booking.com search",
                                    "required": [
                                      "affiliate_id"
                                    ],
                                    "properties": {
                                      "affiliate_id": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "hrs": {
                                    "type": "object",
                                    "description": "fare codes which applies for the hrs search",
                                    "required": [
                                      "customer_key",
                                      "f_key"
                                    ],
                                    "properties": {
                                      "customer_key": {
                                        "type": "string"
                                      },
                                      "f_key": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policies": {
                            "type": "array",
                            "minLength": 1,
                            "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                            "items": {
                              "type": "object",
                              "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                              "required": [
                                "id",
                                "name",
                                "default"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name of the policy"
                                },
                                "default": {
                                  "type": "boolean",
                                  "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                                },
                                "meta_data": {
                                  "type": "object",
                                  "description": "Some meta data we attach to all items we care about.",
                                  "properties": {
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "created_by": {
                                      "type": "string",
                                      "description": "Email of the user who created this item"
                                    },
                                    "updated_by": {
                                      "type": "string",
                                      "description": "Email of the user who updated this item"
                                    }
                                  }
                                },
                                "flight": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "cabin_class_rules"
                                      ],
                                      "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                      "properties": {
                                        "cabin_class_rules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "duration_from",
                                              "cabin_class"
                                            ],
                                            "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                            "properties": {
                                              "duration_from": {
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                              },
                                              "duration_to": {
                                                "type": "number",
                                                "minimum": 1,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                              },
                                              "cabin_class": {
                                                "description": "Highest allowed cabin class for this rule.",
                                                "type": "string",
                                                "enum": [
                                                  "economy",
                                                  "economy plus",
                                                  "business",
                                                  "first"
                                                ]
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                              }
                                            }
                                          },
                                          "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "preferred_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "avoided_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "luggage": {
                                          "type": "boolean"
                                        },
                                        "rebookable": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "hotel": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "country_budgets"
                                      ],
                                      "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                      "properties": {
                                        "max_stars": {
                                          "type": "number",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                        },
                                        "default_budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                        },
                                        "country_budgets": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "country",
                                              "budget"
                                            ],
                                            "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                            "properties": {
                                              "country": {
                                                "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                                "type": "string",
                                                "pattern": "^[A-Z]{2}$"
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per night, same semantics as default_budget."
                                              }
                                            }
                                          },
                                          "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "min_stars": {
                                          "type": "integer",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                        },
                                        "includes_breakfast": {
                                          "type": "boolean"
                                        },
                                        "includes_wifi": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rental_car": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                          "type": "string",
                                          "enum": [
                                            "M",
                                            "N",
                                            "E",
                                            "H",
                                            "C",
                                            "D",
                                            "I",
                                            "J",
                                            "S",
                                            "R",
                                            "F",
                                            "G",
                                            "P",
                                            "U",
                                            "L",
                                            "W",
                                            "O",
                                            "X"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "required": [
                                        "preferred_vendors",
                                        "avoided_vendors"
                                      ],
                                      "properties": {
                                        "preferred_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "avoided_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "insurance": {
                                          "type": "string",
                                          "enum": [
                                            "yes with excess",
                                            "yes without excess"
                                          ]
                                        },
                                        "navigation_system": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Defines the highest train class that travelers are allowed to travel in.",
                                          "type": "string",
                                          "enum": [
                                            "1",
                                            "2"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "seat_reservation_against_payment": {
                                          "type": "boolean"
                                        },
                                        "flexible": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policy_remarks": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "string"
                              },
                              "hotel": {
                                "type": "string"
                              },
                              "train": {
                                "type": "string"
                              },
                              "rental_car": {
                                "type": "string"
                              }
                            }
                          },
                          "monthly_booking_volume": {
                            "type": "number",
                            "enum": [
                              5,
                              10,
                              20,
                              50,
                              100,
                              200,
                              500
                            ]
                          },
                          "credit_check_passed": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pricing": {
                            "type": "object",
                            "properties": {
                              "payment_fee": {
                                "type": "boolean",
                                "description": "Whether payment fees should be applied."
                              },
                              "apply_booking_fee": {
                                "type": "boolean",
                                "description": "Whether booking fees should be applied"
                              },
                              "booking_fee_data": {
                                "type": "object",
                                "required": [
                                  "domestic_countries",
                                  "continents",
                                  "booking_fees"
                                ],
                                "properties": {
                                  "booking_fees": {
                                    "type": "object",
                                    "required": [
                                      "flight",
                                      "hotel",
                                      "rental_car",
                                      "train"
                                    ],
                                    "description": "Preferences regarding booking fees",
                                    "properties": {
                                      "flight": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "hotel": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rental_car": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "train": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "domestic_countries": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "continents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "properties": {
                              "circula": {
                                "type": "object",
                                "description": "Circula integration detail.",
                                "properties": {
                                  "token": {
                                    "type": "string",
                                    "description": "Circula integration token"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "tags": [
            "Company"
          ],
          "responses": {
            "200": {
              "description": "Company response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "invoice_addresses",
                          "invoice_overview_receivers",
                          "language",
                          "currency",
                          "status",
                          "policies",
                          "communication_settings",
                          "credit_check_passed"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Must be unique"
                          },
                          "invoice_addresses": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Company invoice address",
                                  "required": [
                                    "company_name",
                                    "office_name",
                                    "status",
                                    "invoice_overview_receivers",
                                    "payment_method",
                                    "billing_aggregation"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "to distinguish the type of invoice address"
                                    },
                                    "vat_id": {
                                      "type": "string",
                                      "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                    },
                                    "company_name": {
                                      "type": "string",
                                      "description": "name of the company"
                                    },
                                    "office_name": {
                                      "type": "string",
                                      "description": "name which must be unique within the invoice addresses list"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "active",
                                        "inactive"
                                      ],
                                      "description": "company should have at least one active invoice address"
                                    },
                                    "invoice_overview_receivers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                      }
                                    },
                                    "payment_method": {
                                      "type": "string",
                                      "enum": [
                                        "credit_card",
                                        "invoice",
                                        "sepa",
                                        "airplus"
                                      ],
                                      "description": "The type of payment used"
                                    },
                                    "billing_aggregation": {
                                      "type": "string",
                                      "enum": [
                                        "individual",
                                        "monthly",
                                        "semimonthly"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "description": "Note existing address can not be edited or deleted"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to"
                            }
                          },
                          "finance_email": {
                            "type": "string"
                          },
                          "travel_management_email": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                          },
                          "communication_settings": {
                            "type": "object",
                            "required": [
                              "confirmation",
                              "invoice",
                              "reminder"
                            ],
                            "description": "Settings that determine which persona receives which booking emails and documents.",
                            "properties": {
                              "confirmation": {
                                "type": "string",
                                "description": "Booking confirmation, itinerary, calendar invites",
                                "enum": [
                                  "booker",
                                  "traveler and booker"
                                ]
                              },
                              "invoice": {
                                "type": "string",
                                "enum": [
                                  "booker",
                                  "traveler and booker",
                                  "finance only"
                                ]
                              },
                              "reminder": {
                                "type": "string",
                                "description": "Checkin reminder, sent out 24h prior to flight",
                                "enum": [
                                  "traveler",
                                  "booker",
                                  "traveler and booker"
                                ]
                              }
                            }
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "EUR"
                            ],
                            "description": "ISO-4217"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "unverified",
                              "trial",
                              "customer",
                              "inactive"
                            ]
                          },
                          "phone": {
                            "type": "string"
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "cost_center_mandatory": {
                            "type": "boolean",
                            "default": false
                          },
                          "fare_codes": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during flight search requests.",
                                "properties": {
                                  "web": {
                                    "type": "array",
                                    "description": "fare codes which applies for the web fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "carrier_code",
                                        "login_id",
                                        "api_password"
                                      ],
                                      "properties": {
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "login_id": {
                                          "type": "string"
                                        },
                                        "api_password": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "sabre": {
                                    "type": "array",
                                    "description": "fare codes which applies for the Sabre fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code",
                                        "carrier_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        },
                                        "carrier_code": {
                                          "type": "string"
                                        },
                                        "carrier_code_osi": {
                                          "type": "string"
                                        },
                                        "osi_text1": {
                                          "type": "string"
                                        },
                                        "osi_text2": {
                                          "type": "string"
                                        },
                                        "osi_text3": {
                                          "type": "string"
                                        },
                                        "osi_text4": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "farelogix": {
                                    "type": "array",
                                    "description": "fare codes which applies for the farelogix fares",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "pricing_code"
                                      ],
                                      "properties": {
                                        "pricing_code": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hotel": {
                                "type": "object",
                                "description": "Company specific Fare codes which applicable during hotel search requests.",
                                "properties": {
                                  "booking_com": {
                                    "type": "object",
                                    "description": "fare codes which applies for the booking.com search",
                                    "required": [
                                      "affiliate_id"
                                    ],
                                    "properties": {
                                      "affiliate_id": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "hrs": {
                                    "type": "object",
                                    "description": "fare codes which applies for the hrs search",
                                    "required": [
                                      "customer_key",
                                      "f_key"
                                    ],
                                    "properties": {
                                      "customer_key": {
                                        "type": "string"
                                      },
                                      "f_key": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policies": {
                            "type": "array",
                            "minLength": 1,
                            "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                            "items": {
                              "type": "object",
                              "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                              "required": [
                                "id",
                                "name",
                                "default"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name of the policy"
                                },
                                "default": {
                                  "type": "boolean",
                                  "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                                },
                                "meta_data": {
                                  "type": "object",
                                  "description": "Some meta data we attach to all items we care about.",
                                  "properties": {
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "created_by": {
                                      "type": "string",
                                      "description": "Email of the user who created this item"
                                    },
                                    "updated_by": {
                                      "type": "string",
                                      "description": "Email of the user who updated this item"
                                    }
                                  }
                                },
                                "flight": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "cabin_class_rules"
                                      ],
                                      "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                      "properties": {
                                        "cabin_class_rules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "duration_from",
                                              "cabin_class"
                                            ],
                                            "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                            "properties": {
                                              "duration_from": {
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                              },
                                              "duration_to": {
                                                "type": "number",
                                                "minimum": 1,
                                                "maximum": 24,
                                                "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                              },
                                              "cabin_class": {
                                                "description": "Highest allowed cabin class for this rule.",
                                                "type": "string",
                                                "enum": [
                                                  "economy",
                                                  "economy plus",
                                                  "business",
                                                  "first"
                                                ]
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                              }
                                            }
                                          },
                                          "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "preferred_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "avoided_airlines": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "luggage": {
                                          "type": "boolean"
                                        },
                                        "rebookable": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "hotel": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "required": [
                                        "country_budgets"
                                      ],
                                      "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                      "properties": {
                                        "max_stars": {
                                          "type": "number",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                        },
                                        "default_budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                        },
                                        "country_budgets": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "country",
                                              "budget"
                                            ],
                                            "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                            "properties": {
                                              "country": {
                                                "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                                "type": "string",
                                                "pattern": "^[A-Z]{2}$"
                                              },
                                              "budget": {
                                                "type": "number",
                                                "minimum": 1,
                                                "description": "Max budget in EUR per night, same semantics as default_budget."
                                              }
                                            }
                                          },
                                          "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "min_stars": {
                                          "type": "integer",
                                          "minimum": 1,
                                          "maximum": 5,
                                          "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                        },
                                        "includes_breakfast": {
                                          "type": "boolean"
                                        },
                                        "includes_wifi": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rental_car": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                          "type": "string",
                                          "enum": [
                                            "M",
                                            "N",
                                            "E",
                                            "H",
                                            "C",
                                            "D",
                                            "I",
                                            "J",
                                            "S",
                                            "R",
                                            "F",
                                            "G",
                                            "P",
                                            "U",
                                            "L",
                                            "W",
                                            "O",
                                            "X"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "required": [
                                        "preferred_vendors",
                                        "avoided_vendors"
                                      ],
                                      "properties": {
                                        "preferred_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "avoided_vendors": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "Europcar",
                                              "Enterprise",
                                              "Hertz",
                                              "Sixt"
                                            ]
                                          }
                                        },
                                        "insurance": {
                                          "type": "string",
                                          "enum": [
                                            "yes with excess",
                                            "yes without excess"
                                          ]
                                        },
                                        "navigation_system": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "rules": {
                                      "type": "object",
                                      "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                      "properties": {
                                        "max_class": {
                                          "description": "Defines the highest train class that travelers are allowed to travel in.",
                                          "type": "string",
                                          "enum": [
                                            "1",
                                            "2"
                                          ]
                                        },
                                        "budget": {
                                          "type": "number",
                                          "minimum": 1,
                                          "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                        }
                                      }
                                    },
                                    "preferences": {
                                      "type": "object",
                                      "properties": {
                                        "seat_reservation_against_payment": {
                                          "type": "boolean"
                                        },
                                        "flexible": {
                                          "type": "boolean"
                                        },
                                        "cancelable": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "policy_remarks": {
                            "type": "object",
                            "properties": {
                              "flight": {
                                "type": "string"
                              },
                              "hotel": {
                                "type": "string"
                              },
                              "train": {
                                "type": "string"
                              },
                              "rental_car": {
                                "type": "string"
                              }
                            }
                          },
                          "monthly_booking_volume": {
                            "type": "number",
                            "enum": [
                              5,
                              10,
                              20,
                              50,
                              100,
                              200,
                              500
                            ]
                          },
                          "credit_check_passed": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pricing": {
                            "type": "object",
                            "properties": {
                              "payment_fee": {
                                "type": "boolean",
                                "description": "Whether payment fees should be applied."
                              },
                              "apply_booking_fee": {
                                "type": "boolean",
                                "description": "Whether booking fees should be applied"
                              },
                              "booking_fee_data": {
                                "type": "object",
                                "required": [
                                  "domestic_countries",
                                  "continents",
                                  "booking_fees"
                                ],
                                "properties": {
                                  "booking_fees": {
                                    "type": "object",
                                    "required": [
                                      "flight",
                                      "hotel",
                                      "rental_car",
                                      "train"
                                    ],
                                    "description": "Preferences regarding booking fees",
                                    "properties": {
                                      "flight": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "value",
                                                    "comtravo_fee_source"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "number"
                                                    },
                                                    "comtravo_fee_source": {
                                                      "type": "string",
                                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                      "enum": [
                                                        "online",
                                                        "offline"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "geography"
                                                  ],
                                                  "properties": {
                                                    "geography": {
                                                      "enum": [
                                                        "domestic",
                                                        "continental",
                                                        "others"
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "hotel": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rental_car": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "train": {
                                        "type": "object",
                                        "required": [
                                          "booking",
                                          "rebooking",
                                          "cancelation"
                                        ],
                                        "properties": {
                                          "booking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "rebooking": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "cancelation": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "value",
                                                "comtravo_fee_source"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number"
                                                },
                                                "comtravo_fee_source": {
                                                  "type": "string",
                                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                  "enum": [
                                                    "online",
                                                    "offline"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "domestic_countries": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "continents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "properties": {
                              "circula": {
                                "type": "object",
                                "description": "Circula integration detail.",
                                "properties": {
                                  "token": {
                                    "type": "string",
                                    "description": "Circula integration token"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/traveler": {
        "get": {
          "description": "get all travelers",
          "x-swagger-router-controller": "Traveler",
          "operationId": "findTraveler",
          "tags": [
            "Traveler"
          ],
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "description": "Search for traveler with specific email",
              "required": false,
              "type": "string"
            },
            {
              "name": "company_id",
              "in": "query",
              "description": "Search for traveler that belong to the company",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Search limit",
              "required": false,
              "type": "number",
              "maximum": 1000
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Search offset",
              "required": false,
              "type": "number",
              "minimum": 0
            },
            {
              "name": "q",
              "in": "query",
              "description": "Search for traveler with given lucene query, if present es based search will be triggered",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "first_name",
                            "last_name",
                            "language",
                            "title",
                            "gender"
                          ],
                          "properties": {
                            "company": {
                              "type": "string",
                              "description": "ID of the company this traveler belongs to"
                            },
                            "invoice_address_id": {
                              "type": "string",
                              "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "middle_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                            },
                            "language": {
                              "type": "string",
                              "enum": [
                                "de",
                                "en"
                              ],
                              "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                            },
                            "title": {
                              "type": "string",
                              "enum": [
                                "Mr",
                                "Mrs"
                              ]
                            },
                            "nationality": {
                              "type": "string",
                              "description": "2 letter ISO code"
                            },
                            "gender": {
                              "type": "string",
                              "enum": [
                                "m",
                                "f"
                              ]
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "phone": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                "managed": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                                },
                                "newsletter_subscribed": {
                                  "type": "boolean",
                                  "default": true,
                                  "description": "indicates whether customer wants to receive newsletter"
                                }
                              }
                            },
                            "identifications": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "issuing_country",
                                  "card_number"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "passport",
                                      "id_card",
                                      "drivers_license",
                                      "global_entry_ktn"
                                    ]
                                  },
                                  "issuing_country": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "issued_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Format YYYY-MM-DD"
                                  }
                                }
                              }
                            },
                            "loyalty_cards": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "description": "Traveler loyalty cards are bound to a specific person",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "pin": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                  }
                                }
                              }
                            },
                            "client_cost_center_1": {
                              "type": "string",
                              "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                            },
                            "client_cost_center_2": {
                              "type": "string"
                            },
                            "client_cost_center_3": {
                              "type": "string"
                            },
                            "preference": {
                              "type": "object",
                              "properties": {
                                "airplane": {
                                  "type": "object",
                                  "properties": {
                                    "seat": {
                                      "type": "string",
                                      "enum": [
                                        "window",
                                        "aisle"
                                      ]
                                    },
                                    "section": {
                                      "type": "string",
                                      "enum": [
                                        "front",
                                        "back"
                                      ]
                                    },
                                    "description": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "reservation": {
                                      "type": "boolean"
                                    },
                                    "class": {
                                      "type": "string"
                                    },
                                    "section": {
                                      "type": "string",
                                      "enum": [
                                        "open_saloon",
                                        "open_saloon_with_table",
                                        "compartment"
                                      ]
                                    },
                                    "seat": {
                                      "type": "string",
                                      "enum": [
                                        "window",
                                        "aisle"
                                      ]
                                    },
                                    "zone": {
                                      "type": "string",
                                      "enum": [
                                        "phone_zone",
                                        "quiet_zone"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "policy_id": {
                              "type": "string",
                              "description": "unique identifier belonging one of the policies of its company"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "email",
                            "invoice_address_id",
                            "notification_settings"
                          ],
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                            },
                            "invoice_address_id": {
                              "type": "string",
                              "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                            },
                            "notification_settings": {
                              "type": "object",
                              "required": [
                                "notification_receivers",
                                "when_to_send"
                              ],
                              "properties": {
                                "notification_receivers": {
                                  "type": "array",
                                  "description": "traveler ids to be notified when booking out of policy or all bookings",
                                  "maxItems": 5,
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "when_to_send": {
                                  "type": "string",
                                  "enum": [
                                    "never",
                                    "only_out_of_policy",
                                    "always"
                                  ]
                                }
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "admin",
                                  "central_booker",
                                  "traveler"
                                ]
                              },
                              "uniqueItems": true,
                              "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "_id",
                        "__v"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Technical PK"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "post": {
          "description": "Creates a new traveler",
          "x-swagger-router-controller": "Traveler",
          "operationId": "createTraveler",
          "tags": [
            "Traveler"
          ],
          "parameters": [
            {
              "name": "requestBody",
              "in": "body",
              "description": "traveler to add",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "first_name",
                      "last_name",
                      "language",
                      "title",
                      "gender"
                    ],
                    "properties": {
                      "company": {
                        "type": "string",
                        "description": "ID of the company this traveler belongs to"
                      },
                      "invoice_address_id": {
                        "type": "string",
                        "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "middle_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                      },
                      "title": {
                        "type": "string",
                        "enum": [
                          "Mr",
                          "Mrs"
                        ]
                      },
                      "nationality": {
                        "type": "string",
                        "description": "2 letter ISO code"
                      },
                      "gender": {
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ]
                      },
                      "birthday": {
                        "type": "string",
                        "format": "date",
                        "description": "Format YYYY-MM-DD"
                      },
                      "contact": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string"
                          },
                          "address": {
                            "type": "object",
                            "required": [
                              "city",
                              "country"
                            ],
                            "properties": {
                              "street_1": {
                                "type": "string"
                              },
                              "street_2": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "zip_code": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string",
                                "description": "2 letter ISO code"
                              },
                              "longitude": {
                                "type": "number",
                                "description": "used along with latitude to define geographic coordinates."
                              },
                              "latitude": {
                                "type": "number",
                                "description": "used along with longitude to define geographic coordinates."
                              }
                            }
                          },
                          "managed": {
                            "type": "boolean",
                            "default": false,
                            "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                          },
                          "newsletter_subscribed": {
                            "type": "boolean",
                            "default": true,
                            "description": "indicates whether customer wants to receive newsletter"
                          }
                        }
                      },
                      "identifications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "issuing_country",
                            "card_number"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "passport",
                                "id_card",
                                "drivers_license",
                                "global_entry_ktn"
                              ]
                            },
                            "issuing_country": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            },
                            "issued_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            }
                          }
                        }
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "client_cost_center_1": {
                        "type": "string",
                        "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                      },
                      "client_cost_center_2": {
                        "type": "string"
                      },
                      "client_cost_center_3": {
                        "type": "string"
                      },
                      "preference": {
                        "type": "object",
                        "properties": {
                          "airplane": {
                            "type": "object",
                            "properties": {
                              "seat": {
                                "type": "string",
                                "enum": [
                                  "window",
                                  "aisle"
                                ]
                              },
                              "section": {
                                "type": "string",
                                "enum": [
                                  "front",
                                  "back"
                                ]
                              },
                              "description": {
                                "type": "string"
                              }
                            }
                          },
                          "train": {
                            "type": "object",
                            "properties": {
                              "reservation": {
                                "type": "boolean"
                              },
                              "class": {
                                "type": "string"
                              },
                              "section": {
                                "type": "string",
                                "enum": [
                                  "open_saloon",
                                  "open_saloon_with_table",
                                  "compartment"
                                ]
                              },
                              "seat": {
                                "type": "string",
                                "enum": [
                                  "window",
                                  "aisle"
                                ]
                              },
                              "zone": {
                                "type": "string",
                                "enum": [
                                  "phone_zone",
                                  "quiet_zone"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "policy_id": {
                        "type": "string",
                        "description": "unique identifier belonging one of the policies of its company"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "email",
                      "invoice_address_id",
                      "notification_settings"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                      },
                      "invoice_address_id": {
                        "type": "string",
                        "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                      },
                      "notification_settings": {
                        "type": "object",
                        "required": [
                          "notification_receivers",
                          "when_to_send"
                        ],
                        "properties": {
                          "notification_receivers": {
                            "type": "array",
                            "description": "traveler ids to be notified when booking out of policy or all bookings",
                            "maxItems": 5,
                            "uniqueItems": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "when_to_send": {
                            "type": "string",
                            "enum": [
                              "never",
                              "only_out_of_policy",
                              "always"
                            ]
                          }
                        }
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "admin",
                            "central_booker",
                            "traveler"
                          ]
                        },
                        "uniqueItems": true,
                        "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Payment response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/traveler/{id}": {
        "get": {
          "description": "Get a traveler",
          "x-swagger-router-controller": "Traveler",
          "operationId": "getTraveler",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "Traveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "put": {
          "description": "Update a traveler",
          "x-swagger-router-controller": "Traveler",
          "operationId": "updateTraveler",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "in": "body",
              "description": "traveler to edit",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "tags": [
            "Traveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "delete": {
          "description": "Delete a traveler",
          "x-swagger-router-controller": "Traveler",
          "operationId": "deleteTraveler",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "Traveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler is deleted"
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/account": {
        "post": {
          "description": "Creates a new account",
          "x-swagger-router-controller": "Account",
          "operationId": "createAccount",
          "tags": [
            "Account"
          ],
          "parameters": [
            {
              "name": "requestBody",
              "in": "body",
              "description": "account to add",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "invoice_addresses",
                  "invoice_overview_receivers",
                  "language",
                  "currency",
                  "status",
                  "policies",
                  "communication_settings",
                  "credit_check_passed"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Must be unique"
                  },
                  "invoice_addresses": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "city",
                            "country"
                          ],
                          "properties": {
                            "street_1": {
                              "type": "string"
                            },
                            "street_2": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string",
                              "description": "2 letter ISO code"
                            },
                            "longitude": {
                              "type": "number",
                              "description": "used along with latitude to define geographic coordinates."
                            },
                            "latitude": {
                              "type": "number",
                              "description": "used along with longitude to define geographic coordinates."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Company invoice address",
                          "required": [
                            "company_name",
                            "office_name",
                            "status",
                            "invoice_overview_receivers",
                            "payment_method",
                            "billing_aggregation"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "to distinguish the type of invoice address"
                            },
                            "vat_id": {
                              "type": "string",
                              "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                            },
                            "company_name": {
                              "type": "string",
                              "description": "name of the company"
                            },
                            "office_name": {
                              "type": "string",
                              "description": "name which must be unique within the invoice addresses list"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "inactive"
                              ],
                              "description": "company should have at least one active invoice address"
                            },
                            "invoice_overview_receivers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                              }
                            },
                            "payment_method": {
                              "type": "string",
                              "enum": [
                                "credit_card",
                                "invoice",
                                "sepa",
                                "airplus"
                              ],
                              "description": "The type of payment used"
                            },
                            "billing_aggregation": {
                              "type": "string",
                              "enum": [
                                "individual",
                                "monthly",
                                "semimonthly"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "description": "Note existing address can not be edited or deleted"
                  },
                  "invoice_overview_receivers": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "description": "Receiver email address that invoice overview report (eom) will be sent to"
                    }
                  },
                  "finance_email": {
                    "type": "string"
                  },
                  "travel_management_email": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "de",
                      "en"
                    ],
                    "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                  },
                  "communication_settings": {
                    "type": "object",
                    "required": [
                      "confirmation",
                      "invoice",
                      "reminder"
                    ],
                    "description": "Settings that determine which persona receives which booking emails and documents.",
                    "properties": {
                      "confirmation": {
                        "type": "string",
                        "description": "Booking confirmation, itinerary, calendar invites",
                        "enum": [
                          "booker",
                          "traveler and booker"
                        ]
                      },
                      "invoice": {
                        "type": "string",
                        "enum": [
                          "booker",
                          "traveler and booker",
                          "finance only"
                        ]
                      },
                      "reminder": {
                        "type": "string",
                        "description": "Checkin reminder, sent out 24h prior to flight",
                        "enum": [
                          "traveler",
                          "booker",
                          "traveler and booker"
                        ]
                      }
                    }
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "EUR"
                    ],
                    "description": "ISO-4217"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "unverified",
                      "trial",
                      "customer",
                      "inactive"
                    ]
                  },
                  "phone": {
                    "type": "string"
                  },
                  "loyalty_cards": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "description": "Traveler loyalty cards are bound to a specific person",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "card_number": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "string",
                          "description": "Format YYYY-MM-DD"
                        },
                        "pin": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                        }
                      }
                    }
                  },
                  "meta_data": {
                    "type": "object",
                    "description": "Some meta data we attach to all items we care about.",
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "Email of the user who created this item"
                      },
                      "updated_by": {
                        "type": "string",
                        "description": "Email of the user who updated this item"
                      }
                    }
                  },
                  "cost_center_mandatory": {
                    "type": "boolean",
                    "default": false
                  },
                  "fare_codes": {
                    "type": "object",
                    "properties": {
                      "flight": {
                        "type": "object",
                        "description": "Company specific Fare codes which applicable during flight search requests.",
                        "properties": {
                          "web": {
                            "type": "array",
                            "description": "fare codes which applies for the web fares",
                            "items": {
                              "type": "object",
                              "required": [
                                "carrier_code",
                                "login_id",
                                "api_password"
                              ],
                              "properties": {
                                "carrier_code": {
                                  "type": "string"
                                },
                                "login_id": {
                                  "type": "string"
                                },
                                "api_password": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "sabre": {
                            "type": "array",
                            "description": "fare codes which applies for the Sabre fares",
                            "items": {
                              "type": "object",
                              "required": [
                                "pricing_code",
                                "carrier_code"
                              ],
                              "properties": {
                                "pricing_code": {
                                  "type": "string"
                                },
                                "carrier_code": {
                                  "type": "string"
                                },
                                "carrier_code_osi": {
                                  "type": "string"
                                },
                                "osi_text1": {
                                  "type": "string"
                                },
                                "osi_text2": {
                                  "type": "string"
                                },
                                "osi_text3": {
                                  "type": "string"
                                },
                                "osi_text4": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "farelogix": {
                            "type": "array",
                            "description": "fare codes which applies for the farelogix fares",
                            "items": {
                              "type": "object",
                              "required": [
                                "pricing_code"
                              ],
                              "properties": {
                                "pricing_code": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "hotel": {
                        "type": "object",
                        "description": "Company specific Fare codes which applicable during hotel search requests.",
                        "properties": {
                          "booking_com": {
                            "type": "object",
                            "description": "fare codes which applies for the booking.com search",
                            "required": [
                              "affiliate_id"
                            ],
                            "properties": {
                              "affiliate_id": {
                                "type": "string"
                              }
                            }
                          },
                          "hrs": {
                            "type": "object",
                            "description": "fare codes which applies for the hrs search",
                            "required": [
                              "customer_key",
                              "f_key"
                            ],
                            "properties": {
                              "customer_key": {
                                "type": "string"
                              },
                              "f_key": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "policies": {
                    "type": "array",
                    "minLength": 1,
                    "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                    "items": {
                      "type": "object",
                      "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                      "required": [
                        "id",
                        "name",
                        "default"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                        },
                        "name": {
                          "type": "string",
                          "description": "name of the policy"
                        },
                        "default": {
                          "type": "boolean",
                          "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                        },
                        "meta_data": {
                          "type": "object",
                          "description": "Some meta data we attach to all items we care about.",
                          "properties": {
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "created_by": {
                              "type": "string",
                              "description": "Email of the user who created this item"
                            },
                            "updated_by": {
                              "type": "string",
                              "description": "Email of the user who updated this item"
                            }
                          }
                        },
                        "flight": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "required": [
                                "cabin_class_rules"
                              ],
                              "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                              "properties": {
                                "cabin_class_rules": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "duration_from",
                                      "cabin_class"
                                    ],
                                    "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                    "properties": {
                                      "duration_from": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 24,
                                        "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                      },
                                      "duration_to": {
                                        "type": "number",
                                        "minimum": 1,
                                        "maximum": 24,
                                        "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                      },
                                      "cabin_class": {
                                        "description": "Highest allowed cabin class for this rule.",
                                        "type": "string",
                                        "enum": [
                                          "economy",
                                          "economy plus",
                                          "business",
                                          "first"
                                        ]
                                      },
                                      "budget": {
                                        "type": "number",
                                        "minimum": 1,
                                        "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                      }
                                    }
                                  },
                                  "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "preferred_airlines": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "avoided_airlines": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "luggage": {
                                  "type": "boolean"
                                },
                                "rebookable": {
                                  "type": "boolean"
                                },
                                "cancelable": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "hotel": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "required": [
                                "country_budgets"
                              ],
                              "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                              "properties": {
                                "max_stars": {
                                  "type": "number",
                                  "minimum": 1,
                                  "maximum": 5,
                                  "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                },
                                "default_budget": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                },
                                "country_budgets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "country",
                                      "budget"
                                    ],
                                    "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                    "properties": {
                                      "country": {
                                        "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                        "type": "string",
                                        "pattern": "^[A-Z]{2}$"
                                      },
                                      "budget": {
                                        "type": "number",
                                        "minimum": 1,
                                        "description": "Max budget in EUR per night, same semantics as default_budget."
                                      }
                                    }
                                  },
                                  "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "min_stars": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 5,
                                  "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                },
                                "includes_breakfast": {
                                  "type": "boolean"
                                },
                                "includes_wifi": {
                                  "type": "boolean"
                                },
                                "cancelable": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "rental_car": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                              "properties": {
                                "max_class": {
                                  "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                  "type": "string",
                                  "enum": [
                                    "M",
                                    "N",
                                    "E",
                                    "H",
                                    "C",
                                    "D",
                                    "I",
                                    "J",
                                    "S",
                                    "R",
                                    "F",
                                    "G",
                                    "P",
                                    "U",
                                    "L",
                                    "W",
                                    "O",
                                    "X"
                                  ]
                                },
                                "budget": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "required": [
                                "preferred_vendors",
                                "avoided_vendors"
                              ],
                              "properties": {
                                "preferred_vendors": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Europcar",
                                      "Enterprise",
                                      "Hertz",
                                      "Sixt"
                                    ]
                                  }
                                },
                                "avoided_vendors": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Europcar",
                                      "Enterprise",
                                      "Hertz",
                                      "Sixt"
                                    ]
                                  }
                                },
                                "insurance": {
                                  "type": "string",
                                  "enum": [
                                    "yes with excess",
                                    "yes without excess"
                                  ]
                                },
                                "navigation_system": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "train": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                              "properties": {
                                "max_class": {
                                  "description": "Defines the highest train class that travelers are allowed to travel in.",
                                  "type": "string",
                                  "enum": [
                                    "1",
                                    "2"
                                  ]
                                },
                                "budget": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "seat_reservation_against_payment": {
                                  "type": "boolean"
                                },
                                "flexible": {
                                  "type": "boolean"
                                },
                                "cancelable": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "policy_remarks": {
                    "type": "object",
                    "properties": {
                      "flight": {
                        "type": "string"
                      },
                      "hotel": {
                        "type": "string"
                      },
                      "train": {
                        "type": "string"
                      },
                      "rental_car": {
                        "type": "string"
                      }
                    }
                  },
                  "monthly_booking_volume": {
                    "type": "number",
                    "enum": [
                      5,
                      10,
                      20,
                      50,
                      100,
                      200,
                      500
                    ]
                  },
                  "credit_check_passed": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Account response",
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "invoice_addresses",
                      "invoice_overview_receivers",
                      "language",
                      "currency",
                      "status",
                      "policies",
                      "communication_settings",
                      "credit_check_passed"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Must be unique"
                      },
                      "invoice_addresses": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "city",
                                "country"
                              ],
                              "properties": {
                                "street_1": {
                                  "type": "string"
                                },
                                "street_2": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "2 letter ISO code"
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "used along with latitude to define geographic coordinates."
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "used along with longitude to define geographic coordinates."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Company invoice address",
                              "required": [
                                "company_name",
                                "office_name",
                                "status",
                                "invoice_overview_receivers",
                                "payment_method",
                                "billing_aggregation"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "to distinguish the type of invoice address"
                                },
                                "vat_id": {
                                  "type": "string",
                                  "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "name of the company"
                                },
                                "office_name": {
                                  "type": "string",
                                  "description": "name which must be unique within the invoice addresses list"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "description": "company should have at least one active invoice address"
                                },
                                "invoice_overview_receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                  }
                                },
                                "payment_method": {
                                  "type": "string",
                                  "enum": [
                                    "credit_card",
                                    "invoice",
                                    "sepa",
                                    "airplus"
                                  ],
                                  "description": "The type of payment used"
                                },
                                "billing_aggregation": {
                                  "type": "string",
                                  "enum": [
                                    "individual",
                                    "monthly",
                                    "semimonthly"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "description": "Note existing address can not be edited or deleted"
                      },
                      "invoice_overview_receivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "description": "Receiver email address that invoice overview report (eom) will be sent to"
                        }
                      },
                      "finance_email": {
                        "type": "string"
                      },
                      "travel_management_email": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                      },
                      "communication_settings": {
                        "type": "object",
                        "required": [
                          "confirmation",
                          "invoice",
                          "reminder"
                        ],
                        "description": "Settings that determine which persona receives which booking emails and documents.",
                        "properties": {
                          "confirmation": {
                            "type": "string",
                            "description": "Booking confirmation, itinerary, calendar invites",
                            "enum": [
                              "booker",
                              "traveler and booker"
                            ]
                          },
                          "invoice": {
                            "type": "string",
                            "enum": [
                              "booker",
                              "traveler and booker",
                              "finance only"
                            ]
                          },
                          "reminder": {
                            "type": "string",
                            "description": "Checkin reminder, sent out 24h prior to flight",
                            "enum": [
                              "traveler",
                              "booker",
                              "traveler and booker"
                            ]
                          }
                        }
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "EUR"
                        ],
                        "description": "ISO-4217"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "unverified",
                          "trial",
                          "customer",
                          "inactive"
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "cost_center_mandatory": {
                        "type": "boolean",
                        "default": false
                      },
                      "fare_codes": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during flight search requests.",
                            "properties": {
                              "web": {
                                "type": "array",
                                "description": "fare codes which applies for the web fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "carrier_code",
                                    "login_id",
                                    "api_password"
                                  ],
                                  "properties": {
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "login_id": {
                                      "type": "string"
                                    },
                                    "api_password": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "sabre": {
                                "type": "array",
                                "description": "fare codes which applies for the Sabre fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code",
                                    "carrier_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    },
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "carrier_code_osi": {
                                      "type": "string"
                                    },
                                    "osi_text1": {
                                      "type": "string"
                                    },
                                    "osi_text2": {
                                      "type": "string"
                                    },
                                    "osi_text3": {
                                      "type": "string"
                                    },
                                    "osi_text4": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "farelogix": {
                                "type": "array",
                                "description": "fare codes which applies for the farelogix fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hotel": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during hotel search requests.",
                            "properties": {
                              "booking_com": {
                                "type": "object",
                                "description": "fare codes which applies for the booking.com search",
                                "required": [
                                  "affiliate_id"
                                ],
                                "properties": {
                                  "affiliate_id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "hrs": {
                                "type": "object",
                                "description": "fare codes which applies for the hrs search",
                                "required": [
                                  "customer_key",
                                  "f_key"
                                ],
                                "properties": {
                                  "customer_key": {
                                    "type": "string"
                                  },
                                  "f_key": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "minLength": 1,
                        "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                        "items": {
                          "type": "object",
                          "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                          "required": [
                            "id",
                            "name",
                            "default"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                            },
                            "name": {
                              "type": "string",
                              "description": "name of the policy"
                            },
                            "default": {
                              "type": "boolean",
                              "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "flight": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "cabin_class_rules"
                                  ],
                                  "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                  "properties": {
                                    "cabin_class_rules": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "duration_from",
                                          "cabin_class"
                                        ],
                                        "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                        "properties": {
                                          "duration_from": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                          },
                                          "duration_to": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                          },
                                          "cabin_class": {
                                            "description": "Highest allowed cabin class for this rule.",
                                            "type": "string",
                                            "enum": [
                                              "economy",
                                              "economy plus",
                                              "business",
                                              "first"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                          }
                                        }
                                      },
                                      "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "preferred_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "avoided_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "luggage": {
                                      "type": "boolean"
                                    },
                                    "rebookable": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "hotel": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "country_budgets"
                                  ],
                                  "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                  "properties": {
                                    "max_stars": {
                                      "type": "number",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                    },
                                    "default_budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                    },
                                    "country_budgets": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "country",
                                          "budget"
                                        ],
                                        "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                        "properties": {
                                          "country": {
                                            "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                            "type": "string",
                                            "pattern": "^[A-Z]{2}$"
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per night, same semantics as default_budget."
                                          }
                                        }
                                      },
                                      "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "min_stars": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                    },
                                    "includes_breakfast": {
                                      "type": "boolean"
                                    },
                                    "includes_wifi": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "rental_car": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                      "type": "string",
                                      "enum": [
                                        "M",
                                        "N",
                                        "E",
                                        "H",
                                        "C",
                                        "D",
                                        "I",
                                        "J",
                                        "S",
                                        "R",
                                        "F",
                                        "G",
                                        "P",
                                        "U",
                                        "L",
                                        "W",
                                        "O",
                                        "X"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "required": [
                                    "preferred_vendors",
                                    "avoided_vendors"
                                  ],
                                  "properties": {
                                    "preferred_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "avoided_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "insurance": {
                                      "type": "string",
                                      "enum": [
                                        "yes with excess",
                                        "yes without excess"
                                      ]
                                    },
                                    "navigation_system": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "train": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Defines the highest train class that travelers are allowed to travel in.",
                                      "type": "string",
                                      "enum": [
                                        "1",
                                        "2"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "seat_reservation_against_payment": {
                                      "type": "boolean"
                                    },
                                    "flexible": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policy_remarks": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "string"
                          },
                          "hotel": {
                            "type": "string"
                          },
                          "train": {
                            "type": "string"
                          },
                          "rental_car": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_booking_volume": {
                        "type": "number",
                        "enum": [
                          5,
                          10,
                          20,
                          50,
                          100,
                          200,
                          500
                        ]
                      },
                      "credit_check_passed": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/account/{companyId}": {
        "get": {
          "description": "Get an account",
          "x-swagger-router-controller": "Account",
          "operationId": "getAccount",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "Account"
          ],
          "responses": {
            "200": {
              "description": "Account response",
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "invoice_addresses",
                      "invoice_overview_receivers",
                      "language",
                      "currency",
                      "status",
                      "policies",
                      "communication_settings",
                      "credit_check_passed"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Must be unique"
                      },
                      "invoice_addresses": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "city",
                                "country"
                              ],
                              "properties": {
                                "street_1": {
                                  "type": "string"
                                },
                                "street_2": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "2 letter ISO code"
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "used along with latitude to define geographic coordinates."
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "used along with longitude to define geographic coordinates."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Company invoice address",
                              "required": [
                                "company_name",
                                "office_name",
                                "status",
                                "invoice_overview_receivers",
                                "payment_method",
                                "billing_aggregation"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "to distinguish the type of invoice address"
                                },
                                "vat_id": {
                                  "type": "string",
                                  "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "name of the company"
                                },
                                "office_name": {
                                  "type": "string",
                                  "description": "name which must be unique within the invoice addresses list"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "description": "company should have at least one active invoice address"
                                },
                                "invoice_overview_receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                  }
                                },
                                "payment_method": {
                                  "type": "string",
                                  "enum": [
                                    "credit_card",
                                    "invoice",
                                    "sepa",
                                    "airplus"
                                  ],
                                  "description": "The type of payment used"
                                },
                                "billing_aggregation": {
                                  "type": "string",
                                  "enum": [
                                    "individual",
                                    "monthly",
                                    "semimonthly"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "description": "Note existing address can not be edited or deleted"
                      },
                      "invoice_overview_receivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "description": "Receiver email address that invoice overview report (eom) will be sent to"
                        }
                      },
                      "finance_email": {
                        "type": "string"
                      },
                      "travel_management_email": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                      },
                      "communication_settings": {
                        "type": "object",
                        "required": [
                          "confirmation",
                          "invoice",
                          "reminder"
                        ],
                        "description": "Settings that determine which persona receives which booking emails and documents.",
                        "properties": {
                          "confirmation": {
                            "type": "string",
                            "description": "Booking confirmation, itinerary, calendar invites",
                            "enum": [
                              "booker",
                              "traveler and booker"
                            ]
                          },
                          "invoice": {
                            "type": "string",
                            "enum": [
                              "booker",
                              "traveler and booker",
                              "finance only"
                            ]
                          },
                          "reminder": {
                            "type": "string",
                            "description": "Checkin reminder, sent out 24h prior to flight",
                            "enum": [
                              "traveler",
                              "booker",
                              "traveler and booker"
                            ]
                          }
                        }
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "EUR"
                        ],
                        "description": "ISO-4217"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "unverified",
                          "trial",
                          "customer",
                          "inactive"
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "cost_center_mandatory": {
                        "type": "boolean",
                        "default": false
                      },
                      "fare_codes": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during flight search requests.",
                            "properties": {
                              "web": {
                                "type": "array",
                                "description": "fare codes which applies for the web fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "carrier_code",
                                    "login_id",
                                    "api_password"
                                  ],
                                  "properties": {
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "login_id": {
                                      "type": "string"
                                    },
                                    "api_password": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "sabre": {
                                "type": "array",
                                "description": "fare codes which applies for the Sabre fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code",
                                    "carrier_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    },
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "carrier_code_osi": {
                                      "type": "string"
                                    },
                                    "osi_text1": {
                                      "type": "string"
                                    },
                                    "osi_text2": {
                                      "type": "string"
                                    },
                                    "osi_text3": {
                                      "type": "string"
                                    },
                                    "osi_text4": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "farelogix": {
                                "type": "array",
                                "description": "fare codes which applies for the farelogix fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hotel": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during hotel search requests.",
                            "properties": {
                              "booking_com": {
                                "type": "object",
                                "description": "fare codes which applies for the booking.com search",
                                "required": [
                                  "affiliate_id"
                                ],
                                "properties": {
                                  "affiliate_id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "hrs": {
                                "type": "object",
                                "description": "fare codes which applies for the hrs search",
                                "required": [
                                  "customer_key",
                                  "f_key"
                                ],
                                "properties": {
                                  "customer_key": {
                                    "type": "string"
                                  },
                                  "f_key": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "minLength": 1,
                        "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                        "items": {
                          "type": "object",
                          "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                          "required": [
                            "id",
                            "name",
                            "default"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                            },
                            "name": {
                              "type": "string",
                              "description": "name of the policy"
                            },
                            "default": {
                              "type": "boolean",
                              "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "flight": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "cabin_class_rules"
                                  ],
                                  "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                  "properties": {
                                    "cabin_class_rules": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "duration_from",
                                          "cabin_class"
                                        ],
                                        "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                        "properties": {
                                          "duration_from": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                          },
                                          "duration_to": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                          },
                                          "cabin_class": {
                                            "description": "Highest allowed cabin class for this rule.",
                                            "type": "string",
                                            "enum": [
                                              "economy",
                                              "economy plus",
                                              "business",
                                              "first"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                          }
                                        }
                                      },
                                      "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "preferred_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "avoided_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "luggage": {
                                      "type": "boolean"
                                    },
                                    "rebookable": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "hotel": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "country_budgets"
                                  ],
                                  "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                  "properties": {
                                    "max_stars": {
                                      "type": "number",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                    },
                                    "default_budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                    },
                                    "country_budgets": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "country",
                                          "budget"
                                        ],
                                        "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                        "properties": {
                                          "country": {
                                            "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                            "type": "string",
                                            "pattern": "^[A-Z]{2}$"
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per night, same semantics as default_budget."
                                          }
                                        }
                                      },
                                      "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "min_stars": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                    },
                                    "includes_breakfast": {
                                      "type": "boolean"
                                    },
                                    "includes_wifi": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "rental_car": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                      "type": "string",
                                      "enum": [
                                        "M",
                                        "N",
                                        "E",
                                        "H",
                                        "C",
                                        "D",
                                        "I",
                                        "J",
                                        "S",
                                        "R",
                                        "F",
                                        "G",
                                        "P",
                                        "U",
                                        "L",
                                        "W",
                                        "O",
                                        "X"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "required": [
                                    "preferred_vendors",
                                    "avoided_vendors"
                                  ],
                                  "properties": {
                                    "preferred_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "avoided_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "insurance": {
                                      "type": "string",
                                      "enum": [
                                        "yes with excess",
                                        "yes without excess"
                                      ]
                                    },
                                    "navigation_system": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "train": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Defines the highest train class that travelers are allowed to travel in.",
                                      "type": "string",
                                      "enum": [
                                        "1",
                                        "2"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "seat_reservation_against_payment": {
                                      "type": "boolean"
                                    },
                                    "flexible": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policy_remarks": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "string"
                          },
                          "hotel": {
                            "type": "string"
                          },
                          "train": {
                            "type": "string"
                          },
                          "rental_car": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_booking_volume": {
                        "type": "number",
                        "enum": [
                          5,
                          10,
                          20,
                          50,
                          100,
                          200,
                          500
                        ]
                      },
                      "credit_check_passed": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "put": {
          "description": "Update an account",
          "x-swagger-router-controller": "Account",
          "operationId": "updateAccount",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "in": "body",
              "description": "company to edit",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "invoice_addresses",
                      "invoice_overview_receivers",
                      "language",
                      "currency",
                      "status",
                      "policies",
                      "communication_settings",
                      "credit_check_passed"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Must be unique"
                      },
                      "invoice_addresses": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "city",
                                "country"
                              ],
                              "properties": {
                                "street_1": {
                                  "type": "string"
                                },
                                "street_2": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "2 letter ISO code"
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "used along with latitude to define geographic coordinates."
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "used along with longitude to define geographic coordinates."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Company invoice address",
                              "required": [
                                "company_name",
                                "office_name",
                                "status",
                                "invoice_overview_receivers",
                                "payment_method",
                                "billing_aggregation"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "to distinguish the type of invoice address"
                                },
                                "vat_id": {
                                  "type": "string",
                                  "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "name of the company"
                                },
                                "office_name": {
                                  "type": "string",
                                  "description": "name which must be unique within the invoice addresses list"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "description": "company should have at least one active invoice address"
                                },
                                "invoice_overview_receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                  }
                                },
                                "payment_method": {
                                  "type": "string",
                                  "enum": [
                                    "credit_card",
                                    "invoice",
                                    "sepa",
                                    "airplus"
                                  ],
                                  "description": "The type of payment used"
                                },
                                "billing_aggregation": {
                                  "type": "string",
                                  "enum": [
                                    "individual",
                                    "monthly",
                                    "semimonthly"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "description": "Note existing address can not be edited or deleted"
                      },
                      "invoice_overview_receivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "description": "Receiver email address that invoice overview report (eom) will be sent to"
                        }
                      },
                      "finance_email": {
                        "type": "string"
                      },
                      "travel_management_email": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                      },
                      "communication_settings": {
                        "type": "object",
                        "required": [
                          "confirmation",
                          "invoice",
                          "reminder"
                        ],
                        "description": "Settings that determine which persona receives which booking emails and documents.",
                        "properties": {
                          "confirmation": {
                            "type": "string",
                            "description": "Booking confirmation, itinerary, calendar invites",
                            "enum": [
                              "booker",
                              "traveler and booker"
                            ]
                          },
                          "invoice": {
                            "type": "string",
                            "enum": [
                              "booker",
                              "traveler and booker",
                              "finance only"
                            ]
                          },
                          "reminder": {
                            "type": "string",
                            "description": "Checkin reminder, sent out 24h prior to flight",
                            "enum": [
                              "traveler",
                              "booker",
                              "traveler and booker"
                            ]
                          }
                        }
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "EUR"
                        ],
                        "description": "ISO-4217"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "unverified",
                          "trial",
                          "customer",
                          "inactive"
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "cost_center_mandatory": {
                        "type": "boolean",
                        "default": false
                      },
                      "fare_codes": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during flight search requests.",
                            "properties": {
                              "web": {
                                "type": "array",
                                "description": "fare codes which applies for the web fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "carrier_code",
                                    "login_id",
                                    "api_password"
                                  ],
                                  "properties": {
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "login_id": {
                                      "type": "string"
                                    },
                                    "api_password": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "sabre": {
                                "type": "array",
                                "description": "fare codes which applies for the Sabre fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code",
                                    "carrier_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    },
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "carrier_code_osi": {
                                      "type": "string"
                                    },
                                    "osi_text1": {
                                      "type": "string"
                                    },
                                    "osi_text2": {
                                      "type": "string"
                                    },
                                    "osi_text3": {
                                      "type": "string"
                                    },
                                    "osi_text4": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "farelogix": {
                                "type": "array",
                                "description": "fare codes which applies for the farelogix fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hotel": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during hotel search requests.",
                            "properties": {
                              "booking_com": {
                                "type": "object",
                                "description": "fare codes which applies for the booking.com search",
                                "required": [
                                  "affiliate_id"
                                ],
                                "properties": {
                                  "affiliate_id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "hrs": {
                                "type": "object",
                                "description": "fare codes which applies for the hrs search",
                                "required": [
                                  "customer_key",
                                  "f_key"
                                ],
                                "properties": {
                                  "customer_key": {
                                    "type": "string"
                                  },
                                  "f_key": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "minLength": 1,
                        "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                        "items": {
                          "type": "object",
                          "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                          "required": [
                            "id",
                            "name",
                            "default"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                            },
                            "name": {
                              "type": "string",
                              "description": "name of the policy"
                            },
                            "default": {
                              "type": "boolean",
                              "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "flight": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "cabin_class_rules"
                                  ],
                                  "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                  "properties": {
                                    "cabin_class_rules": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "duration_from",
                                          "cabin_class"
                                        ],
                                        "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                        "properties": {
                                          "duration_from": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                          },
                                          "duration_to": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                          },
                                          "cabin_class": {
                                            "description": "Highest allowed cabin class for this rule.",
                                            "type": "string",
                                            "enum": [
                                              "economy",
                                              "economy plus",
                                              "business",
                                              "first"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                          }
                                        }
                                      },
                                      "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "preferred_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "avoided_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "luggage": {
                                      "type": "boolean"
                                    },
                                    "rebookable": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "hotel": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "country_budgets"
                                  ],
                                  "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                  "properties": {
                                    "max_stars": {
                                      "type": "number",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                    },
                                    "default_budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                    },
                                    "country_budgets": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "country",
                                          "budget"
                                        ],
                                        "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                        "properties": {
                                          "country": {
                                            "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                            "type": "string",
                                            "pattern": "^[A-Z]{2}$"
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per night, same semantics as default_budget."
                                          }
                                        }
                                      },
                                      "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "min_stars": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                    },
                                    "includes_breakfast": {
                                      "type": "boolean"
                                    },
                                    "includes_wifi": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "rental_car": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                      "type": "string",
                                      "enum": [
                                        "M",
                                        "N",
                                        "E",
                                        "H",
                                        "C",
                                        "D",
                                        "I",
                                        "J",
                                        "S",
                                        "R",
                                        "F",
                                        "G",
                                        "P",
                                        "U",
                                        "L",
                                        "W",
                                        "O",
                                        "X"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "required": [
                                    "preferred_vendors",
                                    "avoided_vendors"
                                  ],
                                  "properties": {
                                    "preferred_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "avoided_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "insurance": {
                                      "type": "string",
                                      "enum": [
                                        "yes with excess",
                                        "yes without excess"
                                      ]
                                    },
                                    "navigation_system": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "train": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Defines the highest train class that travelers are allowed to travel in.",
                                      "type": "string",
                                      "enum": [
                                        "1",
                                        "2"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "seat_reservation_against_payment": {
                                      "type": "boolean"
                                    },
                                    "flexible": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policy_remarks": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "string"
                          },
                          "hotel": {
                            "type": "string"
                          },
                          "train": {
                            "type": "string"
                          },
                          "rental_car": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_booking_volume": {
                        "type": "number",
                        "enum": [
                          5,
                          10,
                          20,
                          50,
                          100,
                          200,
                          500
                        ]
                      },
                      "credit_check_passed": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "tags": [
            "Account"
          ],
          "responses": {
            "200": {
              "description": "Company response",
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "invoice_addresses",
                      "invoice_overview_receivers",
                      "language",
                      "currency",
                      "status",
                      "policies",
                      "communication_settings",
                      "credit_check_passed"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Must be unique"
                      },
                      "invoice_addresses": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "city",
                                "country"
                              ],
                              "properties": {
                                "street_1": {
                                  "type": "string"
                                },
                                "street_2": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "2 letter ISO code"
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "used along with latitude to define geographic coordinates."
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "used along with longitude to define geographic coordinates."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Company invoice address",
                              "required": [
                                "company_name",
                                "office_name",
                                "status",
                                "invoice_overview_receivers",
                                "payment_method",
                                "billing_aggregation"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "to distinguish the type of invoice address"
                                },
                                "vat_id": {
                                  "type": "string",
                                  "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "name of the company"
                                },
                                "office_name": {
                                  "type": "string",
                                  "description": "name which must be unique within the invoice addresses list"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "active",
                                    "inactive"
                                  ],
                                  "description": "company should have at least one active invoice address"
                                },
                                "invoice_overview_receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                  }
                                },
                                "payment_method": {
                                  "type": "string",
                                  "enum": [
                                    "credit_card",
                                    "invoice",
                                    "sepa",
                                    "airplus"
                                  ],
                                  "description": "The type of payment used"
                                },
                                "billing_aggregation": {
                                  "type": "string",
                                  "enum": [
                                    "individual",
                                    "monthly",
                                    "semimonthly"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "description": "Note existing address can not be edited or deleted"
                      },
                      "invoice_overview_receivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "description": "Receiver email address that invoice overview report (eom) will be sent to"
                        }
                      },
                      "finance_email": {
                        "type": "string"
                      },
                      "travel_management_email": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                      },
                      "communication_settings": {
                        "type": "object",
                        "required": [
                          "confirmation",
                          "invoice",
                          "reminder"
                        ],
                        "description": "Settings that determine which persona receives which booking emails and documents.",
                        "properties": {
                          "confirmation": {
                            "type": "string",
                            "description": "Booking confirmation, itinerary, calendar invites",
                            "enum": [
                              "booker",
                              "traveler and booker"
                            ]
                          },
                          "invoice": {
                            "type": "string",
                            "enum": [
                              "booker",
                              "traveler and booker",
                              "finance only"
                            ]
                          },
                          "reminder": {
                            "type": "string",
                            "description": "Checkin reminder, sent out 24h prior to flight",
                            "enum": [
                              "traveler",
                              "booker",
                              "traveler and booker"
                            ]
                          }
                        }
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "EUR"
                        ],
                        "description": "ISO-4217"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "unverified",
                          "trial",
                          "customer",
                          "inactive"
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "cost_center_mandatory": {
                        "type": "boolean",
                        "default": false
                      },
                      "fare_codes": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during flight search requests.",
                            "properties": {
                              "web": {
                                "type": "array",
                                "description": "fare codes which applies for the web fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "carrier_code",
                                    "login_id",
                                    "api_password"
                                  ],
                                  "properties": {
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "login_id": {
                                      "type": "string"
                                    },
                                    "api_password": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "sabre": {
                                "type": "array",
                                "description": "fare codes which applies for the Sabre fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code",
                                    "carrier_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    },
                                    "carrier_code": {
                                      "type": "string"
                                    },
                                    "carrier_code_osi": {
                                      "type": "string"
                                    },
                                    "osi_text1": {
                                      "type": "string"
                                    },
                                    "osi_text2": {
                                      "type": "string"
                                    },
                                    "osi_text3": {
                                      "type": "string"
                                    },
                                    "osi_text4": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "farelogix": {
                                "type": "array",
                                "description": "fare codes which applies for the farelogix fares",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "pricing_code"
                                  ],
                                  "properties": {
                                    "pricing_code": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hotel": {
                            "type": "object",
                            "description": "Company specific Fare codes which applicable during hotel search requests.",
                            "properties": {
                              "booking_com": {
                                "type": "object",
                                "description": "fare codes which applies for the booking.com search",
                                "required": [
                                  "affiliate_id"
                                ],
                                "properties": {
                                  "affiliate_id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "hrs": {
                                "type": "object",
                                "description": "fare codes which applies for the hrs search",
                                "required": [
                                  "customer_key",
                                  "f_key"
                                ],
                                "properties": {
                                  "customer_key": {
                                    "type": "string"
                                  },
                                  "f_key": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policies": {
                        "type": "array",
                        "minLength": 1,
                        "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                        "items": {
                          "type": "object",
                          "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                          "required": [
                            "id",
                            "name",
                            "default"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                            },
                            "name": {
                              "type": "string",
                              "description": "name of the policy"
                            },
                            "default": {
                              "type": "boolean",
                              "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "flight": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "cabin_class_rules"
                                  ],
                                  "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                  "properties": {
                                    "cabin_class_rules": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "duration_from",
                                          "cabin_class"
                                        ],
                                        "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                        "properties": {
                                          "duration_from": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                          },
                                          "duration_to": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 24,
                                            "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                          },
                                          "cabin_class": {
                                            "description": "Highest allowed cabin class for this rule.",
                                            "type": "string",
                                            "enum": [
                                              "economy",
                                              "economy plus",
                                              "business",
                                              "first"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                          }
                                        }
                                      },
                                      "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "preferred_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "avoided_airlines": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "luggage": {
                                      "type": "boolean"
                                    },
                                    "rebookable": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "hotel": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "required": [
                                    "country_budgets"
                                  ],
                                  "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                  "properties": {
                                    "max_stars": {
                                      "type": "number",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                    },
                                    "default_budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                    },
                                    "country_budgets": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "country",
                                          "budget"
                                        ],
                                        "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                        "properties": {
                                          "country": {
                                            "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                            "type": "string",
                                            "pattern": "^[A-Z]{2}$"
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Max budget in EUR per night, same semantics as default_budget."
                                          }
                                        }
                                      },
                                      "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "min_stars": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 5,
                                      "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                    },
                                    "includes_breakfast": {
                                      "type": "boolean"
                                    },
                                    "includes_wifi": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "rental_car": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                      "type": "string",
                                      "enum": [
                                        "M",
                                        "N",
                                        "E",
                                        "H",
                                        "C",
                                        "D",
                                        "I",
                                        "J",
                                        "S",
                                        "R",
                                        "F",
                                        "G",
                                        "P",
                                        "U",
                                        "L",
                                        "W",
                                        "O",
                                        "X"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "required": [
                                    "preferred_vendors",
                                    "avoided_vendors"
                                  ],
                                  "properties": {
                                    "preferred_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "avoided_vendors": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "Europcar",
                                          "Enterprise",
                                          "Hertz",
                                          "Sixt"
                                        ]
                                      }
                                    },
                                    "insurance": {
                                      "type": "string",
                                      "enum": [
                                        "yes with excess",
                                        "yes without excess"
                                      ]
                                    },
                                    "navigation_system": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "train": {
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "object",
                                  "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                  "properties": {
                                    "max_class": {
                                      "description": "Defines the highest train class that travelers are allowed to travel in.",
                                      "type": "string",
                                      "enum": [
                                        "1",
                                        "2"
                                      ]
                                    },
                                    "budget": {
                                      "type": "number",
                                      "minimum": 1,
                                      "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                    }
                                  }
                                },
                                "preferences": {
                                  "type": "object",
                                  "properties": {
                                    "seat_reservation_against_payment": {
                                      "type": "boolean"
                                    },
                                    "flexible": {
                                      "type": "boolean"
                                    },
                                    "cancelable": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policy_remarks": {
                        "type": "object",
                        "properties": {
                          "flight": {
                            "type": "string"
                          },
                          "hotel": {
                            "type": "string"
                          },
                          "train": {
                            "type": "string"
                          },
                          "rental_car": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_booking_volume": {
                        "type": "number",
                        "enum": [
                          5,
                          10,
                          20,
                          50,
                          100,
                          200,
                          500
                        ]
                      },
                      "credit_check_passed": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/account/name/{name}": {
        "head": {
          "description": "Check if account with company name aleady exists",
          "x-swagger-router-controller": "Account",
          "operationId": "existsAccount",
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Company name",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "Account"
          ],
          "responses": {
            "200": {
              "description": "Company exists"
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/account/{companyId}/traveler": {
        "get": {
          "description": "get all account travelers",
          "x-swagger-router-controller": "AccountTraveler",
          "operationId": "findAccountTraveler",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "q",
              "in": "query",
              "description": "Search for booking with given lucene query, if present es based search will be triggered",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Search limit",
              "required": false,
              "type": "number",
              "maximum": 1000
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Search offset",
              "required": false,
              "type": "number",
              "minimum": 0
            }
          ],
          "tags": [
            "AccountTraveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "first_name",
                            "last_name",
                            "language",
                            "title",
                            "gender"
                          ],
                          "properties": {
                            "company": {
                              "type": "string",
                              "description": "ID of the company this traveler belongs to"
                            },
                            "invoice_address_id": {
                              "type": "string",
                              "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "middle_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                            },
                            "language": {
                              "type": "string",
                              "enum": [
                                "de",
                                "en"
                              ],
                              "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                            },
                            "title": {
                              "type": "string",
                              "enum": [
                                "Mr",
                                "Mrs"
                              ]
                            },
                            "nationality": {
                              "type": "string",
                              "description": "2 letter ISO code"
                            },
                            "gender": {
                              "type": "string",
                              "enum": [
                                "m",
                                "f"
                              ]
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "phone": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                "managed": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                                },
                                "newsletter_subscribed": {
                                  "type": "boolean",
                                  "default": true,
                                  "description": "indicates whether customer wants to receive newsletter"
                                }
                              }
                            },
                            "identifications": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "issuing_country",
                                  "card_number"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "passport",
                                      "id_card",
                                      "drivers_license",
                                      "global_entry_ktn"
                                    ]
                                  },
                                  "issuing_country": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "issued_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Format YYYY-MM-DD"
                                  }
                                }
                              }
                            },
                            "loyalty_cards": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "description": "Traveler loyalty cards are bound to a specific person",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "pin": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                  }
                                }
                              }
                            },
                            "client_cost_center_1": {
                              "type": "string",
                              "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                            },
                            "client_cost_center_2": {
                              "type": "string"
                            },
                            "client_cost_center_3": {
                              "type": "string"
                            },
                            "preference": {
                              "type": "object",
                              "properties": {
                                "airplane": {
                                  "type": "object",
                                  "properties": {
                                    "seat": {
                                      "type": "string",
                                      "enum": [
                                        "window",
                                        "aisle"
                                      ]
                                    },
                                    "section": {
                                      "type": "string",
                                      "enum": [
                                        "front",
                                        "back"
                                      ]
                                    },
                                    "description": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "reservation": {
                                      "type": "boolean"
                                    },
                                    "class": {
                                      "type": "string"
                                    },
                                    "section": {
                                      "type": "string",
                                      "enum": [
                                        "open_saloon",
                                        "open_saloon_with_table",
                                        "compartment"
                                      ]
                                    },
                                    "seat": {
                                      "type": "string",
                                      "enum": [
                                        "window",
                                        "aisle"
                                      ]
                                    },
                                    "zone": {
                                      "type": "string",
                                      "enum": [
                                        "phone_zone",
                                        "quiet_zone"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "policy_id": {
                              "type": "string",
                              "description": "unique identifier belonging one of the policies of its company"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "email",
                            "invoice_address_id",
                            "notification_settings"
                          ],
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                            },
                            "invoice_address_id": {
                              "type": "string",
                              "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                            },
                            "notification_settings": {
                              "type": "object",
                              "required": [
                                "notification_receivers",
                                "when_to_send"
                              ],
                              "properties": {
                                "notification_receivers": {
                                  "type": "array",
                                  "description": "traveler ids to be notified when booking out of policy or all bookings",
                                  "maxItems": 5,
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "when_to_send": {
                                  "type": "string",
                                  "enum": [
                                    "never",
                                    "only_out_of_policy",
                                    "always"
                                  ]
                                }
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "admin",
                                  "central_booker",
                                  "traveler"
                                ]
                              },
                              "uniqueItems": true,
                              "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "_id",
                        "__v"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Technical PK"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "post": {
          "description": "Creates a new account traveler",
          "x-swagger-router-controller": "AccountTraveler",
          "operationId": "createAccountTraveler",
          "tags": [
            "AccountTraveler"
          ],
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "in": "body",
              "description": "traveler to add",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "first_name",
                      "last_name",
                      "language",
                      "title",
                      "gender"
                    ],
                    "properties": {
                      "company": {
                        "type": "string",
                        "description": "ID of the company this traveler belongs to"
                      },
                      "invoice_address_id": {
                        "type": "string",
                        "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "middle_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                      },
                      "language": {
                        "type": "string",
                        "enum": [
                          "de",
                          "en"
                        ],
                        "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                      },
                      "title": {
                        "type": "string",
                        "enum": [
                          "Mr",
                          "Mrs"
                        ]
                      },
                      "nationality": {
                        "type": "string",
                        "description": "2 letter ISO code"
                      },
                      "gender": {
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ]
                      },
                      "birthday": {
                        "type": "string",
                        "format": "date",
                        "description": "Format YYYY-MM-DD"
                      },
                      "contact": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string"
                          },
                          "address": {
                            "type": "object",
                            "required": [
                              "city",
                              "country"
                            ],
                            "properties": {
                              "street_1": {
                                "type": "string"
                              },
                              "street_2": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "zip_code": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string",
                                "description": "2 letter ISO code"
                              },
                              "longitude": {
                                "type": "number",
                                "description": "used along with latitude to define geographic coordinates."
                              },
                              "latitude": {
                                "type": "number",
                                "description": "used along with longitude to define geographic coordinates."
                              }
                            }
                          },
                          "managed": {
                            "type": "boolean",
                            "default": false,
                            "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                          },
                          "newsletter_subscribed": {
                            "type": "boolean",
                            "default": true,
                            "description": "indicates whether customer wants to receive newsletter"
                          }
                        }
                      },
                      "identifications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "issuing_country",
                            "card_number"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "passport",
                                "id_card",
                                "drivers_license",
                                "global_entry_ktn"
                              ]
                            },
                            "issuing_country": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            },
                            "issued_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            }
                          }
                        }
                      },
                      "loyalty_cards": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "description": "Traveler loyalty cards are bound to a specific person",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "card_number": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string",
                              "description": "Format YYYY-MM-DD"
                            },
                            "pin": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                            }
                          }
                        }
                      },
                      "client_cost_center_1": {
                        "type": "string",
                        "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                      },
                      "client_cost_center_2": {
                        "type": "string"
                      },
                      "client_cost_center_3": {
                        "type": "string"
                      },
                      "preference": {
                        "type": "object",
                        "properties": {
                          "airplane": {
                            "type": "object",
                            "properties": {
                              "seat": {
                                "type": "string",
                                "enum": [
                                  "window",
                                  "aisle"
                                ]
                              },
                              "section": {
                                "type": "string",
                                "enum": [
                                  "front",
                                  "back"
                                ]
                              },
                              "description": {
                                "type": "string"
                              }
                            }
                          },
                          "train": {
                            "type": "object",
                            "properties": {
                              "reservation": {
                                "type": "boolean"
                              },
                              "class": {
                                "type": "string"
                              },
                              "section": {
                                "type": "string",
                                "enum": [
                                  "open_saloon",
                                  "open_saloon_with_table",
                                  "compartment"
                                ]
                              },
                              "seat": {
                                "type": "string",
                                "enum": [
                                  "window",
                                  "aisle"
                                ]
                              },
                              "zone": {
                                "type": "string",
                                "enum": [
                                  "phone_zone",
                                  "quiet_zone"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "meta_data": {
                        "type": "object",
                        "description": "Some meta data we attach to all items we care about.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created this item"
                          },
                          "updated_by": {
                            "type": "string",
                            "description": "Email of the user who updated this item"
                          }
                        }
                      },
                      "policy_id": {
                        "type": "string",
                        "description": "unique identifier belonging one of the policies of its company"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "email",
                      "invoice_address_id",
                      "notification_settings"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                      },
                      "invoice_address_id": {
                        "type": "string",
                        "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                      },
                      "notification_settings": {
                        "type": "object",
                        "required": [
                          "notification_receivers",
                          "when_to_send"
                        ],
                        "properties": {
                          "notification_receivers": {
                            "type": "array",
                            "description": "traveler ids to be notified when booking out of policy or all bookings",
                            "maxItems": 5,
                            "uniqueItems": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "when_to_send": {
                            "type": "string",
                            "enum": [
                              "never",
                              "only_out_of_policy",
                              "always"
                            ]
                          }
                        }
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "admin",
                            "central_booker",
                            "traveler"
                          ]
                        },
                        "uniqueItems": true,
                        "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Payment response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/account/{companyId}/traveler/{id}/name": {
        "get": {
          "description": "Get an account traveler name",
          "x-swagger-router-controller": "AccountTraveler",
          "operationId": "getAccountTravelerName",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "AccountTravelerName"
          ],
          "responses": {
            "200": {
              "description": "Traveler's name details.",
              "schema": {
                "type": "object",
                "required": [
                  "__v",
                  "_id",
                  "first_name",
                  "last_name"
                ],
                "properties": {
                  "__v": {
                    "type": "number"
                  },
                  "_id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Traveler id."
                  },
                  "first_name": {
                    "type": "string",
                    "description": "Traveler name."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Traveler surname."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/account/{companyId}/traveler/{id}": {
        "get": {
          "description": "Get an account traveler",
          "x-swagger-router-controller": "AccountTraveler",
          "operationId": "getAccountTraveler",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "AccountTraveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "put": {
          "description": "Update an account traveler",
          "x-swagger-router-controller": "AccountTraveler",
          "operationId": "updateAccountTraveler",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "in": "body",
              "description": "traveler to edit",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "tags": [
            "AccountTraveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "language",
                          "title",
                          "gender"
                        ],
                        "properties": {
                          "company": {
                            "type": "string",
                            "description": "ID of the company this traveler belongs to"
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "middle_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "de",
                              "en"
                            ],
                            "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                          },
                          "title": {
                            "type": "string",
                            "enum": [
                              "Mr",
                              "Mrs"
                            ]
                          },
                          "nationality": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "gender": {
                            "type": "string",
                            "enum": [
                              "m",
                              "f"
                            ]
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "description": "Format YYYY-MM-DD"
                          },
                          "contact": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "city",
                                  "country"
                                ],
                                "properties": {
                                  "street_1": {
                                    "type": "string"
                                  },
                                  "street_2": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "2 letter ISO code"
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "used along with latitude to define geographic coordinates."
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "used along with longitude to define geographic coordinates."
                                  }
                                }
                              },
                              "managed": {
                                "type": "boolean",
                                "default": false,
                                "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                              },
                              "newsletter_subscribed": {
                                "type": "boolean",
                                "default": true,
                                "description": "indicates whether customer wants to receive newsletter"
                              }
                            }
                          },
                          "identifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "issuing_country",
                                "card_number"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "passport",
                                    "id_card",
                                    "drivers_license",
                                    "global_entry_ktn"
                                  ]
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "issued_at": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Format YYYY-MM-DD"
                                }
                              }
                            }
                          },
                          "loyalty_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "Traveler loyalty cards are bound to a specific person",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "description": "Format YYYY-MM-DD"
                                },
                                "pin": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                }
                              }
                            }
                          },
                          "client_cost_center_1": {
                            "type": "string",
                            "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                          },
                          "client_cost_center_2": {
                            "type": "string"
                          },
                          "client_cost_center_3": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "object",
                            "properties": {
                              "airplane": {
                                "type": "object",
                                "properties": {
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "front",
                                      "back"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "properties": {
                                  "reservation": {
                                    "type": "boolean"
                                  },
                                  "class": {
                                    "type": "string"
                                  },
                                  "section": {
                                    "type": "string",
                                    "enum": [
                                      "open_saloon",
                                      "open_saloon_with_table",
                                      "compartment"
                                    ]
                                  },
                                  "seat": {
                                    "type": "string",
                                    "enum": [
                                      "window",
                                      "aisle"
                                    ]
                                  },
                                  "zone": {
                                    "type": "string",
                                    "enum": [
                                      "phone_zone",
                                      "quiet_zone"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "meta_data": {
                            "type": "object",
                            "description": "Some meta data we attach to all items we care about.",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Email of the user who created this item"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "Email of the user who updated this item"
                              }
                            }
                          },
                          "policy_id": {
                            "type": "string",
                            "description": "unique identifier belonging one of the policies of its company"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "email",
                          "invoice_address_id",
                          "notification_settings"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                          },
                          "invoice_address_id": {
                            "type": "string",
                            "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                          },
                          "notification_settings": {
                            "type": "object",
                            "required": [
                              "notification_receivers",
                              "when_to_send"
                            ],
                            "properties": {
                              "notification_receivers": {
                                "type": "array",
                                "description": "traveler ids to be notified when booking out of policy or all bookings",
                                "maxItems": 5,
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "when_to_send": {
                                "type": "string",
                                "enum": [
                                  "never",
                                  "only_out_of_policy",
                                  "always"
                                ]
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "central_booker",
                                "traveler"
                              ]
                            },
                            "uniqueItems": true,
                            "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "_id",
                      "__v"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Technical PK"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "delete": {
          "description": "Delete traveler of specific account. Only admin of the company is allowed to delete a traveler of his company.",
          "x-swagger-router-controller": "AccountTraveler",
          "operationId": "deleteAccountTraveler",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "Company id",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "Traveler id",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "Traveler"
          ],
          "responses": {
            "200": {
              "description": "Traveler is deleted"
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/collective_invoice": {
        "get": {
          "description": "Get all bookings",
          "x-swagger-router-controller": "CollectiveInvoice",
          "operationId": "findCollectiveInvoice",
          "tags": [
            "Collective Invoice"
          ],
          "parameters": [
            {
              "name": "company_id",
              "in": "query",
              "description": "Search for collective invoices based on company id",
              "required": false,
              "type": "string"
            },
            {
              "name": "invoice_address_id",
              "in": "query",
              "description": "Search for collective invoices based on company id",
              "required": false,
              "type": "string"
            },
            {
              "name": "invoice_start_date",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "invoice_end_date",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "billing_aggregation",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "individual",
                "monthly",
                "semimonthly"
              ]
            },
            {
              "name": "payment_method",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "credit_card",
                "invoice",
                "sepa",
                "airplus"
              ],
              "description": "The type of payment used"
            }
          ],
          "responses": {
            "200": {
              "description": "Collective Invoice response",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "invoice_address",
                    "invoice_start_date",
                    "invoice_end_date",
                    "date_of_issue"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "date_of_issue": {
                      "type": "string",
                      "format": "date"
                    },
                    "company_id": {
                      "type": "string",
                      "description": "ID of company the new collective invoice has been created for."
                    },
                    "invoice_address": {
                      "description": "Specific invoice address of company the new collective invoice has been created for.",
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "city",
                            "country"
                          ],
                          "properties": {
                            "street_1": {
                              "type": "string"
                            },
                            "street_2": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string",
                              "description": "2 letter ISO code"
                            },
                            "longitude": {
                              "type": "number",
                              "description": "used along with latitude to define geographic coordinates."
                            },
                            "latitude": {
                              "type": "number",
                              "description": "used along with longitude to define geographic coordinates."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Company invoice address",
                          "required": [
                            "company_name",
                            "office_name",
                            "status",
                            "invoice_overview_receivers",
                            "payment_method",
                            "billing_aggregation"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "to distinguish the type of invoice address"
                            },
                            "vat_id": {
                              "type": "string",
                              "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                            },
                            "company_name": {
                              "type": "string",
                              "description": "name of the company"
                            },
                            "office_name": {
                              "type": "string",
                              "description": "name which must be unique within the invoice addresses list"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "inactive"
                              ],
                              "description": "company should have at least one active invoice address"
                            },
                            "invoice_overview_receivers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                              }
                            },
                            "payment_method": {
                              "type": "string",
                              "enum": [
                                "credit_card",
                                "invoice",
                                "sepa",
                                "airplus"
                              ],
                              "description": "The type of payment used"
                            },
                            "billing_aggregation": {
                              "type": "string",
                              "enum": [
                                "individual",
                                "monthly",
                                "semimonthly"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "document_id": {
                      "type": "string",
                      "description": "The URL of already generated collective invoice document."
                    },
                    "invoice_start_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "invoice_end_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "invoice_number": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        },
        "post": {
          "description": "Creates new collective invoice",
          "x-swagger-router-controller": "CollectiveInvoice",
          "operationId": "createCollectiveInvoice",
          "tags": [
            "Collective Invoice"
          ],
          "parameters": [
            {
              "name": "requestBody",
              "in": "body",
              "description": "invoice to add",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "invoice_address",
                  "invoice_start_date",
                  "invoice_end_date",
                  "date_of_issue"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "date_of_issue": {
                    "type": "string",
                    "format": "date"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "ID of company the new collective invoice has been created for."
                  },
                  "invoice_address": {
                    "description": "Specific invoice address of company the new collective invoice has been created for.",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "city",
                          "country"
                        ],
                        "properties": {
                          "street_1": {
                            "type": "string"
                          },
                          "street_2": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "used along with latitude to define geographic coordinates."
                          },
                          "latitude": {
                            "type": "number",
                            "description": "used along with longitude to define geographic coordinates."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Company invoice address",
                        "required": [
                          "company_name",
                          "office_name",
                          "status",
                          "invoice_overview_receivers",
                          "payment_method",
                          "billing_aggregation"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "to distinguish the type of invoice address"
                          },
                          "vat_id": {
                            "type": "string",
                            "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                          },
                          "company_name": {
                            "type": "string",
                            "description": "name of the company"
                          },
                          "office_name": {
                            "type": "string",
                            "description": "name which must be unique within the invoice addresses list"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "company should have at least one active invoice address"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                            }
                          },
                          "payment_method": {
                            "type": "string",
                            "enum": [
                              "credit_card",
                              "invoice",
                              "sepa",
                              "airplus"
                            ],
                            "description": "The type of payment used"
                          },
                          "billing_aggregation": {
                            "type": "string",
                            "enum": [
                              "individual",
                              "monthly",
                              "semimonthly"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "document_id": {
                    "type": "string",
                    "description": "The URL of already generated collective invoice document."
                  },
                  "invoice_start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_number": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Collective invoice response",
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "invoice_address",
                  "invoice_start_date",
                  "invoice_end_date",
                  "date_of_issue"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "date_of_issue": {
                    "type": "string",
                    "format": "date"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "ID of company the new collective invoice has been created for."
                  },
                  "invoice_address": {
                    "description": "Specific invoice address of company the new collective invoice has been created for.",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "city",
                          "country"
                        ],
                        "properties": {
                          "street_1": {
                            "type": "string"
                          },
                          "street_2": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "used along with latitude to define geographic coordinates."
                          },
                          "latitude": {
                            "type": "number",
                            "description": "used along with longitude to define geographic coordinates."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Company invoice address",
                        "required": [
                          "company_name",
                          "office_name",
                          "status",
                          "invoice_overview_receivers",
                          "payment_method",
                          "billing_aggregation"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "to distinguish the type of invoice address"
                          },
                          "vat_id": {
                            "type": "string",
                            "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                          },
                          "company_name": {
                            "type": "string",
                            "description": "name of the company"
                          },
                          "office_name": {
                            "type": "string",
                            "description": "name which must be unique within the invoice addresses list"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "company should have at least one active invoice address"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                            }
                          },
                          "payment_method": {
                            "type": "string",
                            "enum": [
                              "credit_card",
                              "invoice",
                              "sepa",
                              "airplus"
                            ],
                            "description": "The type of payment used"
                          },
                          "billing_aggregation": {
                            "type": "string",
                            "enum": [
                              "individual",
                              "monthly",
                              "semimonthly"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "document_id": {
                    "type": "string",
                    "description": "The URL of already generated collective invoice document."
                  },
                  "invoice_start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_number": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/collective_invoice/{id}": {
        "put": {
          "description": "Updates collective invoice",
          "x-swagger-router-controller": "CollectiveInvoice",
          "operationId": "updateCollectiveInvoice",
          "tags": [
            "Collective Invoice"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "id of invoice",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "in": "body",
              "description": "invoice to be updated add",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "invoice_address",
                  "invoice_start_date",
                  "invoice_end_date",
                  "date_of_issue"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "date_of_issue": {
                    "type": "string",
                    "format": "date"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "ID of company the new collective invoice has been created for."
                  },
                  "invoice_address": {
                    "description": "Specific invoice address of company the new collective invoice has been created for.",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "city",
                          "country"
                        ],
                        "properties": {
                          "street_1": {
                            "type": "string"
                          },
                          "street_2": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "used along with latitude to define geographic coordinates."
                          },
                          "latitude": {
                            "type": "number",
                            "description": "used along with longitude to define geographic coordinates."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Company invoice address",
                        "required": [
                          "company_name",
                          "office_name",
                          "status",
                          "invoice_overview_receivers",
                          "payment_method",
                          "billing_aggregation"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "to distinguish the type of invoice address"
                          },
                          "vat_id": {
                            "type": "string",
                            "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                          },
                          "company_name": {
                            "type": "string",
                            "description": "name of the company"
                          },
                          "office_name": {
                            "type": "string",
                            "description": "name which must be unique within the invoice addresses list"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "company should have at least one active invoice address"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                            }
                          },
                          "payment_method": {
                            "type": "string",
                            "enum": [
                              "credit_card",
                              "invoice",
                              "sepa",
                              "airplus"
                            ],
                            "description": "The type of payment used"
                          },
                          "billing_aggregation": {
                            "type": "string",
                            "enum": [
                              "individual",
                              "monthly",
                              "semimonthly"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "document_id": {
                    "type": "string",
                    "description": "The URL of already generated collective invoice document."
                  },
                  "invoice_start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_number": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Collective invoice response",
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "invoice_address",
                  "invoice_start_date",
                  "invoice_end_date",
                  "date_of_issue"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "date_of_issue": {
                    "type": "string",
                    "format": "date"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "ID of company the new collective invoice has been created for."
                  },
                  "invoice_address": {
                    "description": "Specific invoice address of company the new collective invoice has been created for.",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "city",
                          "country"
                        ],
                        "properties": {
                          "street_1": {
                            "type": "string"
                          },
                          "street_2": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "used along with latitude to define geographic coordinates."
                          },
                          "latitude": {
                            "type": "number",
                            "description": "used along with longitude to define geographic coordinates."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Company invoice address",
                        "required": [
                          "company_name",
                          "office_name",
                          "status",
                          "invoice_overview_receivers",
                          "payment_method",
                          "billing_aggregation"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "to distinguish the type of invoice address"
                          },
                          "vat_id": {
                            "type": "string",
                            "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                          },
                          "company_name": {
                            "type": "string",
                            "description": "name of the company"
                          },
                          "office_name": {
                            "type": "string",
                            "description": "name which must be unique within the invoice addresses list"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "company should have at least one active invoice address"
                          },
                          "invoice_overview_receivers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                            }
                          },
                          "payment_method": {
                            "type": "string",
                            "enum": [
                              "credit_card",
                              "invoice",
                              "sepa",
                              "airplus"
                            ],
                            "description": "The type of payment used"
                          },
                          "billing_aggregation": {
                            "type": "string",
                            "enum": [
                              "individual",
                              "monthly",
                              "semimonthly"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "document_id": {
                    "type": "string",
                    "description": "The URL of already generated collective invoice document."
                  },
                  "invoice_start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "invoice_number": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/company.getCompaniesByIds": {
        "post": {
          "description": "fetch companies based on array of ids",
          "x-swagger-router-controller": "CompanyRpc",
          "operationId": "getCompaniesByIds",
          "tags": [
            "Company.RPC"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "type": "array",
                "maxItems": 200,
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Company response",
              "schema": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "name",
                            "invoice_addresses",
                            "invoice_overview_receivers",
                            "language",
                            "currency",
                            "status",
                            "policies",
                            "communication_settings",
                            "credit_check_passed"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Must be unique"
                            },
                            "invoice_addresses": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "city",
                                      "country"
                                    ],
                                    "properties": {
                                      "street_1": {
                                        "type": "string"
                                      },
                                      "street_2": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "zip_code": {
                                        "type": "string"
                                      },
                                      "city": {
                                        "type": "string"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "2 letter ISO code"
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "used along with latitude to define geographic coordinates."
                                      },
                                      "latitude": {
                                        "type": "number",
                                        "description": "used along with longitude to define geographic coordinates."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Company invoice address",
                                    "required": [
                                      "company_name",
                                      "office_name",
                                      "status",
                                      "invoice_overview_receivers",
                                      "payment_method",
                                      "billing_aggregation"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "to distinguish the type of invoice address"
                                      },
                                      "vat_id": {
                                        "type": "string",
                                        "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                                      },
                                      "company_name": {
                                        "type": "string",
                                        "description": "name of the company"
                                      },
                                      "office_name": {
                                        "type": "string",
                                        "description": "name which must be unique within the invoice addresses list"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "active",
                                          "inactive"
                                        ],
                                        "description": "company should have at least one active invoice address"
                                      },
                                      "invoice_overview_receivers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                                        }
                                      },
                                      "payment_method": {
                                        "type": "string",
                                        "enum": [
                                          "credit_card",
                                          "invoice",
                                          "sepa",
                                          "airplus"
                                        ],
                                        "description": "The type of payment used"
                                      },
                                      "billing_aggregation": {
                                        "type": "string",
                                        "enum": [
                                          "individual",
                                          "monthly",
                                          "semimonthly"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "description": "Note existing address can not be edited or deleted"
                            },
                            "invoice_overview_receivers": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "description": "Receiver email address that invoice overview report (eom) will be sent to"
                              }
                            },
                            "finance_email": {
                              "type": "string"
                            },
                            "travel_management_email": {
                              "type": "string"
                            },
                            "language": {
                              "type": "string",
                              "enum": [
                                "de",
                                "en"
                              ],
                              "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                            },
                            "communication_settings": {
                              "type": "object",
                              "required": [
                                "confirmation",
                                "invoice",
                                "reminder"
                              ],
                              "description": "Settings that determine which persona receives which booking emails and documents.",
                              "properties": {
                                "confirmation": {
                                  "type": "string",
                                  "description": "Booking confirmation, itinerary, calendar invites",
                                  "enum": [
                                    "booker",
                                    "traveler and booker"
                                  ]
                                },
                                "invoice": {
                                  "type": "string",
                                  "enum": [
                                    "booker",
                                    "traveler and booker",
                                    "finance only"
                                  ]
                                },
                                "reminder": {
                                  "type": "string",
                                  "description": "Checkin reminder, sent out 24h prior to flight",
                                  "enum": [
                                    "traveler",
                                    "booker",
                                    "traveler and booker"
                                  ]
                                }
                              }
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "EUR"
                              ],
                              "description": "ISO-4217"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "unverified",
                                "trial",
                                "customer",
                                "inactive"
                              ]
                            },
                            "phone": {
                              "type": "string"
                            },
                            "loyalty_cards": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "description": "Traveler loyalty cards are bound to a specific person",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "pin": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                  }
                                }
                              }
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "cost_center_mandatory": {
                              "type": "boolean",
                              "default": false
                            },
                            "fare_codes": {
                              "type": "object",
                              "properties": {
                                "flight": {
                                  "type": "object",
                                  "description": "Company specific Fare codes which applicable during flight search requests.",
                                  "properties": {
                                    "web": {
                                      "type": "array",
                                      "description": "fare codes which applies for the web fares",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "carrier_code",
                                          "login_id",
                                          "api_password"
                                        ],
                                        "properties": {
                                          "carrier_code": {
                                            "type": "string"
                                          },
                                          "login_id": {
                                            "type": "string"
                                          },
                                          "api_password": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "sabre": {
                                      "type": "array",
                                      "description": "fare codes which applies for the Sabre fares",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "pricing_code",
                                          "carrier_code"
                                        ],
                                        "properties": {
                                          "pricing_code": {
                                            "type": "string"
                                          },
                                          "carrier_code": {
                                            "type": "string"
                                          },
                                          "carrier_code_osi": {
                                            "type": "string"
                                          },
                                          "osi_text1": {
                                            "type": "string"
                                          },
                                          "osi_text2": {
                                            "type": "string"
                                          },
                                          "osi_text3": {
                                            "type": "string"
                                          },
                                          "osi_text4": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "farelogix": {
                                      "type": "array",
                                      "description": "fare codes which applies for the farelogix fares",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "pricing_code"
                                        ],
                                        "properties": {
                                          "pricing_code": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "hotel": {
                                  "type": "object",
                                  "description": "Company specific Fare codes which applicable during hotel search requests.",
                                  "properties": {
                                    "booking_com": {
                                      "type": "object",
                                      "description": "fare codes which applies for the booking.com search",
                                      "required": [
                                        "affiliate_id"
                                      ],
                                      "properties": {
                                        "affiliate_id": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "hrs": {
                                      "type": "object",
                                      "description": "fare codes which applies for the hrs search",
                                      "required": [
                                        "customer_key",
                                        "f_key"
                                      ],
                                      "properties": {
                                        "customer_key": {
                                          "type": "string"
                                        },
                                        "f_key": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "policies": {
                              "type": "array",
                              "minLength": 1,
                              "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                              "items": {
                                "type": "object",
                                "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                                "required": [
                                  "id",
                                  "name",
                                  "default"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "name of the policy"
                                  },
                                  "default": {
                                    "type": "boolean",
                                    "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                                  },
                                  "meta_data": {
                                    "type": "object",
                                    "description": "Some meta data we attach to all items we care about.",
                                    "properties": {
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "created_by": {
                                        "type": "string",
                                        "description": "Email of the user who created this item"
                                      },
                                      "updated_by": {
                                        "type": "string",
                                        "description": "Email of the user who updated this item"
                                      }
                                    }
                                  },
                                  "flight": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "required": [
                                          "cabin_class_rules"
                                        ],
                                        "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                                        "properties": {
                                          "cabin_class_rules": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "duration_from",
                                                "cabin_class"
                                              ],
                                              "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                              "properties": {
                                                "duration_from": {
                                                  "type": "number",
                                                  "minimum": 0,
                                                  "maximum": 24,
                                                  "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                                },
                                                "duration_to": {
                                                  "type": "number",
                                                  "minimum": 1,
                                                  "maximum": 24,
                                                  "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                                },
                                                "cabin_class": {
                                                  "description": "Highest allowed cabin class for this rule.",
                                                  "type": "string",
                                                  "enum": [
                                                    "economy",
                                                    "economy plus",
                                                    "business",
                                                    "first"
                                                  ]
                                                },
                                                "budget": {
                                                  "type": "number",
                                                  "minimum": 1,
                                                  "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                                }
                                              }
                                            },
                                            "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "properties": {
                                          "preferred_airlines": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "avoided_airlines": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "luggage": {
                                            "type": "boolean"
                                          },
                                          "rebookable": {
                                            "type": "boolean"
                                          },
                                          "cancelable": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "hotel": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "required": [
                                          "country_budgets"
                                        ],
                                        "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                                        "properties": {
                                          "max_stars": {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 5,
                                            "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                          },
                                          "default_budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                          },
                                          "country_budgets": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "country",
                                                "budget"
                                              ],
                                              "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                              "properties": {
                                                "country": {
                                                  "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                                  "type": "string",
                                                  "pattern": "^[A-Z]{2}$"
                                                },
                                                "budget": {
                                                  "type": "number",
                                                  "minimum": 1,
                                                  "description": "Max budget in EUR per night, same semantics as default_budget."
                                                }
                                              }
                                            },
                                            "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "properties": {
                                          "min_stars": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 5,
                                            "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                          },
                                          "includes_breakfast": {
                                            "type": "boolean"
                                          },
                                          "includes_wifi": {
                                            "type": "boolean"
                                          },
                                          "cancelable": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rental_car": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                                        "properties": {
                                          "max_class": {
                                            "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                            "type": "string",
                                            "enum": [
                                              "M",
                                              "N",
                                              "E",
                                              "H",
                                              "C",
                                              "D",
                                              "I",
                                              "J",
                                              "S",
                                              "R",
                                              "F",
                                              "G",
                                              "P",
                                              "U",
                                              "L",
                                              "W",
                                              "O",
                                              "X"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "required": [
                                          "preferred_vendors",
                                          "avoided_vendors"
                                        ],
                                        "properties": {
                                          "preferred_vendors": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "enum": [
                                                "Europcar",
                                                "Enterprise",
                                                "Hertz",
                                                "Sixt"
                                              ]
                                            }
                                          },
                                          "avoided_vendors": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "enum": [
                                                "Europcar",
                                                "Enterprise",
                                                "Hertz",
                                                "Sixt"
                                              ]
                                            }
                                          },
                                          "insurance": {
                                            "type": "string",
                                            "enum": [
                                              "yes with excess",
                                              "yes without excess"
                                            ]
                                          },
                                          "navigation_system": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "train": {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "object",
                                        "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                                        "properties": {
                                          "max_class": {
                                            "description": "Defines the highest train class that travelers are allowed to travel in.",
                                            "type": "string",
                                            "enum": [
                                              "1",
                                              "2"
                                            ]
                                          },
                                          "budget": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                          }
                                        }
                                      },
                                      "preferences": {
                                        "type": "object",
                                        "properties": {
                                          "seat_reservation_against_payment": {
                                            "type": "boolean"
                                          },
                                          "flexible": {
                                            "type": "boolean"
                                          },
                                          "cancelable": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "policy_remarks": {
                              "type": "object",
                              "properties": {
                                "flight": {
                                  "type": "string"
                                },
                                "hotel": {
                                  "type": "string"
                                },
                                "train": {
                                  "type": "string"
                                },
                                "rental_car": {
                                  "type": "string"
                                }
                              }
                            },
                            "monthly_booking_volume": {
                              "type": "number",
                              "enum": [
                                5,
                                10,
                                20,
                                50,
                                100,
                                200,
                                500
                              ]
                            },
                            "credit_check_passed": {
                              "type": "boolean"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "pricing": {
                              "type": "object",
                              "properties": {
                                "payment_fee": {
                                  "type": "boolean",
                                  "description": "Whether payment fees should be applied."
                                },
                                "apply_booking_fee": {
                                  "type": "boolean",
                                  "description": "Whether booking fees should be applied"
                                },
                                "booking_fee_data": {
                                  "type": "object",
                                  "required": [
                                    "domestic_countries",
                                    "continents",
                                    "booking_fees"
                                  ],
                                  "properties": {
                                    "booking_fees": {
                                      "type": "object",
                                      "required": [
                                        "flight",
                                        "hotel",
                                        "rental_car",
                                        "train"
                                      ],
                                      "description": "Preferences regarding booking fees",
                                      "properties": {
                                        "flight": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "value",
                                                      "comtravo_fee_source"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "number"
                                                      },
                                                      "comtravo_fee_source": {
                                                        "type": "string",
                                                        "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                        "enum": [
                                                          "online",
                                                          "offline"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "geography"
                                                    ],
                                                    "properties": {
                                                      "geography": {
                                                        "enum": [
                                                          "domestic",
                                                          "continental",
                                                          "others"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "value",
                                                      "comtravo_fee_source"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "number"
                                                      },
                                                      "comtravo_fee_source": {
                                                        "type": "string",
                                                        "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                        "enum": [
                                                          "online",
                                                          "offline"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "geography"
                                                    ],
                                                    "properties": {
                                                      "geography": {
                                                        "enum": [
                                                          "domestic",
                                                          "continental",
                                                          "others"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "value",
                                                      "comtravo_fee_source"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "number"
                                                      },
                                                      "comtravo_fee_source": {
                                                        "type": "string",
                                                        "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                        "enum": [
                                                          "online",
                                                          "offline"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "geography"
                                                    ],
                                                    "properties": {
                                                      "geography": {
                                                        "enum": [
                                                          "domestic",
                                                          "continental",
                                                          "others"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "hotel": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rental_car": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "train": {
                                          "type": "object",
                                          "required": [
                                            "booking",
                                            "rebooking",
                                            "cancelation"
                                          ],
                                          "properties": {
                                            "booking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "rebooking": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "cancelation": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "value",
                                                  "comtravo_fee_source"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "number"
                                                  },
                                                  "comtravo_fee_source": {
                                                    "type": "string",
                                                    "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                                    "enum": [
                                                      "online",
                                                      "offline"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "domestic_countries": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "continents": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "integrations": {
                              "type": "object",
                              "properties": {
                                "circula": {
                                  "type": "object",
                                  "description": "Circula integration detail.",
                                  "properties": {
                                    "token": {
                                      "type": "string",
                                      "description": "Circula integration token"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "_id",
                        "__v"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Technical PK"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      },
      "/traveler.getTravelersByIds": {
        "post": {
          "description": "fetch travelers based on array of ids",
          "x-swagger-router-controller": "TravelerRpc",
          "operationId": "getTravelersByIds",
          "tags": [
            "Traveler.RPC"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "type": "array",
                "maxItems": 200,
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Traveler response",
              "schema": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "first_name",
                            "last_name",
                            "language",
                            "title",
                            "gender"
                          ],
                          "properties": {
                            "company": {
                              "type": "string",
                              "description": "ID of the company this traveler belongs to"
                            },
                            "invoice_address_id": {
                              "type": "string",
                              "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "middle_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                            },
                            "language": {
                              "type": "string",
                              "enum": [
                                "de",
                                "en"
                              ],
                              "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                            },
                            "title": {
                              "type": "string",
                              "enum": [
                                "Mr",
                                "Mrs"
                              ]
                            },
                            "nationality": {
                              "type": "string",
                              "description": "2 letter ISO code"
                            },
                            "gender": {
                              "type": "string",
                              "enum": [
                                "m",
                                "f"
                              ]
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "description": "Format YYYY-MM-DD"
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "phone": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "object",
                                  "required": [
                                    "city",
                                    "country"
                                  ],
                                  "properties": {
                                    "street_1": {
                                      "type": "string"
                                    },
                                    "street_2": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "zip_code": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "2 letter ISO code"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "used along with latitude to define geographic coordinates."
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "used along with longitude to define geographic coordinates."
                                    }
                                  }
                                },
                                "managed": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                                },
                                "newsletter_subscribed": {
                                  "type": "boolean",
                                  "default": true,
                                  "description": "indicates whether customer wants to receive newsletter"
                                }
                              }
                            },
                            "identifications": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "issuing_country",
                                  "card_number"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "passport",
                                      "id_card",
                                      "drivers_license",
                                      "global_entry_ktn"
                                    ]
                                  },
                                  "issuing_country": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "issued_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Format YYYY-MM-DD"
                                  }
                                }
                              }
                            },
                            "loyalty_cards": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "description": "Traveler loyalty cards are bound to a specific person",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "string",
                                    "description": "Format YYYY-MM-DD"
                                  },
                                  "pin": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                                  }
                                }
                              }
                            },
                            "client_cost_center_1": {
                              "type": "string",
                              "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                            },
                            "client_cost_center_2": {
                              "type": "string"
                            },
                            "client_cost_center_3": {
                              "type": "string"
                            },
                            "preference": {
                              "type": "object",
                              "properties": {
                                "airplane": {
                                  "type": "object",
                                  "properties": {
                                    "seat": {
                                      "type": "string",
                                      "enum": [
                                        "window",
                                        "aisle"
                                      ]
                                    },
                                    "section": {
                                      "type": "string",
                                      "enum": [
                                        "front",
                                        "back"
                                      ]
                                    },
                                    "description": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "train": {
                                  "type": "object",
                                  "properties": {
                                    "reservation": {
                                      "type": "boolean"
                                    },
                                    "class": {
                                      "type": "string"
                                    },
                                    "section": {
                                      "type": "string",
                                      "enum": [
                                        "open_saloon",
                                        "open_saloon_with_table",
                                        "compartment"
                                      ]
                                    },
                                    "seat": {
                                      "type": "string",
                                      "enum": [
                                        "window",
                                        "aisle"
                                      ]
                                    },
                                    "zone": {
                                      "type": "string",
                                      "enum": [
                                        "phone_zone",
                                        "quiet_zone"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "Some meta data we attach to all items we care about.",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "created_by": {
                                  "type": "string",
                                  "description": "Email of the user who created this item"
                                },
                                "updated_by": {
                                  "type": "string",
                                  "description": "Email of the user who updated this item"
                                }
                              }
                            },
                            "policy_id": {
                              "type": "string",
                              "description": "unique identifier belonging one of the policies of its company"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "email",
                            "invoice_address_id",
                            "notification_settings"
                          ],
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                            },
                            "invoice_address_id": {
                              "type": "string",
                              "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                            },
                            "notification_settings": {
                              "type": "object",
                              "required": [
                                "notification_receivers",
                                "when_to_send"
                              ],
                              "properties": {
                                "notification_receivers": {
                                  "type": "array",
                                  "description": "traveler ids to be notified when booking out of policy or all bookings",
                                  "maxItems": 5,
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "when_to_send": {
                                  "type": "string",
                                  "enum": [
                                    "never",
                                    "only_out_of_policy",
                                    "always"
                                  ]
                                }
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "admin",
                                  "central_booker",
                                  "traveler"
                                ]
                              },
                              "uniqueItems": true,
                              "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "_id",
                        "__v"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Technical PK"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "400": {
              "description": "Illegal input for operation.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized operation",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "404": {
              "description": "Entity not found",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            },
            "default": {
              "description": "General Error",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  },
                  "diff": {
                    "type": "object"
                  },
                  "stripe_error_code": {
                    "type": "string",
                    "description": "When card is declined this code will be decline_code received from stripe. Otherwise it will be stripe error code."
                  }
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "loyaltyCardType": {
        "type": "object",
        "required": [
          "card_type",
          "text",
          "value"
        ],
        "properties": {
          "card_type": {
            "type": "string",
            "enum": [
              "traveler",
              "corporate"
            ]
          },
          "text": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "baseAccount": {
        "type": "object",
        "required": [
          "name",
          "invoice_addresses",
          "invoice_overview_receivers",
          "language",
          "currency",
          "status",
          "policies",
          "communication_settings",
          "credit_check_passed"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Must be unique"
          },
          "invoice_addresses": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "city",
                    "country"
                  ],
                  "properties": {
                    "street_1": {
                      "type": "string"
                    },
                    "street_2": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "description": "2 letter ISO code"
                    },
                    "longitude": {
                      "type": "number",
                      "description": "used along with latitude to define geographic coordinates."
                    },
                    "latitude": {
                      "type": "number",
                      "description": "used along with longitude to define geographic coordinates."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Company invoice address",
                  "required": [
                    "company_name",
                    "office_name",
                    "status",
                    "invoice_overview_receivers",
                    "payment_method",
                    "billing_aggregation"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "to distinguish the type of invoice address"
                    },
                    "vat_id": {
                      "type": "string",
                      "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                    },
                    "company_name": {
                      "type": "string",
                      "description": "name of the company"
                    },
                    "office_name": {
                      "type": "string",
                      "description": "name which must be unique within the invoice addresses list"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "description": "company should have at least one active invoice address"
                    },
                    "invoice_overview_receivers": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                      }
                    },
                    "payment_method": {
                      "type": "string",
                      "enum": [
                        "credit_card",
                        "invoice",
                        "sepa",
                        "airplus"
                      ],
                      "description": "The type of payment used"
                    },
                    "billing_aggregation": {
                      "type": "string",
                      "enum": [
                        "individual",
                        "monthly",
                        "semimonthly"
                      ]
                    }
                  }
                }
              ]
            },
            "description": "Note existing address can not be edited or deleted"
          },
          "invoice_overview_receivers": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "description": "Receiver email address that invoice overview report (eom) will be sent to"
            }
          },
          "finance_email": {
            "type": "string"
          },
          "travel_management_email": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "enum": [
              "de",
              "en"
            ],
            "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
          },
          "communication_settings": {
            "type": "object",
            "required": [
              "confirmation",
              "invoice",
              "reminder"
            ],
            "description": "Settings that determine which persona receives which booking emails and documents.",
            "properties": {
              "confirmation": {
                "type": "string",
                "description": "Booking confirmation, itinerary, calendar invites",
                "enum": [
                  "booker",
                  "traveler and booker"
                ]
              },
              "invoice": {
                "type": "string",
                "enum": [
                  "booker",
                  "traveler and booker",
                  "finance only"
                ]
              },
              "reminder": {
                "type": "string",
                "description": "Checkin reminder, sent out 24h prior to flight",
                "enum": [
                  "traveler",
                  "booker",
                  "traveler and booker"
                ]
              }
            }
          },
          "currency": {
            "type": "string",
            "enum": [
              "EUR"
            ],
            "description": "ISO-4217"
          },
          "status": {
            "type": "string",
            "enum": [
              "unverified",
              "trial",
              "customer",
              "inactive"
            ]
          },
          "phone": {
            "type": "string"
          },
          "loyalty_cards": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "description": "Traveler loyalty cards are bound to a specific person",
              "properties": {
                "type": {
                  "type": "string"
                },
                "card_number": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "string",
                  "description": "Format YYYY-MM-DD"
                },
                "pin": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                }
              }
            }
          },
          "meta_data": {
            "type": "object",
            "description": "Some meta data we attach to all items we care about.",
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "created_by": {
                "type": "string",
                "description": "Email of the user who created this item"
              },
              "updated_by": {
                "type": "string",
                "description": "Email of the user who updated this item"
              }
            }
          },
          "cost_center_mandatory": {
            "type": "boolean",
            "default": false
          },
          "fare_codes": {
            "type": "object",
            "properties": {
              "flight": {
                "type": "object",
                "description": "Company specific Fare codes which applicable during flight search requests.",
                "properties": {
                  "web": {
                    "type": "array",
                    "description": "fare codes which applies for the web fares",
                    "items": {
                      "type": "object",
                      "required": [
                        "carrier_code",
                        "login_id",
                        "api_password"
                      ],
                      "properties": {
                        "carrier_code": {
                          "type": "string"
                        },
                        "login_id": {
                          "type": "string"
                        },
                        "api_password": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sabre": {
                    "type": "array",
                    "description": "fare codes which applies for the Sabre fares",
                    "items": {
                      "type": "object",
                      "required": [
                        "pricing_code",
                        "carrier_code"
                      ],
                      "properties": {
                        "pricing_code": {
                          "type": "string"
                        },
                        "carrier_code": {
                          "type": "string"
                        },
                        "carrier_code_osi": {
                          "type": "string"
                        },
                        "osi_text1": {
                          "type": "string"
                        },
                        "osi_text2": {
                          "type": "string"
                        },
                        "osi_text3": {
                          "type": "string"
                        },
                        "osi_text4": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "farelogix": {
                    "type": "array",
                    "description": "fare codes which applies for the farelogix fares",
                    "items": {
                      "type": "object",
                      "required": [
                        "pricing_code"
                      ],
                      "properties": {
                        "pricing_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "hotel": {
                "type": "object",
                "description": "Company specific Fare codes which applicable during hotel search requests.",
                "properties": {
                  "booking_com": {
                    "type": "object",
                    "description": "fare codes which applies for the booking.com search",
                    "required": [
                      "affiliate_id"
                    ],
                    "properties": {
                      "affiliate_id": {
                        "type": "string"
                      }
                    }
                  },
                  "hrs": {
                    "type": "object",
                    "description": "fare codes which applies for the hrs search",
                    "required": [
                      "customer_key",
                      "f_key"
                    ],
                    "properties": {
                      "customer_key": {
                        "type": "string"
                      },
                      "f_key": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "policies": {
            "type": "array",
            "minLength": 1,
            "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
            "items": {
              "type": "object",
              "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
              "required": [
                "id",
                "name",
                "default"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                },
                "name": {
                  "type": "string",
                  "description": "name of the policy"
                },
                "default": {
                  "type": "boolean",
                  "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                },
                "meta_data": {
                  "type": "object",
                  "description": "Some meta data we attach to all items we care about.",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "Email of the user who created this item"
                    },
                    "updated_by": {
                      "type": "string",
                      "description": "Email of the user who updated this item"
                    }
                  }
                },
                "flight": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "object",
                      "required": [
                        "cabin_class_rules"
                      ],
                      "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                      "properties": {
                        "cabin_class_rules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "duration_from",
                              "cabin_class"
                            ],
                            "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                            "properties": {
                              "duration_from": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 24,
                                "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                              },
                              "duration_to": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 24,
                                "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                              },
                              "cabin_class": {
                                "description": "Highest allowed cabin class for this rule.",
                                "type": "string",
                                "enum": [
                                  "economy",
                                  "economy plus",
                                  "business",
                                  "first"
                                ]
                              },
                              "budget": {
                                "type": "number",
                                "minimum": 1,
                                "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                              }
                            }
                          },
                          "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                        }
                      }
                    },
                    "preferences": {
                      "type": "object",
                      "properties": {
                        "preferred_airlines": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "avoided_airlines": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "luggage": {
                          "type": "boolean"
                        },
                        "rebookable": {
                          "type": "boolean"
                        },
                        "cancelable": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "hotel": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "object",
                      "required": [
                        "country_budgets"
                      ],
                      "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                      "properties": {
                        "max_stars": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 5,
                          "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                        },
                        "default_budget": {
                          "type": "number",
                          "minimum": 1,
                          "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                        },
                        "country_budgets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "country",
                              "budget"
                            ],
                            "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                            "properties": {
                              "country": {
                                "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                "type": "string",
                                "pattern": "^[A-Z]{2}$"
                              },
                              "budget": {
                                "type": "number",
                                "minimum": 1,
                                "description": "Max budget in EUR per night, same semantics as default_budget."
                              }
                            }
                          },
                          "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                        }
                      }
                    },
                    "preferences": {
                      "type": "object",
                      "properties": {
                        "min_stars": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 5,
                          "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                        },
                        "includes_breakfast": {
                          "type": "boolean"
                        },
                        "includes_wifi": {
                          "type": "boolean"
                        },
                        "cancelable": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "rental_car": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "object",
                      "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                      "properties": {
                        "max_class": {
                          "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                          "type": "string",
                          "enum": [
                            "M",
                            "N",
                            "E",
                            "H",
                            "C",
                            "D",
                            "I",
                            "J",
                            "S",
                            "R",
                            "F",
                            "G",
                            "P",
                            "U",
                            "L",
                            "W",
                            "O",
                            "X"
                          ]
                        },
                        "budget": {
                          "type": "number",
                          "minimum": 1,
                          "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                        }
                      }
                    },
                    "preferences": {
                      "type": "object",
                      "required": [
                        "preferred_vendors",
                        "avoided_vendors"
                      ],
                      "properties": {
                        "preferred_vendors": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Europcar",
                              "Enterprise",
                              "Hertz",
                              "Sixt"
                            ]
                          }
                        },
                        "avoided_vendors": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Europcar",
                              "Enterprise",
                              "Hertz",
                              "Sixt"
                            ]
                          }
                        },
                        "insurance": {
                          "type": "string",
                          "enum": [
                            "yes with excess",
                            "yes without excess"
                          ]
                        },
                        "navigation_system": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "train": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "object",
                      "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                      "properties": {
                        "max_class": {
                          "description": "Defines the highest train class that travelers are allowed to travel in.",
                          "type": "string",
                          "enum": [
                            "1",
                            "2"
                          ]
                        },
                        "budget": {
                          "type": "number",
                          "minimum": 1,
                          "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                        }
                      }
                    },
                    "preferences": {
                      "type": "object",
                      "properties": {
                        "seat_reservation_against_payment": {
                          "type": "boolean"
                        },
                        "flexible": {
                          "type": "boolean"
                        },
                        "cancelable": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "policy_remarks": {
            "type": "object",
            "properties": {
              "flight": {
                "type": "string"
              },
              "hotel": {
                "type": "string"
              },
              "train": {
                "type": "string"
              },
              "rental_car": {
                "type": "string"
              }
            }
          },
          "monthly_booking_volume": {
            "type": "number",
            "enum": [
              5,
              10,
              20,
              50,
              100,
              200,
              500
            ]
          },
          "credit_check_passed": {
            "type": "boolean"
          }
        }
      },
      "account": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "name",
              "invoice_addresses",
              "invoice_overview_receivers",
              "language",
              "currency",
              "status",
              "policies",
              "communication_settings",
              "credit_check_passed"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Must be unique"
              },
              "invoice_addresses": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "city",
                        "country"
                      ],
                      "properties": {
                        "street_1": {
                          "type": "string"
                        },
                        "street_2": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string",
                          "description": "2 letter ISO code"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "used along with latitude to define geographic coordinates."
                        },
                        "latitude": {
                          "type": "number",
                          "description": "used along with longitude to define geographic coordinates."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Company invoice address",
                      "required": [
                        "company_name",
                        "office_name",
                        "status",
                        "invoice_overview_receivers",
                        "payment_method",
                        "billing_aggregation"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "to distinguish the type of invoice address"
                        },
                        "vat_id": {
                          "type": "string",
                          "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                        },
                        "company_name": {
                          "type": "string",
                          "description": "name of the company"
                        },
                        "office_name": {
                          "type": "string",
                          "description": "name which must be unique within the invoice addresses list"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "inactive"
                          ],
                          "description": "company should have at least one active invoice address"
                        },
                        "invoice_overview_receivers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                          }
                        },
                        "payment_method": {
                          "type": "string",
                          "enum": [
                            "credit_card",
                            "invoice",
                            "sepa",
                            "airplus"
                          ],
                          "description": "The type of payment used"
                        },
                        "billing_aggregation": {
                          "type": "string",
                          "enum": [
                            "individual",
                            "monthly",
                            "semimonthly"
                          ]
                        }
                      }
                    }
                  ]
                },
                "description": "Note existing address can not be edited or deleted"
              },
              "invoice_overview_receivers": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "description": "Receiver email address that invoice overview report (eom) will be sent to"
                }
              },
              "finance_email": {
                "type": "string"
              },
              "travel_management_email": {
                "type": "string"
              },
              "language": {
                "type": "string",
                "enum": [
                  "de",
                  "en"
                ],
                "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
              },
              "communication_settings": {
                "type": "object",
                "required": [
                  "confirmation",
                  "invoice",
                  "reminder"
                ],
                "description": "Settings that determine which persona receives which booking emails and documents.",
                "properties": {
                  "confirmation": {
                    "type": "string",
                    "description": "Booking confirmation, itinerary, calendar invites",
                    "enum": [
                      "booker",
                      "traveler and booker"
                    ]
                  },
                  "invoice": {
                    "type": "string",
                    "enum": [
                      "booker",
                      "traveler and booker",
                      "finance only"
                    ]
                  },
                  "reminder": {
                    "type": "string",
                    "description": "Checkin reminder, sent out 24h prior to flight",
                    "enum": [
                      "traveler",
                      "booker",
                      "traveler and booker"
                    ]
                  }
                }
              },
              "currency": {
                "type": "string",
                "enum": [
                  "EUR"
                ],
                "description": "ISO-4217"
              },
              "status": {
                "type": "string",
                "enum": [
                  "unverified",
                  "trial",
                  "customer",
                  "inactive"
                ]
              },
              "phone": {
                "type": "string"
              },
              "loyalty_cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "description": "Traveler loyalty cards are bound to a specific person",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "card_number": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "description": "Format YYYY-MM-DD"
                    },
                    "pin": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                    }
                  }
                }
              },
              "meta_data": {
                "type": "object",
                "description": "Some meta data we attach to all items we care about.",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string",
                    "description": "Email of the user who created this item"
                  },
                  "updated_by": {
                    "type": "string",
                    "description": "Email of the user who updated this item"
                  }
                }
              },
              "cost_center_mandatory": {
                "type": "boolean",
                "default": false
              },
              "fare_codes": {
                "type": "object",
                "properties": {
                  "flight": {
                    "type": "object",
                    "description": "Company specific Fare codes which applicable during flight search requests.",
                    "properties": {
                      "web": {
                        "type": "array",
                        "description": "fare codes which applies for the web fares",
                        "items": {
                          "type": "object",
                          "required": [
                            "carrier_code",
                            "login_id",
                            "api_password"
                          ],
                          "properties": {
                            "carrier_code": {
                              "type": "string"
                            },
                            "login_id": {
                              "type": "string"
                            },
                            "api_password": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sabre": {
                        "type": "array",
                        "description": "fare codes which applies for the Sabre fares",
                        "items": {
                          "type": "object",
                          "required": [
                            "pricing_code",
                            "carrier_code"
                          ],
                          "properties": {
                            "pricing_code": {
                              "type": "string"
                            },
                            "carrier_code": {
                              "type": "string"
                            },
                            "carrier_code_osi": {
                              "type": "string"
                            },
                            "osi_text1": {
                              "type": "string"
                            },
                            "osi_text2": {
                              "type": "string"
                            },
                            "osi_text3": {
                              "type": "string"
                            },
                            "osi_text4": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "farelogix": {
                        "type": "array",
                        "description": "fare codes which applies for the farelogix fares",
                        "items": {
                          "type": "object",
                          "required": [
                            "pricing_code"
                          ],
                          "properties": {
                            "pricing_code": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "hotel": {
                    "type": "object",
                    "description": "Company specific Fare codes which applicable during hotel search requests.",
                    "properties": {
                      "booking_com": {
                        "type": "object",
                        "description": "fare codes which applies for the booking.com search",
                        "required": [
                          "affiliate_id"
                        ],
                        "properties": {
                          "affiliate_id": {
                            "type": "string"
                          }
                        }
                      },
                      "hrs": {
                        "type": "object",
                        "description": "fare codes which applies for the hrs search",
                        "required": [
                          "customer_key",
                          "f_key"
                        ],
                        "properties": {
                          "customer_key": {
                            "type": "string"
                          },
                          "f_key": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "policies": {
                "type": "array",
                "minLength": 1,
                "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                "items": {
                  "type": "object",
                  "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                  "required": [
                    "id",
                    "name",
                    "default"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                    },
                    "name": {
                      "type": "string",
                      "description": "name of the policy"
                    },
                    "default": {
                      "type": "boolean",
                      "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                    },
                    "meta_data": {
                      "type": "object",
                      "description": "Some meta data we attach to all items we care about.",
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "created_by": {
                          "type": "string",
                          "description": "Email of the user who created this item"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "Email of the user who updated this item"
                        }
                      }
                    },
                    "flight": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "required": [
                            "cabin_class_rules"
                          ],
                          "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                          "properties": {
                            "cabin_class_rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "duration_from",
                                  "cabin_class"
                                ],
                                "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                "properties": {
                                  "duration_from": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 24,
                                    "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                  },
                                  "duration_to": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 24,
                                    "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                  },
                                  "cabin_class": {
                                    "description": "Highest allowed cabin class for this rule.",
                                    "type": "string",
                                    "enum": [
                                      "economy",
                                      "economy plus",
                                      "business",
                                      "first"
                                    ]
                                  },
                                  "budget": {
                                    "type": "number",
                                    "minimum": 1,
                                    "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                  }
                                }
                              },
                              "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "preferred_airlines": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "avoided_airlines": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "luggage": {
                              "type": "boolean"
                            },
                            "rebookable": {
                              "type": "boolean"
                            },
                            "cancelable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "hotel": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "required": [
                            "country_budgets"
                          ],
                          "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                          "properties": {
                            "max_stars": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 5,
                              "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                            },
                            "default_budget": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                            },
                            "country_budgets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "country",
                                  "budget"
                                ],
                                "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                "properties": {
                                  "country": {
                                    "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                    "type": "string",
                                    "pattern": "^[A-Z]{2}$"
                                  },
                                  "budget": {
                                    "type": "number",
                                    "minimum": 1,
                                    "description": "Max budget in EUR per night, same semantics as default_budget."
                                  }
                                }
                              },
                              "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "min_stars": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 5,
                              "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                            },
                            "includes_breakfast": {
                              "type": "boolean"
                            },
                            "includes_wifi": {
                              "type": "boolean"
                            },
                            "cancelable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "rental_car": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                          "properties": {
                            "max_class": {
                              "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                              "type": "string",
                              "enum": [
                                "M",
                                "N",
                                "E",
                                "H",
                                "C",
                                "D",
                                "I",
                                "J",
                                "S",
                                "R",
                                "F",
                                "G",
                                "P",
                                "U",
                                "L",
                                "W",
                                "O",
                                "X"
                              ]
                            },
                            "budget": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "required": [
                            "preferred_vendors",
                            "avoided_vendors"
                          ],
                          "properties": {
                            "preferred_vendors": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "Europcar",
                                  "Enterprise",
                                  "Hertz",
                                  "Sixt"
                                ]
                              }
                            },
                            "avoided_vendors": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "Europcar",
                                  "Enterprise",
                                  "Hertz",
                                  "Sixt"
                                ]
                              }
                            },
                            "insurance": {
                              "type": "string",
                              "enum": [
                                "yes with excess",
                                "yes without excess"
                              ]
                            },
                            "navigation_system": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "train": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                          "properties": {
                            "max_class": {
                              "description": "Defines the highest train class that travelers are allowed to travel in.",
                              "type": "string",
                              "enum": [
                                "1",
                                "2"
                              ]
                            },
                            "budget": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "seat_reservation_against_payment": {
                              "type": "boolean"
                            },
                            "flexible": {
                              "type": "boolean"
                            },
                            "cancelable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "policy_remarks": {
                "type": "object",
                "properties": {
                  "flight": {
                    "type": "string"
                  },
                  "hotel": {
                    "type": "string"
                  },
                  "train": {
                    "type": "string"
                  },
                  "rental_car": {
                    "type": "string"
                  }
                }
              },
              "monthly_booking_volume": {
                "type": "number",
                "enum": [
                  5,
                  10,
                  20,
                  50,
                  100,
                  200,
                  500
                ]
              },
              "credit_check_passed": {
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "_id",
              "__v"
            ],
            "properties": {
              "_id": {
                "type": "string",
                "description": "Technical PK"
              },
              "__v": {
                "type": "number"
              }
            }
          }
        ]
      },
      "baseCompany": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "name",
              "invoice_addresses",
              "invoice_overview_receivers",
              "language",
              "currency",
              "status",
              "policies",
              "communication_settings",
              "credit_check_passed"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Must be unique"
              },
              "invoice_addresses": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "city",
                        "country"
                      ],
                      "properties": {
                        "street_1": {
                          "type": "string"
                        },
                        "street_2": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string",
                          "description": "2 letter ISO code"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "used along with latitude to define geographic coordinates."
                        },
                        "latitude": {
                          "type": "number",
                          "description": "used along with longitude to define geographic coordinates."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Company invoice address",
                      "required": [
                        "company_name",
                        "office_name",
                        "status",
                        "invoice_overview_receivers",
                        "payment_method",
                        "billing_aggregation"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "to distinguish the type of invoice address"
                        },
                        "vat_id": {
                          "type": "string",
                          "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                        },
                        "company_name": {
                          "type": "string",
                          "description": "name of the company"
                        },
                        "office_name": {
                          "type": "string",
                          "description": "name which must be unique within the invoice addresses list"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "inactive"
                          ],
                          "description": "company should have at least one active invoice address"
                        },
                        "invoice_overview_receivers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                          }
                        },
                        "payment_method": {
                          "type": "string",
                          "enum": [
                            "credit_card",
                            "invoice",
                            "sepa",
                            "airplus"
                          ],
                          "description": "The type of payment used"
                        },
                        "billing_aggregation": {
                          "type": "string",
                          "enum": [
                            "individual",
                            "monthly",
                            "semimonthly"
                          ]
                        }
                      }
                    }
                  ]
                },
                "description": "Note existing address can not be edited or deleted"
              },
              "invoice_overview_receivers": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "description": "Receiver email address that invoice overview report (eom) will be sent to"
                }
              },
              "finance_email": {
                "type": "string"
              },
              "travel_management_email": {
                "type": "string"
              },
              "language": {
                "type": "string",
                "enum": [
                  "de",
                  "en"
                ],
                "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
              },
              "communication_settings": {
                "type": "object",
                "required": [
                  "confirmation",
                  "invoice",
                  "reminder"
                ],
                "description": "Settings that determine which persona receives which booking emails and documents.",
                "properties": {
                  "confirmation": {
                    "type": "string",
                    "description": "Booking confirmation, itinerary, calendar invites",
                    "enum": [
                      "booker",
                      "traveler and booker"
                    ]
                  },
                  "invoice": {
                    "type": "string",
                    "enum": [
                      "booker",
                      "traveler and booker",
                      "finance only"
                    ]
                  },
                  "reminder": {
                    "type": "string",
                    "description": "Checkin reminder, sent out 24h prior to flight",
                    "enum": [
                      "traveler",
                      "booker",
                      "traveler and booker"
                    ]
                  }
                }
              },
              "currency": {
                "type": "string",
                "enum": [
                  "EUR"
                ],
                "description": "ISO-4217"
              },
              "status": {
                "type": "string",
                "enum": [
                  "unverified",
                  "trial",
                  "customer",
                  "inactive"
                ]
              },
              "phone": {
                "type": "string"
              },
              "loyalty_cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "description": "Traveler loyalty cards are bound to a specific person",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "card_number": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "description": "Format YYYY-MM-DD"
                    },
                    "pin": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                    }
                  }
                }
              },
              "meta_data": {
                "type": "object",
                "description": "Some meta data we attach to all items we care about.",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string",
                    "description": "Email of the user who created this item"
                  },
                  "updated_by": {
                    "type": "string",
                    "description": "Email of the user who updated this item"
                  }
                }
              },
              "cost_center_mandatory": {
                "type": "boolean",
                "default": false
              },
              "fare_codes": {
                "type": "object",
                "properties": {
                  "flight": {
                    "type": "object",
                    "description": "Company specific Fare codes which applicable during flight search requests.",
                    "properties": {
                      "web": {
                        "type": "array",
                        "description": "fare codes which applies for the web fares",
                        "items": {
                          "type": "object",
                          "required": [
                            "carrier_code",
                            "login_id",
                            "api_password"
                          ],
                          "properties": {
                            "carrier_code": {
                              "type": "string"
                            },
                            "login_id": {
                              "type": "string"
                            },
                            "api_password": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sabre": {
                        "type": "array",
                        "description": "fare codes which applies for the Sabre fares",
                        "items": {
                          "type": "object",
                          "required": [
                            "pricing_code",
                            "carrier_code"
                          ],
                          "properties": {
                            "pricing_code": {
                              "type": "string"
                            },
                            "carrier_code": {
                              "type": "string"
                            },
                            "carrier_code_osi": {
                              "type": "string"
                            },
                            "osi_text1": {
                              "type": "string"
                            },
                            "osi_text2": {
                              "type": "string"
                            },
                            "osi_text3": {
                              "type": "string"
                            },
                            "osi_text4": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "farelogix": {
                        "type": "array",
                        "description": "fare codes which applies for the farelogix fares",
                        "items": {
                          "type": "object",
                          "required": [
                            "pricing_code"
                          ],
                          "properties": {
                            "pricing_code": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "hotel": {
                    "type": "object",
                    "description": "Company specific Fare codes which applicable during hotel search requests.",
                    "properties": {
                      "booking_com": {
                        "type": "object",
                        "description": "fare codes which applies for the booking.com search",
                        "required": [
                          "affiliate_id"
                        ],
                        "properties": {
                          "affiliate_id": {
                            "type": "string"
                          }
                        }
                      },
                      "hrs": {
                        "type": "object",
                        "description": "fare codes which applies for the hrs search",
                        "required": [
                          "customer_key",
                          "f_key"
                        ],
                        "properties": {
                          "customer_key": {
                            "type": "string"
                          },
                          "f_key": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "policies": {
                "type": "array",
                "minLength": 1,
                "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                "items": {
                  "type": "object",
                  "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                  "required": [
                    "id",
                    "name",
                    "default"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                    },
                    "name": {
                      "type": "string",
                      "description": "name of the policy"
                    },
                    "default": {
                      "type": "boolean",
                      "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                    },
                    "meta_data": {
                      "type": "object",
                      "description": "Some meta data we attach to all items we care about.",
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "created_by": {
                          "type": "string",
                          "description": "Email of the user who created this item"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "Email of the user who updated this item"
                        }
                      }
                    },
                    "flight": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "required": [
                            "cabin_class_rules"
                          ],
                          "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                          "properties": {
                            "cabin_class_rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "duration_from",
                                  "cabin_class"
                                ],
                                "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                "properties": {
                                  "duration_from": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 24,
                                    "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                  },
                                  "duration_to": {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 24,
                                    "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                  },
                                  "cabin_class": {
                                    "description": "Highest allowed cabin class for this rule.",
                                    "type": "string",
                                    "enum": [
                                      "economy",
                                      "economy plus",
                                      "business",
                                      "first"
                                    ]
                                  },
                                  "budget": {
                                    "type": "number",
                                    "minimum": 1,
                                    "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                  }
                                }
                              },
                              "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "preferred_airlines": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "avoided_airlines": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "luggage": {
                              "type": "boolean"
                            },
                            "rebookable": {
                              "type": "boolean"
                            },
                            "cancelable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "hotel": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "required": [
                            "country_budgets"
                          ],
                          "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                          "properties": {
                            "max_stars": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 5,
                              "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                            },
                            "default_budget": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                            },
                            "country_budgets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "country",
                                  "budget"
                                ],
                                "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                "properties": {
                                  "country": {
                                    "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                    "type": "string",
                                    "pattern": "^[A-Z]{2}$"
                                  },
                                  "budget": {
                                    "type": "number",
                                    "minimum": 1,
                                    "description": "Max budget in EUR per night, same semantics as default_budget."
                                  }
                                }
                              },
                              "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "min_stars": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 5,
                              "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                            },
                            "includes_breakfast": {
                              "type": "boolean"
                            },
                            "includes_wifi": {
                              "type": "boolean"
                            },
                            "cancelable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "rental_car": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                          "properties": {
                            "max_class": {
                              "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                              "type": "string",
                              "enum": [
                                "M",
                                "N",
                                "E",
                                "H",
                                "C",
                                "D",
                                "I",
                                "J",
                                "S",
                                "R",
                                "F",
                                "G",
                                "P",
                                "U",
                                "L",
                                "W",
                                "O",
                                "X"
                              ]
                            },
                            "budget": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "required": [
                            "preferred_vendors",
                            "avoided_vendors"
                          ],
                          "properties": {
                            "preferred_vendors": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "Europcar",
                                  "Enterprise",
                                  "Hertz",
                                  "Sixt"
                                ]
                              }
                            },
                            "avoided_vendors": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "Europcar",
                                  "Enterprise",
                                  "Hertz",
                                  "Sixt"
                                ]
                              }
                            },
                            "insurance": {
                              "type": "string",
                              "enum": [
                                "yes with excess",
                                "yes without excess"
                              ]
                            },
                            "navigation_system": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "train": {
                      "type": "object",
                      "properties": {
                        "rules": {
                          "type": "object",
                          "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                          "properties": {
                            "max_class": {
                              "description": "Defines the highest train class that travelers are allowed to travel in.",
                              "type": "string",
                              "enum": [
                                "1",
                                "2"
                              ]
                            },
                            "budget": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                            }
                          }
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "seat_reservation_against_payment": {
                              "type": "boolean"
                            },
                            "flexible": {
                              "type": "boolean"
                            },
                            "cancelable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "policy_remarks": {
                "type": "object",
                "properties": {
                  "flight": {
                    "type": "string"
                  },
                  "hotel": {
                    "type": "string"
                  },
                  "train": {
                    "type": "string"
                  },
                  "rental_car": {
                    "type": "string"
                  }
                }
              },
              "monthly_booking_volume": {
                "type": "number",
                "enum": [
                  5,
                  10,
                  20,
                  50,
                  100,
                  200,
                  500
                ]
              },
              "credit_check_passed": {
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "pricing": {
                "type": "object",
                "properties": {
                  "payment_fee": {
                    "type": "boolean",
                    "description": "Whether payment fees should be applied."
                  },
                  "apply_booking_fee": {
                    "type": "boolean",
                    "description": "Whether booking fees should be applied"
                  },
                  "booking_fee_data": {
                    "type": "object",
                    "required": [
                      "domestic_countries",
                      "continents",
                      "booking_fees"
                    ],
                    "properties": {
                      "booking_fees": {
                        "type": "object",
                        "required": [
                          "flight",
                          "hotel",
                          "rental_car",
                          "train"
                        ],
                        "description": "Preferences regarding booking fees",
                        "properties": {
                          "flight": {
                            "type": "object",
                            "required": [
                              "booking",
                              "rebooking",
                              "cancelation"
                            ],
                            "properties": {
                              "booking": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "geography"
                                      ],
                                      "properties": {
                                        "geography": {
                                          "enum": [
                                            "domestic",
                                            "continental",
                                            "others"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "rebooking": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "geography"
                                      ],
                                      "properties": {
                                        "geography": {
                                          "enum": [
                                            "domestic",
                                            "continental",
                                            "others"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "cancelation": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "geography"
                                      ],
                                      "properties": {
                                        "geography": {
                                          "enum": [
                                            "domestic",
                                            "continental",
                                            "others"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "hotel": {
                            "type": "object",
                            "required": [
                              "booking",
                              "rebooking",
                              "cancelation"
                            ],
                            "properties": {
                              "booking": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              },
                              "rebooking": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              },
                              "cancelation": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rental_car": {
                            "type": "object",
                            "required": [
                              "booking",
                              "rebooking",
                              "cancelation"
                            ],
                            "properties": {
                              "booking": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              },
                              "rebooking": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              },
                              "cancelation": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "train": {
                            "type": "object",
                            "required": [
                              "booking",
                              "rebooking",
                              "cancelation"
                            ],
                            "properties": {
                              "booking": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              },
                              "rebooking": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              },
                              "cancelation": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "comtravo_fee_source"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "comtravo_fee_source": {
                                      "type": "string",
                                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                      "enum": [
                                        "online",
                                        "offline"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "domestic_countries": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "continents": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "integrations": {
                "type": "object",
                "properties": {
                  "circula": {
                    "type": "object",
                    "description": "Circula integration detail.",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "Circula integration token"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "company": {
        "allOf": [
          {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "name",
                  "invoice_addresses",
                  "invoice_overview_receivers",
                  "language",
                  "currency",
                  "status",
                  "policies",
                  "communication_settings",
                  "credit_check_passed"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Must be unique"
                  },
                  "invoice_addresses": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "city",
                            "country"
                          ],
                          "properties": {
                            "street_1": {
                              "type": "string"
                            },
                            "street_2": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string",
                              "description": "2 letter ISO code"
                            },
                            "longitude": {
                              "type": "number",
                              "description": "used along with latitude to define geographic coordinates."
                            },
                            "latitude": {
                              "type": "number",
                              "description": "used along with longitude to define geographic coordinates."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Company invoice address",
                          "required": [
                            "company_name",
                            "office_name",
                            "status",
                            "invoice_overview_receivers",
                            "payment_method",
                            "billing_aggregation"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "to distinguish the type of invoice address"
                            },
                            "vat_id": {
                              "type": "string",
                              "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                            },
                            "company_name": {
                              "type": "string",
                              "description": "name of the company"
                            },
                            "office_name": {
                              "type": "string",
                              "description": "name which must be unique within the invoice addresses list"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "inactive"
                              ],
                              "description": "company should have at least one active invoice address"
                            },
                            "invoice_overview_receivers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                              }
                            },
                            "payment_method": {
                              "type": "string",
                              "enum": [
                                "credit_card",
                                "invoice",
                                "sepa",
                                "airplus"
                              ],
                              "description": "The type of payment used"
                            },
                            "billing_aggregation": {
                              "type": "string",
                              "enum": [
                                "individual",
                                "monthly",
                                "semimonthly"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "description": "Note existing address can not be edited or deleted"
                  },
                  "invoice_overview_receivers": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "description": "Receiver email address that invoice overview report (eom) will be sent to"
                    }
                  },
                  "finance_email": {
                    "type": "string"
                  },
                  "travel_management_email": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "de",
                      "en"
                    ],
                    "description": "Preferred language for communication with this company, including documents (e.g. invoices)"
                  },
                  "communication_settings": {
                    "type": "object",
                    "required": [
                      "confirmation",
                      "invoice",
                      "reminder"
                    ],
                    "description": "Settings that determine which persona receives which booking emails and documents.",
                    "properties": {
                      "confirmation": {
                        "type": "string",
                        "description": "Booking confirmation, itinerary, calendar invites",
                        "enum": [
                          "booker",
                          "traveler and booker"
                        ]
                      },
                      "invoice": {
                        "type": "string",
                        "enum": [
                          "booker",
                          "traveler and booker",
                          "finance only"
                        ]
                      },
                      "reminder": {
                        "type": "string",
                        "description": "Checkin reminder, sent out 24h prior to flight",
                        "enum": [
                          "traveler",
                          "booker",
                          "traveler and booker"
                        ]
                      }
                    }
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "EUR"
                    ],
                    "description": "ISO-4217"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "unverified",
                      "trial",
                      "customer",
                      "inactive"
                    ]
                  },
                  "phone": {
                    "type": "string"
                  },
                  "loyalty_cards": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "description": "Traveler loyalty cards are bound to a specific person",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "card_number": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "string",
                          "description": "Format YYYY-MM-DD"
                        },
                        "pin": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                        }
                      }
                    }
                  },
                  "meta_data": {
                    "type": "object",
                    "description": "Some meta data we attach to all items we care about.",
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "Email of the user who created this item"
                      },
                      "updated_by": {
                        "type": "string",
                        "description": "Email of the user who updated this item"
                      }
                    }
                  },
                  "cost_center_mandatory": {
                    "type": "boolean",
                    "default": false
                  },
                  "fare_codes": {
                    "type": "object",
                    "properties": {
                      "flight": {
                        "type": "object",
                        "description": "Company specific Fare codes which applicable during flight search requests.",
                        "properties": {
                          "web": {
                            "type": "array",
                            "description": "fare codes which applies for the web fares",
                            "items": {
                              "type": "object",
                              "required": [
                                "carrier_code",
                                "login_id",
                                "api_password"
                              ],
                              "properties": {
                                "carrier_code": {
                                  "type": "string"
                                },
                                "login_id": {
                                  "type": "string"
                                },
                                "api_password": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "sabre": {
                            "type": "array",
                            "description": "fare codes which applies for the Sabre fares",
                            "items": {
                              "type": "object",
                              "required": [
                                "pricing_code",
                                "carrier_code"
                              ],
                              "properties": {
                                "pricing_code": {
                                  "type": "string"
                                },
                                "carrier_code": {
                                  "type": "string"
                                },
                                "carrier_code_osi": {
                                  "type": "string"
                                },
                                "osi_text1": {
                                  "type": "string"
                                },
                                "osi_text2": {
                                  "type": "string"
                                },
                                "osi_text3": {
                                  "type": "string"
                                },
                                "osi_text4": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "farelogix": {
                            "type": "array",
                            "description": "fare codes which applies for the farelogix fares",
                            "items": {
                              "type": "object",
                              "required": [
                                "pricing_code"
                              ],
                              "properties": {
                                "pricing_code": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "hotel": {
                        "type": "object",
                        "description": "Company specific Fare codes which applicable during hotel search requests.",
                        "properties": {
                          "booking_com": {
                            "type": "object",
                            "description": "fare codes which applies for the booking.com search",
                            "required": [
                              "affiliate_id"
                            ],
                            "properties": {
                              "affiliate_id": {
                                "type": "string"
                              }
                            }
                          },
                          "hrs": {
                            "type": "object",
                            "description": "fare codes which applies for the hrs search",
                            "required": [
                              "customer_key",
                              "f_key"
                            ],
                            "properties": {
                              "customer_key": {
                                "type": "string"
                              },
                              "f_key": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "policies": {
                    "type": "array",
                    "minLength": 1,
                    "description": "Policies define specific rules and preferences for all verticals, e.g. maximum flight cabin class.",
                    "items": {
                      "type": "object",
                      "description": "Policies are organized by vertical and consist of 2 parts - rules and preferences.\n- Rules define mandatory, company wide limits, e.g. maximum price for a hotel per night. Travelers, bookers and agents are required to follow rules when possible, but rules are not strictly enforced.\nRules typically allow specification of a maximum budget. The semantics here is \"including all add-ons and any tax payable by the customers\" (breakfast, seat reservation etc.) but without Comtravo fees (booking, processing fees).\nAll budgets are in EUR and apply to the retail price.\n- Preferences are company wide settings per vertical that define ideal / default booking behavior. E.g. companies can specify whether they usually book hotel breakfast rates.",
                      "required": [
                        "id",
                        "name",
                        "default"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "unique identifier of the policy, it may be connected to a traveler by its policy_id property"
                        },
                        "name": {
                          "type": "string",
                          "description": "name of the policy"
                        },
                        "default": {
                          "type": "boolean",
                          "description": "indicates whether the policy is default or not. you should not be able to delete the default policy"
                        },
                        "meta_data": {
                          "type": "object",
                          "description": "Some meta data we attach to all items we care about.",
                          "properties": {
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "created_by": {
                              "type": "string",
                              "description": "Email of the user who created this item"
                            },
                            "updated_by": {
                              "type": "string",
                              "description": "Email of the user who updated this item"
                            }
                          }
                        },
                        "flight": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "required": [
                                "cabin_class_rules"
                              ],
                              "description": "Flight rules define which maximum cabin class, and optionally budget limitation, apply to a specific flight duration.\nThe intention is to allow admins to specify rules like \"we generally fly economy, but for flights > 6h we allow business class, up to 2000 EUR\".\nEvery rule defines an interval which is matched against the flight (slice) duration. The interval is defined by duration_from/duration_to and is potentially unbound.\nThe combination of all cabin class rules must cover the interval [0, infinity] without any holes or overlaps, i.e. every possible flight time should be accounted for by exactly one rule.\nWe allow up to 4 rules.\nRules must be more permissive than their predecessor (the rule that applies to the previous interval). E.g. if a rule applies between 3-7h and has a max budget of 500, the next rule must define either a higher budget, no budget (infinite) or a better cabin class. Cabin class changes reset the budget.\nAll rules apply on slice level! When a flight is evaluated, all slices have to be in policy for the flight to be in policy. Exceptions are applied per slice, and different exceptions can apply if flight durations between slices vary.",
                              "properties": {
                                "cabin_class_rules": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "duration_from",
                                      "cabin_class"
                                    ],
                                    "description": "The applicable cabin class rule. Flight duration is matched against duration_from/duration_to interval.",
                                    "properties": {
                                      "duration_from": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 24,
                                        "description": "The slice duration (in hours) when this specific rule applies. duration_from (equal or greater than) forms an interval together with duration_to (up to)."
                                      },
                                      "duration_to": {
                                        "type": "number",
                                        "minimum": 1,
                                        "maximum": 24,
                                        "description": "The slice duration (in hours) when this specific rule applies. Can be undefined to indicate unbound upper bound. duration_to (up to) forms an interval together with duration_from (equal or greater than)."
                                      },
                                      "cabin_class": {
                                        "description": "Highest allowed cabin class for this rule.",
                                        "type": "string",
                                        "enum": [
                                          "economy",
                                          "economy plus",
                                          "business",
                                          "first"
                                        ]
                                      },
                                      "budget": {
                                        "type": "number",
                                        "minimum": 1,
                                        "description": "Max budget in EUR per slice, including all add-ons (extra luggage, seat, prio boarding etc.)."
                                      }
                                    }
                                  },
                                  "description": "The array of rules that define which cabin class (and potentially max budget) apply to which flight duration. We allow up to 4 rules."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "preferred_airlines": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "avoided_airlines": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "luggage": {
                                  "type": "boolean"
                                },
                                "rebookable": {
                                  "type": "boolean"
                                },
                                "cancelable": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "hotel": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "required": [
                                "country_budgets"
                              ],
                              "description": "Hotel rules allow setting either max budget (globally and/or per country), max stars or both.\nBudgets are applied per room per night, irrespective of occupants.",
                              "properties": {
                                "max_stars": {
                                  "type": "number",
                                  "minimum": 1,
                                  "maximum": 5,
                                  "description": "Max stars / hotel category. Has to be equal or higher than min star preference."
                                },
                                "default_budget": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Maximum default budget in EUR per room per night, including all extra costs (breakfast etc.)."
                                },
                                "country_budgets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "country",
                                      "budget"
                                    ],
                                    "description": "Each rule specifies an exception for a specific country. The country budget is independent from global budget, i.e. can be higher or lower than default_budget. There can be max 1 rule per country.",
                                    "properties": {
                                      "country": {
                                        "description": "ISO-2 country code, must be unique in array (max 1 rule per country).",
                                        "type": "string",
                                        "pattern": "^[A-Z]{2}$"
                                      },
                                      "budget": {
                                        "type": "number",
                                        "minimum": 1,
                                        "description": "Max budget in EUR per night, same semantics as default_budget."
                                      }
                                    }
                                  },
                                  "description": "Array of country-specific exceptions to global max budget. If a country budget is set the default budget is ignored for this country."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "min_stars": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 5,
                                  "description": "Min star category which the company would prefer to book. Must be lower than hotel rules max_stars!"
                                },
                                "includes_breakfast": {
                                  "type": "boolean"
                                },
                                "includes_wifi": {
                                  "type": "boolean"
                                },
                                "cancelable": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "rental_car": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "description": "Rental car rules allow specification of max car class, max budget per day or both. At least one data point has to be set.",
                              "properties": {
                                "max_class": {
                                  "description": "Max allowed car class. The order is Mini (M), Mini Elite (N), Economy (E), Economy Elite (H), Compact (C), Compact Elite (D), Intermediate (I), Intermediate Elite (J), Standard (S), Standard Elite (R), Fullsize (F), Fullsize Elite (G), Premium (P), Premium Elite (U), Luxury (L), Luxury Elite (W), Oversize (O), Special (X)",
                                  "type": "string",
                                  "enum": [
                                    "M",
                                    "N",
                                    "E",
                                    "H",
                                    "C",
                                    "D",
                                    "I",
                                    "J",
                                    "S",
                                    "R",
                                    "F",
                                    "G",
                                    "P",
                                    "U",
                                    "L",
                                    "W",
                                    "O",
                                    "X"
                                  ]
                                },
                                "budget": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Maxium price in EUR of a rental car per day, including all add-ons."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "required": [
                                "preferred_vendors",
                                "avoided_vendors"
                              ],
                              "properties": {
                                "preferred_vendors": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Europcar",
                                      "Enterprise",
                                      "Hertz",
                                      "Sixt"
                                    ]
                                  }
                                },
                                "avoided_vendors": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Europcar",
                                      "Enterprise",
                                      "Hertz",
                                      "Sixt"
                                    ]
                                  }
                                },
                                "insurance": {
                                  "type": "string",
                                  "enum": [
                                    "yes with excess",
                                    "yes without excess"
                                  ]
                                },
                                "navigation_system": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "train": {
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "object",
                              "description": "Train rules allow specification of either max class, max budget or both. At least one data point has to be set.",
                              "properties": {
                                "max_class": {
                                  "description": "Defines the highest train class that travelers are allowed to travel in.",
                                  "type": "string",
                                  "enum": [
                                    "1",
                                    "2"
                                  ]
                                },
                                "budget": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Maximum price in EUR per slice (one-way ticket), including all add-ons (e.g. seat reservation)."
                                }
                              }
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "seat_reservation_against_payment": {
                                  "type": "boolean"
                                },
                                "flexible": {
                                  "type": "boolean"
                                },
                                "cancelable": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "policy_remarks": {
                    "type": "object",
                    "properties": {
                      "flight": {
                        "type": "string"
                      },
                      "hotel": {
                        "type": "string"
                      },
                      "train": {
                        "type": "string"
                      },
                      "rental_car": {
                        "type": "string"
                      }
                    }
                  },
                  "monthly_booking_volume": {
                    "type": "number",
                    "enum": [
                      5,
                      10,
                      20,
                      50,
                      100,
                      200,
                      500
                    ]
                  },
                  "credit_check_passed": {
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "pricing": {
                    "type": "object",
                    "properties": {
                      "payment_fee": {
                        "type": "boolean",
                        "description": "Whether payment fees should be applied."
                      },
                      "apply_booking_fee": {
                        "type": "boolean",
                        "description": "Whether booking fees should be applied"
                      },
                      "booking_fee_data": {
                        "type": "object",
                        "required": [
                          "domestic_countries",
                          "continents",
                          "booking_fees"
                        ],
                        "properties": {
                          "booking_fees": {
                            "type": "object",
                            "required": [
                              "flight",
                              "hotel",
                              "rental_car",
                              "train"
                            ],
                            "description": "Preferences regarding booking fees",
                            "properties": {
                              "flight": {
                                "type": "object",
                                "required": [
                                  "booking",
                                  "rebooking",
                                  "cancelation"
                                ],
                                "properties": {
                                  "booking": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "geography"
                                          ],
                                          "properties": {
                                            "geography": {
                                              "enum": [
                                                "domestic",
                                                "continental",
                                                "others"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "rebooking": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "geography"
                                          ],
                                          "properties": {
                                            "geography": {
                                              "enum": [
                                                "domestic",
                                                "continental",
                                                "others"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "cancelation": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "value",
                                            "comtravo_fee_source"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "comtravo_fee_source": {
                                              "type": "string",
                                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                              "enum": [
                                                "online",
                                                "offline"
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "geography"
                                          ],
                                          "properties": {
                                            "geography": {
                                              "enum": [
                                                "domestic",
                                                "continental",
                                                "others"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "hotel": {
                                "type": "object",
                                "required": [
                                  "booking",
                                  "rebooking",
                                  "cancelation"
                                ],
                                "properties": {
                                  "booking": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "rebooking": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "cancelation": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "rental_car": {
                                "type": "object",
                                "required": [
                                  "booking",
                                  "rebooking",
                                  "cancelation"
                                ],
                                "properties": {
                                  "booking": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "rebooking": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "cancelation": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "train": {
                                "type": "object",
                                "required": [
                                  "booking",
                                  "rebooking",
                                  "cancelation"
                                ],
                                "properties": {
                                  "booking": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "rebooking": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "cancelation": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "value",
                                        "comtravo_fee_source"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "comtravo_fee_source": {
                                          "type": "string",
                                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                          "enum": [
                                            "online",
                                            "offline"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "domestic_countries": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "continents": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "integrations": {
                    "type": "object",
                    "properties": {
                      "circula": {
                        "type": "object",
                        "description": "Circula integration detail.",
                        "properties": {
                          "token": {
                            "type": "string",
                            "description": "Circula integration token"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "_id",
              "__v"
            ],
            "properties": {
              "_id": {
                "type": "string",
                "description": "Technical PK"
              },
              "__v": {
                "type": "number"
              }
            }
          }
        ]
      },
      "baseTraveler": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "first_name",
              "last_name",
              "language",
              "title",
              "gender"
            ],
            "properties": {
              "company": {
                "type": "string",
                "description": "ID of the company this traveler belongs to"
              },
              "invoice_address_id": {
                "type": "string",
                "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
              },
              "first_name": {
                "type": "string"
              },
              "middle_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
              },
              "language": {
                "type": "string",
                "enum": [
                  "de",
                  "en"
                ],
                "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
              },
              "title": {
                "type": "string",
                "enum": [
                  "Mr",
                  "Mrs"
                ]
              },
              "nationality": {
                "type": "string",
                "description": "2 letter ISO code"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "type": "string",
                "format": "date",
                "description": "Format YYYY-MM-DD"
              },
              "contact": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "required": [
                      "city",
                      "country"
                    ],
                    "properties": {
                      "street_1": {
                        "type": "string"
                      },
                      "street_2": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "description": "2 letter ISO code"
                      },
                      "longitude": {
                        "type": "number",
                        "description": "used along with latitude to define geographic coordinates."
                      },
                      "latitude": {
                        "type": "number",
                        "description": "used along with longitude to define geographic coordinates."
                      }
                    }
                  },
                  "managed": {
                    "type": "boolean",
                    "default": false,
                    "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                  },
                  "newsletter_subscribed": {
                    "type": "boolean",
                    "default": true,
                    "description": "indicates whether customer wants to receive newsletter"
                  }
                }
              },
              "identifications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "issuing_country",
                    "card_number"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "passport",
                        "id_card",
                        "drivers_license",
                        "global_entry_ktn"
                      ]
                    },
                    "issuing_country": {
                      "type": "string"
                    },
                    "card_number": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date",
                      "description": "Format YYYY-MM-DD"
                    },
                    "issued_at": {
                      "type": "string",
                      "format": "date",
                      "description": "Format YYYY-MM-DD"
                    }
                  }
                }
              },
              "loyalty_cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "description": "Traveler loyalty cards are bound to a specific person",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "card_number": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "description": "Format YYYY-MM-DD"
                    },
                    "pin": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                    }
                  }
                }
              },
              "client_cost_center_1": {
                "type": "string",
                "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
              },
              "client_cost_center_2": {
                "type": "string"
              },
              "client_cost_center_3": {
                "type": "string"
              },
              "preference": {
                "type": "object",
                "properties": {
                  "airplane": {
                    "type": "object",
                    "properties": {
                      "seat": {
                        "type": "string",
                        "enum": [
                          "window",
                          "aisle"
                        ]
                      },
                      "section": {
                        "type": "string",
                        "enum": [
                          "front",
                          "back"
                        ]
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "train": {
                    "type": "object",
                    "properties": {
                      "reservation": {
                        "type": "boolean"
                      },
                      "class": {
                        "type": "string"
                      },
                      "section": {
                        "type": "string",
                        "enum": [
                          "open_saloon",
                          "open_saloon_with_table",
                          "compartment"
                        ]
                      },
                      "seat": {
                        "type": "string",
                        "enum": [
                          "window",
                          "aisle"
                        ]
                      },
                      "zone": {
                        "type": "string",
                        "enum": [
                          "phone_zone",
                          "quiet_zone"
                        ]
                      }
                    }
                  }
                }
              },
              "meta_data": {
                "type": "object",
                "description": "Some meta data we attach to all items we care about.",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string",
                    "description": "Email of the user who created this item"
                  },
                  "updated_by": {
                    "type": "string",
                    "description": "Email of the user who updated this item"
                  }
                }
              },
              "policy_id": {
                "type": "string",
                "description": "unique identifier belonging one of the policies of its company"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "email",
              "invoice_address_id",
              "notification_settings"
            ],
            "properties": {
              "email": {
                "type": "string",
                "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
              },
              "invoice_address_id": {
                "type": "string",
                "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
              },
              "notification_settings": {
                "type": "object",
                "required": [
                  "notification_receivers",
                  "when_to_send"
                ],
                "properties": {
                  "notification_receivers": {
                    "type": "array",
                    "description": "traveler ids to be notified when booking out of policy or all bookings",
                    "maxItems": 5,
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "when_to_send": {
                    "type": "string",
                    "enum": [
                      "never",
                      "only_out_of_policy",
                      "always"
                    ]
                  }
                }
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "admin",
                    "central_booker",
                    "traveler"
                  ]
                },
                "uniqueItems": true,
                "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
              }
            }
          }
        ]
      },
      "traveler": {
        "allOf": [
          {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "language",
                  "title",
                  "gender"
                ],
                "properties": {
                  "company": {
                    "type": "string",
                    "description": "ID of the company this traveler belongs to"
                  },
                  "invoice_address_id": {
                    "type": "string",
                    "description": "ID of specific invoice address within company invoice addresses list. Is not set for guest travelers"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "middle_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "description": "Default email for all communication with the traveler. Combination of company / email must be unique. Email is saved in lower case regardless of input."
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "de",
                      "en"
                    ],
                    "description": "Preferred language for communication with this traveler, including documents (e.g. itinerary)"
                  },
                  "title": {
                    "type": "string",
                    "enum": [
                      "Mr",
                      "Mrs"
                    ]
                  },
                  "nationality": {
                    "type": "string",
                    "description": "2 letter ISO code"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "m",
                      "f"
                    ]
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date",
                    "description": "Format YYYY-MM-DD"
                  },
                  "contact": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string"
                      },
                      "address": {
                        "type": "object",
                        "required": [
                          "city",
                          "country"
                        ],
                        "properties": {
                          "street_1": {
                            "type": "string"
                          },
                          "street_2": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string",
                            "description": "2 letter ISO code"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "used along with latitude to define geographic coordinates."
                          },
                          "latitude": {
                            "type": "number",
                            "description": "used along with longitude to define geographic coordinates."
                          }
                        }
                      },
                      "managed": {
                        "type": "boolean",
                        "default": false,
                        "description": "A managed traveler is a traveler who is not interested in any communication from Comtravo. This flag has affect on how the communcation happens with the traveler"
                      },
                      "newsletter_subscribed": {
                        "type": "boolean",
                        "default": true,
                        "description": "indicates whether customer wants to receive newsletter"
                      }
                    }
                  },
                  "identifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "issuing_country",
                        "card_number"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "passport",
                            "id_card",
                            "drivers_license",
                            "global_entry_ktn"
                          ]
                        },
                        "issuing_country": {
                          "type": "string"
                        },
                        "card_number": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date",
                          "description": "Format YYYY-MM-DD"
                        },
                        "issued_at": {
                          "type": "string",
                          "format": "date",
                          "description": "Format YYYY-MM-DD"
                        }
                      }
                    }
                  },
                  "loyalty_cards": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "description": "Traveler loyalty cards are bound to a specific person",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "card_number": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "string",
                          "description": "Format YYYY-MM-DD"
                        },
                        "pin": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status on this loyalty program, e.g. Senator, Gold etc."
                        }
                      }
                    }
                  },
                  "client_cost_center_1": {
                    "type": "string",
                    "description": "Cost center for client accounting that later appears on their bill / reporting. Validation depends on client. CCs are hierarchical, i.e. if 3 is set 1 and 2 must be provided too."
                  },
                  "client_cost_center_2": {
                    "type": "string"
                  },
                  "client_cost_center_3": {
                    "type": "string"
                  },
                  "preference": {
                    "type": "object",
                    "properties": {
                      "airplane": {
                        "type": "object",
                        "properties": {
                          "seat": {
                            "type": "string",
                            "enum": [
                              "window",
                              "aisle"
                            ]
                          },
                          "section": {
                            "type": "string",
                            "enum": [
                              "front",
                              "back"
                            ]
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      },
                      "train": {
                        "type": "object",
                        "properties": {
                          "reservation": {
                            "type": "boolean"
                          },
                          "class": {
                            "type": "string"
                          },
                          "section": {
                            "type": "string",
                            "enum": [
                              "open_saloon",
                              "open_saloon_with_table",
                              "compartment"
                            ]
                          },
                          "seat": {
                            "type": "string",
                            "enum": [
                              "window",
                              "aisle"
                            ]
                          },
                          "zone": {
                            "type": "string",
                            "enum": [
                              "phone_zone",
                              "quiet_zone"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "meta_data": {
                    "type": "object",
                    "description": "Some meta data we attach to all items we care about.",
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "Email of the user who created this item"
                      },
                      "updated_by": {
                        "type": "string",
                        "description": "Email of the user who updated this item"
                      }
                    }
                  },
                  "policy_id": {
                    "type": "string",
                    "description": "unique identifier belonging one of the policies of its company"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "email",
                  "invoice_address_id",
                  "notification_settings"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Default email for all communication with the traveler. Email must be globally unique. Email is saved in lower case regardless of input. Email is immutable."
                  },
                  "invoice_address_id": {
                    "type": "string",
                    "description": "ID of specific invoice address within company. Note that it is mandatory within CRM context but not for other service(guest travelers, etc)."
                  },
                  "notification_settings": {
                    "type": "object",
                    "required": [
                      "notification_receivers",
                      "when_to_send"
                    ],
                    "properties": {
                      "notification_receivers": {
                        "type": "array",
                        "description": "traveler ids to be notified when booking out of policy or all bookings",
                        "maxItems": 5,
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "when_to_send": {
                        "type": "string",
                        "enum": [
                          "never",
                          "only_out_of_policy",
                          "always"
                        ]
                      }
                    }
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "central_booker",
                        "traveler"
                      ]
                    },
                    "uniqueItems": true,
                    "description": "User can have multiple roles. Roles are not hierarchical and they grant rights for certain actions.\n1. admin role grants user to do modifications in CRM data(TBD), assign roles, etc.\n2. central_booker role grants user to do booking for others and for herself.\n3. traveler role grants user to do booking only for herself.\n4. with empty roles list she can still log in into MyComtravo, see her profile and bookings where she is part of(traveler or booker).\n"
                  }
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "_id",
              "__v"
            ],
            "properties": {
              "_id": {
                "type": "string",
                "description": "Technical PK"
              },
              "__v": {
                "type": "number"
              }
            }
          }
        ]
      },
      "travelerName": {
        "type": "object",
        "required": [
          "__v",
          "_id",
          "first_name",
          "last_name"
        ],
        "properties": {
          "__v": {
            "type": "number"
          },
          "_id": {
            "type": "string",
            "readOnly": true,
            "description": "Traveler id."
          },
          "first_name": {
            "type": "string",
            "description": "Traveler name."
          },
          "last_name": {
            "type": "string",
            "description": "Traveler surname."
          }
        }
      },
      "pricing": {
        "type": "object",
        "properties": {
          "payment_fee": {
            "type": "boolean",
            "description": "Whether payment fees should be applied."
          },
          "apply_booking_fee": {
            "type": "boolean",
            "description": "Whether booking fees should be applied"
          },
          "booking_fee_data": {
            "type": "object",
            "required": [
              "domestic_countries",
              "continents",
              "booking_fees"
            ],
            "properties": {
              "booking_fees": {
                "type": "object",
                "required": [
                  "flight",
                  "hotel",
                  "rental_car",
                  "train"
                ],
                "description": "Preferences regarding booking fees",
                "properties": {
                  "flight": {
                    "type": "object",
                    "required": [
                      "booking",
                      "rebooking",
                      "cancelation"
                    ],
                    "properties": {
                      "booking": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "value",
                                "comtravo_fee_source"
                              ],
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "comtravo_fee_source": {
                                  "type": "string",
                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                  "enum": [
                                    "online",
                                    "offline"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "geography"
                              ],
                              "properties": {
                                "geography": {
                                  "enum": [
                                    "domestic",
                                    "continental",
                                    "others"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "rebooking": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "value",
                                "comtravo_fee_source"
                              ],
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "comtravo_fee_source": {
                                  "type": "string",
                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                  "enum": [
                                    "online",
                                    "offline"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "geography"
                              ],
                              "properties": {
                                "geography": {
                                  "enum": [
                                    "domestic",
                                    "continental",
                                    "others"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "cancelation": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "value",
                                "comtravo_fee_source"
                              ],
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "comtravo_fee_source": {
                                  "type": "string",
                                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                                  "enum": [
                                    "online",
                                    "offline"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "geography"
                              ],
                              "properties": {
                                "geography": {
                                  "enum": [
                                    "domestic",
                                    "continental",
                                    "others"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "hotel": {
                    "type": "object",
                    "required": [
                      "booking",
                      "rebooking",
                      "cancelation"
                    ],
                    "properties": {
                      "booking": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      },
                      "rebooking": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      },
                      "cancelation": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "rental_car": {
                    "type": "object",
                    "required": [
                      "booking",
                      "rebooking",
                      "cancelation"
                    ],
                    "properties": {
                      "booking": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      },
                      "rebooking": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      },
                      "cancelation": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "train": {
                    "type": "object",
                    "required": [
                      "booking",
                      "rebooking",
                      "cancelation"
                    ],
                    "properties": {
                      "booking": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      },
                      "rebooking": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      },
                      "cancelation": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "value",
                            "comtravo_fee_source"
                          ],
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "comtravo_fee_source": {
                              "type": "string",
                              "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                              "enum": [
                                "online",
                                "offline"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "domestic_countries": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "continents": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "booking_fees": {
        "type": "object",
        "required": [
          "flight",
          "hotel",
          "rental_car",
          "train"
        ],
        "description": "Preferences regarding booking fees",
        "properties": {
          "flight": {
            "type": "object",
            "required": [
              "booking",
              "rebooking",
              "cancelation"
            ],
            "properties": {
              "booking": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "value",
                        "comtravo_fee_source"
                      ],
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "comtravo_fee_source": {
                          "type": "string",
                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                          "enum": [
                            "online",
                            "offline"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geography"
                      ],
                      "properties": {
                        "geography": {
                          "enum": [
                            "domestic",
                            "continental",
                            "others"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "rebooking": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "value",
                        "comtravo_fee_source"
                      ],
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "comtravo_fee_source": {
                          "type": "string",
                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                          "enum": [
                            "online",
                            "offline"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geography"
                      ],
                      "properties": {
                        "geography": {
                          "enum": [
                            "domestic",
                            "continental",
                            "others"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "cancelation": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "value",
                        "comtravo_fee_source"
                      ],
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "comtravo_fee_source": {
                          "type": "string",
                          "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                          "enum": [
                            "online",
                            "offline"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geography"
                      ],
                      "properties": {
                        "geography": {
                          "enum": [
                            "domestic",
                            "continental",
                            "others"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "hotel": {
            "type": "object",
            "required": [
              "booking",
              "rebooking",
              "cancelation"
            ],
            "properties": {
              "booking": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              },
              "rebooking": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              },
              "cancelation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              }
            }
          },
          "rental_car": {
            "type": "object",
            "required": [
              "booking",
              "rebooking",
              "cancelation"
            ],
            "properties": {
              "booking": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              },
              "rebooking": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              },
              "cancelation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              }
            }
          },
          "train": {
            "type": "object",
            "required": [
              "booking",
              "rebooking",
              "cancelation"
            ],
            "properties": {
              "booking": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              },
              "rebooking": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              },
              "cancelation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "integrations": {
        "type": "object",
        "properties": {
          "circula": {
            "type": "object",
            "description": "Circula integration detail.",
            "properties": {
              "token": {
                "type": "string",
                "description": "Circula integration token"
              }
            }
          }
        }
      },
      "bookingFeeFlightConfiguration": {
        "type": "object",
        "required": [
          "booking",
          "rebooking",
          "cancelation"
        ],
        "properties": {
          "booking": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "geography"
                  ],
                  "properties": {
                    "geography": {
                      "enum": [
                        "domestic",
                        "continental",
                        "others"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "rebooking": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "geography"
                  ],
                  "properties": {
                    "geography": {
                      "enum": [
                        "domestic",
                        "continental",
                        "others"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "cancelation": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "value",
                    "comtravo_fee_source"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "comtravo_fee_source": {
                      "type": "string",
                      "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                      "enum": [
                        "online",
                        "offline"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "geography"
                  ],
                  "properties": {
                    "geography": {
                      "enum": [
                        "domestic",
                        "continental",
                        "others"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "bookingFeeConfiguration": {
        "type": "object",
        "required": [
          "booking",
          "rebooking",
          "cancelation"
        ],
        "properties": {
          "booking": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "value",
                "comtravo_fee_source"
              ],
              "properties": {
                "value": {
                  "type": "number"
                },
                "comtravo_fee_source": {
                  "type": "string",
                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                  "enum": [
                    "online",
                    "offline"
                  ]
                }
              }
            }
          },
          "rebooking": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "value",
                "comtravo_fee_source"
              ],
              "properties": {
                "value": {
                  "type": "number"
                },
                "comtravo_fee_source": {
                  "type": "string",
                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                  "enum": [
                    "online",
                    "offline"
                  ]
                }
              }
            }
          },
          "cancelation": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "value",
                "comtravo_fee_source"
              ],
              "properties": {
                "value": {
                  "type": "number"
                },
                "comtravo_fee_source": {
                  "type": "string",
                  "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                  "enum": [
                    "online",
                    "offline"
                  ]
                }
              }
            }
          }
        }
      },
      "bookingFeeStandard": {
        "type": "object",
        "required": [
          "value",
          "comtravo_fee_source"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "comtravo_fee_source": {
            "type": "string",
            "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
            "enum": [
              "online",
              "offline"
            ]
          }
        }
      },
      "bookingFeeGeographyExtension": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "value",
              "comtravo_fee_source"
            ],
            "properties": {
              "value": {
                "type": "number"
              },
              "comtravo_fee_source": {
                "type": "string",
                "description": "Booking fee source used to check how the booking item was made/rebooked/cancelled,online is through OBE and offline is through an agent",
                "enum": [
                  "online",
                  "offline"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "geography"
            ],
            "properties": {
              "geography": {
                "enum": [
                  "domestic",
                  "continental",
                  "others"
                ]
              }
            }
          }
        ]
      },
      "communication_settings": {
        "type": "object",
        "required": [
          "confirmation",
          "invoice",
          "reminder"
        ],
        "description": "Settings that determine which persona receives which booking emails and documents.",
        "properties": {
          "confirmation": {
            "type": "string",
            "description": "Booking confirmation, itinerary, calendar invites",
            "enum": [
              "booker",
              "traveler and booker"
            ]
          },
          "invoice": {
            "type": "string",
            "enum": [
              "booker",
              "traveler and booker",
              "finance only"
            ]
          },
          "reminder": {
            "type": "string",
            "description": "Checkin reminder, sent out 24h prior to flight",
            "enum": [
              "traveler",
              "booker",
              "traveler and booker"
            ]
          }
        }
      },
      "collectiveInvoice": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "invoice_address",
          "invoice_start_date",
          "invoice_end_date",
          "date_of_issue"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "date_of_issue": {
            "type": "string",
            "format": "date"
          },
          "company_id": {
            "type": "string",
            "description": "ID of company the new collective invoice has been created for."
          },
          "invoice_address": {
            "description": "Specific invoice address of company the new collective invoice has been created for.",
            "allOf": [
              {
                "type": "object",
                "required": [
                  "city",
                  "country"
                ],
                "properties": {
                  "street_1": {
                    "type": "string"
                  },
                  "street_2": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "description": "2 letter ISO code"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "used along with latitude to define geographic coordinates."
                  },
                  "latitude": {
                    "type": "number",
                    "description": "used along with longitude to define geographic coordinates."
                  }
                }
              },
              {
                "type": "object",
                "description": "Company invoice address",
                "required": [
                  "company_name",
                  "office_name",
                  "status",
                  "invoice_overview_receivers",
                  "payment_method",
                  "billing_aggregation"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "to distinguish the type of invoice address"
                  },
                  "vat_id": {
                    "type": "string",
                    "description": "vat id, is mandatory for companies from countries supporting reverse charge."
                  },
                  "company_name": {
                    "type": "string",
                    "description": "name of the company"
                  },
                  "office_name": {
                    "type": "string",
                    "description": "name which must be unique within the invoice addresses list"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "description": "company should have at least one active invoice address"
                  },
                  "invoice_overview_receivers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Receiver email address that invoice overview report (eom) will be sent to. This address will only reiceive the reports that belong to its invoice address"
                    }
                  },
                  "payment_method": {
                    "type": "string",
                    "enum": [
                      "credit_card",
                      "invoice",
                      "sepa",
                      "airplus"
                    ],
                    "description": "The type of payment used"
                  },
                  "billing_aggregation": {
                    "type": "string",
                    "enum": [
                      "individual",
                      "monthly",
                      "semimonthly"
                    ]
                  }
                }
              }
            ]
          },
          "document_id": {
            "type": "string",
            "description": "The URL of already generated collective invoice document."
          },
          "invoice_start_date": {
            "type": "string",
            "format": "date"
          },
          "invoice_end_date": {
            "type": "string",
            "format": "date"
          },
          "invoice_number": {
            "type": "string"
          }
        }
      },
      "company.getCompaniesByIds.parameters": {
        "type": "array",
        "maxItems": 200,
        "items": {
          "type": "string"
        }
      },
      "traveler.getTravelersByIds.parameters": {
        "type": "array",
        "maxItems": 200,
        "items": {
          "type": "string"
        }
      }
    }
  }
